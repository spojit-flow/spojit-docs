{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Home"},{"location":"getting-started/","text":"Getting Started \u00b6 Spojit is a provider of intelligent automation and integration solutions for businesses of all sizes globally. Our intelligent business process management platform is an enterprise grade business process orchestration and automation platform for the most demanding enterprises across all industries including healthcare, banking, and government. Watch our short video about getting started or continue below: What is a workflow? \u00b6 A workflow is a sequence of steps, where each step is responsible for a unique function. The collection of steps coupled with data flow controls and connections between steps forms a workflow which represents a process. Process can be as simple as 'send a notification via SMS' or as complex as a home loan application. Workflow Designer \u00b6 The Spojit platform offers a visual designer where you can model, test, manage, and automate your processes. Our workflow designer allows you to add any number of services (steps) onto a canvas and connect them together, creating a logical sequence of steps. As a user, you have complete access to data at each step (both input and output data of each service). A process is modeled through a combination of services using the visual workflow designer. You add one or more services onto the canvas, and configure and connect those in order to model a process. Workflow designer allows you to schedule your workflows to run automatically at your specified times. Services \u00b6 Each service is an independent mini application facilitating a unique function (ie. send SMS, or fetch data from a server). Depending on complexity, a service may require configuration and/or authorization. For example a mailing service will require you to configure the email recipients, or the subject of the email. A http service usually requires you to add some kind of authorization. A service has an input data and output data, both of which you can control directly from the service configuration. Explore our services in the reference guide. Data Mapping \u00b6 A service input data can be mapped and transformed using a built-in mapper service which allows you to define your data structure (schema), map fields from other services, and also apply functions to transform the data. Explore our mapping functions in the reference guide. Output Data \u00b6 The Spojit platform generates service output schema for you automatically. You can however filter and change the data outputed by each service directly from the service 'OUTPUT' configuration. Data Flow Controls \u00b6 Data flow controls are special services which allow you to inject special logic into the workflow and which control the flow of the data. An example flow control would be a filter or an iterator. Filter allows you to conditionally allow or deny futher processing and iterator flow control allows you to work with arrays (data multiples; ie. many sales orders retrieved from a server via API). Explore our workflow controls in the reference guide. Workflow vs Templates \u00b6 All templates are essentially ready-made workflows with a well defined set of configuration options which you have access to and which you can modify. As an end user, you can modify existing steps, add new ones, and change configuration and flow of data however you like. Workflows give you complete access to process automation. Explore our popular prebuilt integration templates in the reference guide. Next steps \u00b6 Create a workflow","title":"Overview"},{"location":"getting-started/#getting-started","text":"Spojit is a provider of intelligent automation and integration solutions for businesses of all sizes globally. Our intelligent business process management platform is an enterprise grade business process orchestration and automation platform for the most demanding enterprises across all industries including healthcare, banking, and government. Watch our short video about getting started or continue below:","title":"Getting Started"},{"location":"getting-started/#what-is-a-workflow","text":"A workflow is a sequence of steps, where each step is responsible for a unique function. The collection of steps coupled with data flow controls and connections between steps forms a workflow which represents a process. Process can be as simple as 'send a notification via SMS' or as complex as a home loan application.","title":"What is a workflow?"},{"location":"getting-started/#workflow-designer","text":"The Spojit platform offers a visual designer where you can model, test, manage, and automate your processes. Our workflow designer allows you to add any number of services (steps) onto a canvas and connect them together, creating a logical sequence of steps. As a user, you have complete access to data at each step (both input and output data of each service). A process is modeled through a combination of services using the visual workflow designer. You add one or more services onto the canvas, and configure and connect those in order to model a process. Workflow designer allows you to schedule your workflows to run automatically at your specified times.","title":"Workflow Designer"},{"location":"getting-started/#services","text":"Each service is an independent mini application facilitating a unique function (ie. send SMS, or fetch data from a server). Depending on complexity, a service may require configuration and/or authorization. For example a mailing service will require you to configure the email recipients, or the subject of the email. A http service usually requires you to add some kind of authorization. A service has an input data and output data, both of which you can control directly from the service configuration. Explore our services in the reference guide.","title":"Services"},{"location":"getting-started/#data-mapping","text":"A service input data can be mapped and transformed using a built-in mapper service which allows you to define your data structure (schema), map fields from other services, and also apply functions to transform the data. Explore our mapping functions in the reference guide.","title":"Data Mapping"},{"location":"getting-started/#output-data","text":"The Spojit platform generates service output schema for you automatically. You can however filter and change the data outputed by each service directly from the service 'OUTPUT' configuration.","title":"Output Data"},{"location":"getting-started/#data-flow-controls","text":"Data flow controls are special services which allow you to inject special logic into the workflow and which control the flow of the data. An example flow control would be a filter or an iterator. Filter allows you to conditionally allow or deny futher processing and iterator flow control allows you to work with arrays (data multiples; ie. many sales orders retrieved from a server via API). Explore our workflow controls in the reference guide.","title":"Data Flow Controls"},{"location":"getting-started/#workflow-vs-templates","text":"All templates are essentially ready-made workflows with a well defined set of configuration options which you have access to and which you can modify. As an end user, you can modify existing steps, add new ones, and change configuration and flow of data however you like. Workflows give you complete access to process automation. Explore our popular prebuilt integration templates in the reference guide.","title":"Workflow vs Templates"},{"location":"getting-started/#next-steps","text":"Create a workflow","title":"Next steps"},{"location":"getting-started/introduction/","text":"Spojit Introduction \u00b6 About Spojit \u00b6 Spojit is a provider of intelligent automation and integration solutions for businesses of all sizes globally. Our intelligent Process Orchestration Platform (iPOP) is an enterprise grade business process orchestration and automation platform for the most demanding enterprises across all industries including healthcare, banking, and government. Through a security-first, unparalleled extensibility and run-anywhere approach, iPOP helps your enterprise break the most significant barriers to connectivity and IoT adoption and enables you to seamlessly enter the new digital era. To help you get ahead and stay ahead of the competition, the platform leverages and offers machine learning and artificial intelligence (AI) driven solutions helping you automate business critical processes and gain deeper insights into the operations of your business. Features \u00b6 Efficient \u00b6 Significantly reduce operating costs and improve efficiencies through process automation by effectively eliminating human errors and increasing workload capacity Flexible \u00b6 Improve flexibility in business systems choice via extensive range of automation solutions suitable for modern cloud applications, legacy and/or on-premises applications, and Internet of Things connected devices. Agile \u00b6 Stay ahead of competition and make smarter informed decisions using iPOP\u2019s AI-driven predictive analysis engine. Stay agile by using rapid prototyping to quickly evaluate new systems and business processes. Extensible \u00b6 iPOP\u2019s unparalleled extensibility gives your enterprise the flexibility needed to stay competitive in today\u2019s fast-paced market. Use complete sets of pre-built process orchestration suites or pick and choose only the ones your business benefits from. Build your own suites extending the capabilities of iPOP to tailor the platform to your enterprise needs. Scalable \u00b6 Run anywhere approach means your enterprise does not have to compromise. Deploy in your existing on-premises or cloud infrastructure, let us deploy and fully manage for you in virtual private cloud, or use our multi-tenant cloud offering. Time-based Pricing \u00b6 Pay only for what you use. iPOP\u2019s architecture allows us to offer you competitive time-based pricing calculated down to the millisecond.","title":"Getting Started"},{"location":"getting-started/introduction/#spojit-introduction","text":"","title":"Spojit Introduction"},{"location":"getting-started/introduction/#about-spojit","text":"Spojit is a provider of intelligent automation and integration solutions for businesses of all sizes globally. Our intelligent Process Orchestration Platform (iPOP) is an enterprise grade business process orchestration and automation platform for the most demanding enterprises across all industries including healthcare, banking, and government. Through a security-first, unparalleled extensibility and run-anywhere approach, iPOP helps your enterprise break the most significant barriers to connectivity and IoT adoption and enables you to seamlessly enter the new digital era. To help you get ahead and stay ahead of the competition, the platform leverages and offers machine learning and artificial intelligence (AI) driven solutions helping you automate business critical processes and gain deeper insights into the operations of your business.","title":"About Spojit"},{"location":"getting-started/introduction/#features","text":"","title":"Features"},{"location":"getting-started/introduction/#efficient","text":"Significantly reduce operating costs and improve efficiencies through process automation by effectively eliminating human errors and increasing workload capacity","title":"Efficient"},{"location":"getting-started/introduction/#flexible","text":"Improve flexibility in business systems choice via extensive range of automation solutions suitable for modern cloud applications, legacy and/or on-premises applications, and Internet of Things connected devices.","title":"Flexible"},{"location":"getting-started/introduction/#agile","text":"Stay ahead of competition and make smarter informed decisions using iPOP\u2019s AI-driven predictive analysis engine. Stay agile by using rapid prototyping to quickly evaluate new systems and business processes.","title":"Agile"},{"location":"getting-started/introduction/#extensible","text":"iPOP\u2019s unparalleled extensibility gives your enterprise the flexibility needed to stay competitive in today\u2019s fast-paced market. Use complete sets of pre-built process orchestration suites or pick and choose only the ones your business benefits from. Build your own suites extending the capabilities of iPOP to tailor the platform to your enterprise needs.","title":"Extensible"},{"location":"getting-started/introduction/#scalable","text":"Run anywhere approach means your enterprise does not have to compromise. Deploy in your existing on-premises or cloud infrastructure, let us deploy and fully manage for you in virtual private cloud, or use our multi-tenant cloud offering.","title":"Scalable"},{"location":"getting-started/introduction/#time-based-pricing","text":"Pay only for what you use. iPOP\u2019s architecture allows us to offer you competitive time-based pricing calculated down to the millisecond.","title":"Time-based Pricing"},{"location":"getting-started/workflows/add-service/","text":"Accessing Service Library \u00b6 Services are the building blocks of workflows. To add a service, click the 'SERVICES' button from the toolbar above the canvas. Our Service Library will open in new window where you can search available services. Adding a service \u00b6 You will notice that services which do not require configuration can be added directly onto the canvas via the 'ADD' button at the bottom of each service card. Simply clicking the 'ADD' button will hide the Service Library and add your selected service onto the canvas. Services requiring configuration will present a Configuration screen before allowing you to add a service onto the canvas, however, completing the configuration is not mandatory. You can add such service from the Configuration screen by clicking the 'Save and Add' button at the top of that screen. Configuration can be completed later from the service settings accessible from the canvas. Next steps \u00b6 Connect your services","title":"Add a service"},{"location":"getting-started/workflows/add-service/#accessing-service-library","text":"Services are the building blocks of workflows. To add a service, click the 'SERVICES' button from the toolbar above the canvas. Our Service Library will open in new window where you can search available services.","title":"Accessing Service Library"},{"location":"getting-started/workflows/add-service/#adding-a-service","text":"You will notice that services which do not require configuration can be added directly onto the canvas via the 'ADD' button at the bottom of each service card. Simply clicking the 'ADD' button will hide the Service Library and add your selected service onto the canvas. Services requiring configuration will present a Configuration screen before allowing you to add a service onto the canvas, however, completing the configuration is not mandatory. You can add such service from the Configuration screen by clicking the 'Save and Add' button at the top of that screen. Configuration can be completed later from the service settings accessible from the canvas.","title":"Adding a service"},{"location":"getting-started/workflows/add-service/#next-steps","text":"Connect your services","title":"Next steps"},{"location":"getting-started/workflows/connect-services/","text":"Connecting via grab and drag \u00b6 Connecting services is as easy as hovering over your start service, grabing a connection start point and dragging towards your end service you wish to connect. When you hover over a service, you will notice a square at the middle-right side of the service boundary. To initiate a connection, click and hold onto the square, then move your mouse towards the middle of the target service where you want your connection to end. You should see a connecting line following your mouse. When your mouse reaches the middle point of the target service, the connection will snap into place and you can release your mouse. Next steps \u00b6 Run your workflow","title":"Connect services"},{"location":"getting-started/workflows/connect-services/#connecting-via-grab-and-drag","text":"Connecting services is as easy as hovering over your start service, grabing a connection start point and dragging towards your end service you wish to connect. When you hover over a service, you will notice a square at the middle-right side of the service boundary. To initiate a connection, click and hold onto the square, then move your mouse towards the middle of the target service where you want your connection to end. You should see a connecting line following your mouse. When your mouse reaches the middle point of the target service, the connection will snap into place and you can release your mouse.","title":"Connecting via grab and drag"},{"location":"getting-started/workflows/connect-services/#next-steps","text":"Run your workflow","title":"Next steps"},{"location":"getting-started/workflows/create-workflow/","text":"Build a workflow from scratch \u00b6 To create a new workflow from scratch, log in to your account and on the main menu navigate to Integrations. Select 'BLANK WORKFLOW' from the button options at the top right of your screen and click the button. This will open up a workflow designer where you can start by adding and connecting services. Build a workflow from a template \u00b6 Integrations created using our wizard can be converted to a workflow. To convert an integration to a workflow and start editing it in our workflow designer, simply find your integration on the 'Integrations' table and click the orange workflow icon. This will launch our workflow designer with your integration in it. To complete the conversion, simply save the workflow via the button at the top right of your screen. Next steps \u00b6 Add a service","title":"Create a workflow"},{"location":"getting-started/workflows/create-workflow/#build-a-workflow-from-scratch","text":"To create a new workflow from scratch, log in to your account and on the main menu navigate to Integrations. Select 'BLANK WORKFLOW' from the button options at the top right of your screen and click the button. This will open up a workflow designer where you can start by adding and connecting services.","title":"Build a workflow from scratch"},{"location":"getting-started/workflows/create-workflow/#build-a-workflow-from-a-template","text":"Integrations created using our wizard can be converted to a workflow. To convert an integration to a workflow and start editing it in our workflow designer, simply find your integration on the 'Integrations' table and click the orange workflow icon. This will launch our workflow designer with your integration in it. To complete the conversion, simply save the workflow via the button at the top right of your screen.","title":"Build a workflow from a template"},{"location":"getting-started/workflows/create-workflow/#next-steps","text":"Add a service","title":"Next steps"},{"location":"getting-started/workflows/run-workflow/","text":"Run your workflow \u00b6 While in worfklow designer, switch the button option at the top right of your screen to 'Edit Workflow'. Workflow detail page will open with multiple tabs. Switch to 'Run Now' tab and press the 'Run Now' button to start the workflow. To see result of the workflow run, switch to 'Logs' tab. You can also start your workflow with a schedule or a webhook Next steps \u00b6 Configure your workflow Edit basic information Add a schedule Turn on webhooks View your logs","title":"Run workflow"},{"location":"getting-started/workflows/run-workflow/#run-your-workflow","text":"While in worfklow designer, switch the button option at the top right of your screen to 'Edit Workflow'. Workflow detail page will open with multiple tabs. Switch to 'Run Now' tab and press the 'Run Now' button to start the workflow. To see result of the workflow run, switch to 'Logs' tab. You can also start your workflow with a schedule or a webhook","title":"Run your workflow"},{"location":"getting-started/workflows/run-workflow/#next-steps","text":"Configure your workflow Edit basic information Add a schedule Turn on webhooks View your logs","title":"Next steps"},{"location":"getting-started/workflows/configuration/basic-info/","text":"Give your workflow a unique name Basic workflow info tab allows you to edit the name, description and also the category of given workflow. You can set multiple categories to an workflow for easy classification and search. We also recommend changing the name of your workflow to something specific for easier search as you keep adding more and more workflows. Instructions \u00b6 1. Log in to your account \u00b6 2. Access 'My Automations' page \u00b6 You can access the page via the main menu by expanding the 'Automations' menu item and selecting 'My Automations'. You should see a table listing all your workflows here. 3. Enter 'Edit Workflow' page \u00b6 Enter the Edit workflow screen by clicking on the blue \u2018workflow\u2019 icon button at the end of a table row. 4. Edit details \u00b6 The Basic Info tab allows you to change the name and description of the workflow as well as the workflow category. To enter new workflow category, type in the name of a category and press enter on your keyboard. You can add more than one category to a workflow. 5. Save changes \u00b6 Don't forget to save your changes. The \u2018Save\u2019 button can be found in the header of the Edit workflow screen (top right corner) and is enabled when you modify any values of the workflow.","title":"Basic info"},{"location":"getting-started/workflows/configuration/basic-info/#instructions","text":"","title":"Instructions"},{"location":"getting-started/workflows/configuration/basic-info/#1-log-in-to-your-account","text":"","title":"1. Log in to your account"},{"location":"getting-started/workflows/configuration/basic-info/#2-access-my-automations-page","text":"You can access the page via the main menu by expanding the 'Automations' menu item and selecting 'My Automations'. You should see a table listing all your workflows here.","title":"2. Access 'My Automations' page"},{"location":"getting-started/workflows/configuration/basic-info/#3-enter-edit-workflow-page","text":"Enter the Edit workflow screen by clicking on the blue \u2018workflow\u2019 icon button at the end of a table row.","title":"3. Enter 'Edit Workflow' page"},{"location":"getting-started/workflows/configuration/basic-info/#4-edit-details","text":"The Basic Info tab allows you to change the name and description of the workflow as well as the workflow category. To enter new workflow category, type in the name of a category and press enter on your keyboard. You can add more than one category to a workflow.","title":"4. Edit details"},{"location":"getting-started/workflows/configuration/basic-info/#5-save-changes","text":"Don't forget to save your changes. The \u2018Save\u2019 button can be found in the header of the Edit workflow screen (top right corner) and is enabled when you modify any values of the workflow.","title":"5. Save changes"},{"location":"getting-started/workflows/configuration/logs/","text":"Logs Each workflow in your account provides you with logs of each and every run. These logs can be accessed from the Edit workflow screen and give you an overview of the dates and times when the workflow ran as well as the result of the run such as a success status or an error with a detailed reason of the error. You can also view behind the scenes requests which your integration performed with full request/response logs. Instructions \u00b6 1. Log in to your account \u00b6 2. Access 'My Automations' page \u00b6 You can access the page via the main menu by expanding the 'Automations' menu item and selecting 'My Automations'. You should see a table listing all your workflows here. 3. Enter 'Edit Workflow' page \u00b6 Enter the Edit workflow screen by clicking on the blue \u2018workflow\u2019 icon button at the end of a table row. Switch to 'Logs' tab. 4. Expand logs table to view detailed request/response logs \u00b6 To view individual request logs, expand the log table row and click on the blue \u2018eye\u2019 icon button.","title":"Logs"},{"location":"getting-started/workflows/configuration/logs/#instructions","text":"","title":"Instructions"},{"location":"getting-started/workflows/configuration/logs/#1-log-in-to-your-account","text":"","title":"1. Log in to your account"},{"location":"getting-started/workflows/configuration/logs/#2-access-my-automations-page","text":"You can access the page via the main menu by expanding the 'Automations' menu item and selecting 'My Automations'. You should see a table listing all your workflows here.","title":"2. Access 'My Automations' page"},{"location":"getting-started/workflows/configuration/logs/#3-enter-edit-workflow-page","text":"Enter the Edit workflow screen by clicking on the blue \u2018workflow\u2019 icon button at the end of a table row. Switch to 'Logs' tab.","title":"3. Enter 'Edit Workflow' page"},{"location":"getting-started/workflows/configuration/logs/#4-expand-logs-table-to-view-detailed-requestresponse-logs","text":"To view individual request logs, expand the log table row and click on the blue \u2018eye\u2019 icon button.","title":"4. Expand logs table to view detailed request/response logs"},{"location":"getting-started/workflows/configuration/schedule/","text":"Schedule info Spojit platform supports two types of schedules : Periodic: allows you to set an workflow to run in specified intervals (every X minutes or hours) Time based: allows you to set an workflow to run once per day at specified time Schedule starting point : Each schedule requires you to specify a schedule activation start date and time ('Activate On' field). This can be set to any future date/time and indicates the starting point of the schedule. Time awareness : Periodic schedule is time aware which means if you set your schedule to start at 5:55 am running every 1 hour, the workflow will run at 5:55 am, 6:55 am, etc. The same schedule running every 7 minutes would run at 5:55 am, 6:02 am, 6:09 am etc. Locale awareness : The date and time you enter into your scheduler is in the time zone of your account. You can change the time zone in My Account settings, \u2018Preferences\u2019 tab. Instructions \u00b6 1. Log in to your account \u00b6 2. Access 'My Automations' page \u00b6 You can access the page via the main menu by expanding the 'Automations' menu item and selecting 'My Automations'. You should see a table listing all your workflows here. 3. Enter 'Edit Workflow' page \u00b6 Enter the Edit Workflow screen by clicking on the blue \u2018workflow\u2019 icon button at the end of a table row. Switch to 'Schedule' tab. 4. Activate schedule and set initial date/time \u00b6 Tick the checkbox next to Activate on field and set the \u2018Activate on\u2019 date and time. The 'Activate On' date and time specifies the starting point of the workflow schedule - from this date/time, the scheduler will be automatically running the workflow as per the schedule specified (periodically, or daily at specified time) 5. Set recurrence \u00b6 Select your preferred schedule (period - every X minutes/hours OR daily at specified time) and configure.You can see a textual representation of the schedule as you continue configuring. 6. Save changes \u00b6 Don't forget to save your changes. The \u2018Save\u2019 button can be found in the header of the Edit workflow screen (top right corner).","title":"Schedule"},{"location":"getting-started/workflows/configuration/schedule/#instructions","text":"","title":"Instructions"},{"location":"getting-started/workflows/configuration/schedule/#1-log-in-to-your-account","text":"","title":"1. Log in to your account"},{"location":"getting-started/workflows/configuration/schedule/#2-access-my-automations-page","text":"You can access the page via the main menu by expanding the 'Automations' menu item and selecting 'My Automations'. You should see a table listing all your workflows here.","title":"2. Access 'My Automations' page"},{"location":"getting-started/workflows/configuration/schedule/#3-enter-edit-workflow-page","text":"Enter the Edit Workflow screen by clicking on the blue \u2018workflow\u2019 icon button at the end of a table row. Switch to 'Schedule' tab.","title":"3. Enter 'Edit Workflow' page"},{"location":"getting-started/workflows/configuration/schedule/#4-activate-schedule-and-set-initial-datetime","text":"Tick the checkbox next to Activate on field and set the \u2018Activate on\u2019 date and time. The 'Activate On' date and time specifies the starting point of the workflow schedule - from this date/time, the scheduler will be automatically running the workflow as per the schedule specified (periodically, or daily at specified time)","title":"4. Activate schedule and set initial date/time"},{"location":"getting-started/workflows/configuration/schedule/#5-set-recurrence","text":"Select your preferred schedule (period - every X minutes/hours OR daily at specified time) and configure.You can see a textual representation of the schedule as you continue configuring.","title":"5. Set recurrence"},{"location":"getting-started/workflows/configuration/schedule/#6-save-changes","text":"Don't forget to save your changes. The \u2018Save\u2019 button can be found in the header of the Edit workflow screen (top right corner).","title":"6. Save changes"},{"location":"getting-started/workflows/configuration/webhook/","text":"Webhooks - what are they? https://en.wikipedia.org/wiki/Webhook In simple terms, there are two main ways in which applications on the web communicate and share information - either by polling or using webhooks. Polling refers to one application periodically asking another if something happened. This requires a scheduler and can be inefficient as there may not be any updates in the requested period. Webhook on the other hand refers to one application sending information to another when something happens, essentially near real-time callbacks/notifications of changes. Simplified Example: Keeping inventory levels in sync between online shop and warehouse system. Polling/Schedule: Online store asks warehouse system every 10 minutes if there are any stock updates. Webhook: Warehouse system sends notification to online store every time there is an update to stock levels in the warehouse. Spojit platform allows you to generate a unique webhook URL for an workflow which can then be entered into a 3 rd party system (ie. the Warehouse system from the example above) so that every time there is an update in the warehouse, the warehouse app sends info to the provided URL which in turn starts your integration. Instructions \u00b6 1. Log in to your account \u00b6 2. Access 'My Automations' page \u00b6 You can access the page via the main menu by expanding the 'Automations' menu item and selecting 'My Automatons'. You should see a table listing all your workflows here. 3. Enter 'Edit Workflow' page \u00b6 Enter the Edit workflow screen by clicking on the blue \u2018workflow\u2019 icon button at the end of a table row. Switch to 'Webhook' tab. 4. Enable webhook, note URL \u00b6 Enable webhook by switching the \u2018Enabled\u2019 toggle at the top of the page. This will generate a unique URL for your workflow which you can enter into 3 rd party system. 5. Save changes \u00b6 Don't forget to save your changes. The \u2018Save\u2019 button can be found in the header of the Edit workflow screen (top right corner).","title":"Webhook"},{"location":"getting-started/workflows/configuration/webhook/#instructions","text":"","title":"Instructions"},{"location":"getting-started/workflows/configuration/webhook/#1-log-in-to-your-account","text":"","title":"1. Log in to your account"},{"location":"getting-started/workflows/configuration/webhook/#2-access-my-automations-page","text":"You can access the page via the main menu by expanding the 'Automations' menu item and selecting 'My Automatons'. You should see a table listing all your workflows here.","title":"2. Access 'My Automations' page"},{"location":"getting-started/workflows/configuration/webhook/#3-enter-edit-workflow-page","text":"Enter the Edit workflow screen by clicking on the blue \u2018workflow\u2019 icon button at the end of a table row. Switch to 'Webhook' tab.","title":"3. Enter 'Edit Workflow' page"},{"location":"getting-started/workflows/configuration/webhook/#4-enable-webhook-note-url","text":"Enable webhook by switching the \u2018Enabled\u2019 toggle at the top of the page. This will generate a unique URL for your workflow which you can enter into 3 rd party system.","title":"4. Enable webhook, note URL"},{"location":"getting-started/workflows/configuration/webhook/#5-save-changes","text":"Don't forget to save your changes. The \u2018Save\u2019 button can be found in the header of the Edit workflow screen (top right corner).","title":"5. Save changes"},{"location":"reference/","text":"Reference Guide \u00b6 The Spojit platform is packed with many great features that can transfer or modify your data. This reference guide will show information/details about mapping functions to transform your data, services and controls that you are able to use for your workflow and finally some of our prebuilt integration templates to get you started quickly.","title":"Reference Guide"},{"location":"reference/#reference-guide","text":"The Spojit platform is packed with many great features that can transfer or modify your data. This reference guide will show information/details about mapping functions to transform your data, services and controls that you are able to use for your workflow and finally some of our prebuilt integration templates to get you started quickly.","title":"Reference Guide"},{"location":"reference/flow-controls/","text":"Flow Controls \u00b6 Data flow controls are special services which allow you to inject special logic into the workflow and which control the flow of the data.","title":"Flow Controls"},{"location":"reference/flow-controls/#flow-controls","text":"Data flow controls are special services which allow you to inject special logic into the workflow and which control the flow of the data.","title":"Flow Controls"},{"location":"reference/flow-controls/filter/","text":"Before you begin In order to use the features in this section you need to have an active Spojit account. If you don't have an account you can checkout out the pricing and register here . If you already have an account you can login here . This service will allow a path to be filtered in the workflow based on a condition. Filtering the path \u00b6 If the condtion in the configuration evalutes to \"true\" the path will continue as normal. If the condition evaluates to \"false\" the path will be skipped from that point forward. Option Description Default Required Condition The conditions being evaluated. - TRUE Important Strings need to surrounded by double quotes in order to evaluate correctly. You can also use brackets to enforce order of operations. Conditions \u00b6 Condition Description Example Result == Equals 1 == 1 TRUE != Not equals 1 != 1 FALSE >= Greater than or equals to 3 >= 1 TRUE <= Less than or equals to 5 <= 1 FALSE > Greater than 3 > 1 TRUE < Less than 5 < 10 TRUE in Is a value in array 3 in [4, 3] TRUE and AND operator ((\"status\" == \"status\") and (\"order\" == \"order\")) TRUE or OR operator ((1 == 1) or (5 > 5)) TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the filter to add a condition. The filter doesn't require any service data setup. The filter doesn't output any data.","title":"Filter"},{"location":"reference/flow-controls/filter/#filtering-the-path","text":"If the condtion in the configuration evalutes to \"true\" the path will continue as normal. If the condition evaluates to \"false\" the path will be skipped from that point forward. Option Description Default Required Condition The conditions being evaluated. - TRUE Important Strings need to surrounded by double quotes in order to evaluate correctly. You can also use brackets to enforce order of operations.","title":"Filtering the path"},{"location":"reference/flow-controls/filter/#conditions","text":"Condition Description Example Result == Equals 1 == 1 TRUE != Not equals 1 != 1 FALSE >= Greater than or equals to 3 >= 1 TRUE <= Less than or equals to 5 <= 1 FALSE > Greater than 3 > 1 TRUE < Less than 5 < 10 TRUE in Is a value in array 3 in [4, 3] TRUE and AND operator ((\"status\" == \"status\") and (\"order\" == \"order\")) TRUE or OR operator ((1 == 1) or (5 > 5)) TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the filter to add a condition. The filter doesn't require any service data setup. The filter doesn't output any data.","title":"Conditions"},{"location":"reference/flow-controls/iterator/","text":"Before you begin In order to use the features in this section you need to have an active Spojit account. If you don't have an account you can checkout out the pricing and register here . If you already have an account you can login here . This service can facilitate the parallel processing of a collection of items. The service itself can consist of two separate services within the application: fork and join . A scenario where this could be useful is if you receive a list of products from a webhook and need to retrieve the SKU of each product. We could use the iterator to go through the collection of product and retreive the SKU information before continuing. In order to get this scenario to work you would add an iterator fork on to the canvas. The fork would be split the collection and process each route in parallel. A service would be set up on the route for the task to request the SKU for each product. We would then add an iterator join before continuing with the workflow. The scenario could look like this on the canvas (where Start is the incoming webhook and End is the continuation of the workflow): graph LR A[Start] --> B{FORK} B -->|Get SKU info| C[HTTP GET Request] C --> F F{JOIN} --> G[End] Configuration \u00b6 When added to the canvas the fork only requires the following to work: Option Description Default Required Iteration Array The array to be iterated over. - TRUE There is no configuration for the join . Important The collection added to the configuration must be an array of objects. Tip The iterator does not specifically need a join in order to work and will finish without any issues. The join makes a synchronous workflow outside of iterating processing by waiting until all of the collection is complete before continuing. Omitting the join will lead to an asynchronous workflow where the split routes could continue in any order. Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to add an collection (array) to be iterated in the fork : This service doesn't require any service data setup. The output of the fork service will be the invidual object for the iteration. Given the following iteration collection: [ { \"id\" : 1 , \"name\" : \"Leanne Graham\" , \"username\" : \"Bret\" , \"email\" : \"Sincere@april.biz\" , \"address\" : { \"street\" : \"Kulas Light\" , \"suite\" : \"Apt. 556\" , \"city\" : \"Gwenborough\" , \"zipcode\" : \"92998-3874\" , \"geo\" : { \"lat\" : \"-37.3159\" , \"lng\" : \"81.1496\" } }, \"phone\" : \"1-770-736-8031 x56442\" , \"website\" : \"hildegard.org\" , \"company\" : { \"name\" : \"Romaguera-Crona\" , \"catchPhrase\" : \"Multi-layered client-server neural-net\" , \"bs\" : \"harness real-time e-markets\" } }, { \"id\" : 2 , \"name\" : \"Ervin Howell\" , \"username\" : \"Antonette\" , \"email\" : \"Shanna@melissa.tv\" , \"address\" : { \"street\" : \"Victor Plains\" , \"suite\" : \"Suite 879\" , \"city\" : \"Wisokyburgh\" , \"zipcode\" : \"90566-7771\" , \"geo\" : { \"lat\" : \"-43.9509\" , \"lng\" : \"-34.4618\" } }, \"phone\" : \"010-692-6593 x09125\" , \"website\" : \"anastasia.net\" , \"company\" : { \"name\" : \"Deckow-Crist\" , \"catchPhrase\" : \"Proactive didactic contingency\" , \"bs\" : \"synergize scalable supply-chains\" } }, { \"id\" : 3 , \"name\" : \"Clementine Bauch\" , \"username\" : \"Samantha\" , \"email\" : \"Nathan@yesenia.net\" , \"address\" : { \"street\" : \"Douglas Extension\" , \"suite\" : \"Suite 847\" , \"city\" : \"McKenziehaven\" , \"zipcode\" : \"59590-4157\" , \"geo\" : { \"lat\" : \"-68.6102\" , \"lng\" : \"-47.0653\" } }, \"phone\" : \"1-463-123-4447\" , \"website\" : \"ramiro.info\" , \"company\" : { \"name\" : \"Romaguera-Jacobson\" , \"catchPhrase\" : \"Face to face bifurcated interface\" , \"bs\" : \"e-enable strategic applications\" } } ] The output for the first iteration would be: { \"data\" : { \"id\" : 1 , \"name\" : \"Leanne Graham\" , \"username\" : \"Bret\" , \"email\" : \"Sincere@april.biz\" , \"address\" : { \"street\" : \"Kulas Light\" , \"suite\" : \"Apt. 556\" , \"city\" : \"Gwenborough\" , \"zipcode\" : \"92998-3874\" , \"geo\" : { \"lat\" : \"-37.3159\" , \"lng\" : \"81.1496\" } }, \"phone\" : \"1-770-736-8031 x56442\" , \"website\" : \"hildegard.org\" , \"company\" : { \"name\" : \"Romaguera-Crona\" , \"catchPhrase\" : \"Multi-layered client-server neural-net\" , \"bs\" : \"harness real-time e-markets\" } }, \"metadata\" :{} } And the second would be: { \"data\" : { \"id\" : 2 , \"name\" : \"Ervin Howell\" , \"username\" : \"Antonette\" , \"email\" : \"Shanna@melissa.tv\" , \"address\" : { \"street\" : \"Victor Plains\" , \"suite\" : \"Suite 879\" , \"city\" : \"Wisokyburgh\" , \"zipcode\" : \"90566-7771\" , \"geo\" : { \"lat\" : \"-43.9509\" , \"lng\" : \"-34.4618\" } }, \"phone\" : \"010-692-6593 x09125\" , \"website\" : \"anastasia.net\" , \"company\" : { \"name\" : \"Deckow-Crist\" , \"catchPhrase\" : \"Proactive didactic contingency\" , \"bs\" : \"synergize scalable supply-chains\" } }, \"metadata\" :{} } And so on...","title":"Iterator"},{"location":"reference/flow-controls/iterator/#configuration","text":"When added to the canvas the fork only requires the following to work: Option Description Default Required Iteration Array The array to be iterated over. - TRUE There is no configuration for the join . Important The collection added to the configuration must be an array of objects. Tip The iterator does not specifically need a join in order to work and will finish without any issues. The join makes a synchronous workflow outside of iterating processing by waiting until all of the collection is complete before continuing. Omitting the join will lead to an asynchronous workflow where the split routes could continue in any order. Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to add an collection (array) to be iterated in the fork : This service doesn't require any service data setup. The output of the fork service will be the invidual object for the iteration. Given the following iteration collection: [ { \"id\" : 1 , \"name\" : \"Leanne Graham\" , \"username\" : \"Bret\" , \"email\" : \"Sincere@april.biz\" , \"address\" : { \"street\" : \"Kulas Light\" , \"suite\" : \"Apt. 556\" , \"city\" : \"Gwenborough\" , \"zipcode\" : \"92998-3874\" , \"geo\" : { \"lat\" : \"-37.3159\" , \"lng\" : \"81.1496\" } }, \"phone\" : \"1-770-736-8031 x56442\" , \"website\" : \"hildegard.org\" , \"company\" : { \"name\" : \"Romaguera-Crona\" , \"catchPhrase\" : \"Multi-layered client-server neural-net\" , \"bs\" : \"harness real-time e-markets\" } }, { \"id\" : 2 , \"name\" : \"Ervin Howell\" , \"username\" : \"Antonette\" , \"email\" : \"Shanna@melissa.tv\" , \"address\" : { \"street\" : \"Victor Plains\" , \"suite\" : \"Suite 879\" , \"city\" : \"Wisokyburgh\" , \"zipcode\" : \"90566-7771\" , \"geo\" : { \"lat\" : \"-43.9509\" , \"lng\" : \"-34.4618\" } }, \"phone\" : \"010-692-6593 x09125\" , \"website\" : \"anastasia.net\" , \"company\" : { \"name\" : \"Deckow-Crist\" , \"catchPhrase\" : \"Proactive didactic contingency\" , \"bs\" : \"synergize scalable supply-chains\" } }, { \"id\" : 3 , \"name\" : \"Clementine Bauch\" , \"username\" : \"Samantha\" , \"email\" : \"Nathan@yesenia.net\" , \"address\" : { \"street\" : \"Douglas Extension\" , \"suite\" : \"Suite 847\" , \"city\" : \"McKenziehaven\" , \"zipcode\" : \"59590-4157\" , \"geo\" : { \"lat\" : \"-68.6102\" , \"lng\" : \"-47.0653\" } }, \"phone\" : \"1-463-123-4447\" , \"website\" : \"ramiro.info\" , \"company\" : { \"name\" : \"Romaguera-Jacobson\" , \"catchPhrase\" : \"Face to face bifurcated interface\" , \"bs\" : \"e-enable strategic applications\" } } ] The output for the first iteration would be: { \"data\" : { \"id\" : 1 , \"name\" : \"Leanne Graham\" , \"username\" : \"Bret\" , \"email\" : \"Sincere@april.biz\" , \"address\" : { \"street\" : \"Kulas Light\" , \"suite\" : \"Apt. 556\" , \"city\" : \"Gwenborough\" , \"zipcode\" : \"92998-3874\" , \"geo\" : { \"lat\" : \"-37.3159\" , \"lng\" : \"81.1496\" } }, \"phone\" : \"1-770-736-8031 x56442\" , \"website\" : \"hildegard.org\" , \"company\" : { \"name\" : \"Romaguera-Crona\" , \"catchPhrase\" : \"Multi-layered client-server neural-net\" , \"bs\" : \"harness real-time e-markets\" } }, \"metadata\" :{} } And the second would be: { \"data\" : { \"id\" : 2 , \"name\" : \"Ervin Howell\" , \"username\" : \"Antonette\" , \"email\" : \"Shanna@melissa.tv\" , \"address\" : { \"street\" : \"Victor Plains\" , \"suite\" : \"Suite 879\" , \"city\" : \"Wisokyburgh\" , \"zipcode\" : \"90566-7771\" , \"geo\" : { \"lat\" : \"-43.9509\" , \"lng\" : \"-34.4618\" } }, \"phone\" : \"010-692-6593 x09125\" , \"website\" : \"anastasia.net\" , \"company\" : { \"name\" : \"Deckow-Crist\" , \"catchPhrase\" : \"Proactive didactic contingency\" , \"bs\" : \"synergize scalable supply-chains\" } }, \"metadata\" :{} } And so on...","title":"Configuration"},{"location":"reference/flow-controls/parallel-gateway/","text":"Before you begin In order to use the features in this section you need to have an active Spojit account. If you don't have an account you can checkout out the pricing and register here . If you already have an account you can login here . This service can facilitate the parallel processing of multiple routes. The service itself can consist of two separate services within the application: fork and join . A scenario where this could be useful is if you receive an online order from a webhook and you need to send the order and tracking information to a dropshipper. In the webhook itself there is no customer or product information which is needed and a tracking number has not been generated. We could use the parallel gateway to retreive the product and customer information and send the request to get a new tracking number at the same time before sending the information to the dropshipper. In order to get this scenario to work you would add a parallel gateway fork and three HTTP request services on to the canvas. The fork would be joined to prior services and would have three routes (one to each HTTP service). The services would be set up for the relevant task (getting product information, getting customer information, creating a tracking number). We would then add a parallel gateway join and add a route from each service to it before continuing with the workflow. The scenario could look like this on the canvas (where Start is the incoming webhook and End is the sending of the data to the dropshipper): graph LR A[Start] --> B{FORK} B -->|Get product info| C[HTTP GET Request] B -->|Get customer info| D[HTTP GET Request] B -->|Create tracking number| E[HTTP POST Request] C --> F D --> F E --> F F{JOIN} --> G[End] Configuration \u00b6 When added to the canvas the fork parallel gateway service will be automatic and not require any further configuration. Tip The parallel gateway does not specifically need a join in order to work and will finish without any issues. The join makes a synchronous workflow outside of parallel processing by waiting until all parallel routes are complete before continuing (similar to async/await in JS). Omitting the join will lead to an asynchronous workflow where routes could continue in any order. Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data There is no required configuration for this service. This service doesn't require any service data setup. This service will not provide any output data.","title":"Parallel Gateway"},{"location":"reference/flow-controls/parallel-gateway/#configuration","text":"When added to the canvas the fork parallel gateway service will be automatic and not require any further configuration. Tip The parallel gateway does not specifically need a join in order to work and will finish without any issues. The join makes a synchronous workflow outside of parallel processing by waiting until all parallel routes are complete before continuing (similar to async/await in JS). Omitting the join will lead to an asynchronous workflow where routes could continue in any order. Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data There is no required configuration for this service. This service doesn't require any service data setup. This service will not provide any output data.","title":"Configuration"},{"location":"reference/integrations/","text":"Unleashed Software \u00b6 When stock level updates in my Unleashed warehouse, update my stock level in WooCommerce When a new sales order is created in WooCommerce, send that order into my Unleashed Software WooCommerce \u00b6 When stock level updates in my Unleashed warehouse, update my stock level in WooCommerce When a new sales order is created in WooCommerce, send that order into my Unleashed Software","title":"Integration Templates"},{"location":"reference/integrations/#unleashed-software","text":"When stock level updates in my Unleashed warehouse, update my stock level in WooCommerce When a new sales order is created in WooCommerce, send that order into my Unleashed Software","title":"Unleashed Software"},{"location":"reference/integrations/#woocommerce","text":"When stock level updates in my Unleashed warehouse, update my stock level in WooCommerce When a new sales order is created in WooCommerce, send that order into my Unleashed Software","title":"WooCommerce"},{"location":"reference/integrations/unleashed-to-woocommerce-stock-updater/","text":"Schedule-based integration (min. 1 minute interval) Introduction \u00b6 The Unleashed to WooCommerce Stock Updater integration template solves the issue of overselling online and eliminates any manual labour associated with keeping your inventory levels up to date and in sync between Unleashed Software and your WooCommerce online store. In less than 5 minutes, you will be able to reap the benefits of this integration, saving you countless hours of manual labour each and every month and leaving you more time to focus on your business. After a simple step-by-step wizard guiding you through the initial configuration, the Spojit platform gives you the ability to choose how often you would like to check Unleashed Software for any stock level updates, starting at one minute intervals. Once set, the platform will check for any updates to stock levels in Unleashed and seamlessly update your WooCommerce online store as per the schedule. You stay in control of the integration link and have the ability to change the schedule as you see fit. Spojit gives you detailed logs each time the integration starts, giving you insight into the integration\u2019s performance. Instructions \u00b6 1. Introduction \u00b6 The following instructions outline what is needed to setup the Unleashed to WooCommerce stock updater. We will get API keys from Unleashed, create/get API keys from WooCommerce, add them both in Spojit, turn on the Legacy API in WooCommerce and then create a schedule to specify when the integration will run. 2. Unleashed Authorization \u00b6 In order for the integration to be able to connect with Unleashed, API keys need to be copied from Unleashed into Spojit. View steps... 1. Log in to your Unleashed account \u00b6 2. Navigate to Integration > Unleashed API Access \u00b6 From the Unleashed dashboard click on \u201cIntegration\u201d / \u201cUnleashed API Access\u201d from the side bar 3. Copy API Id and API Key \u00b6 Copy the \u201cAPI Id\u201d and the \u201cAPI Key\u201d in the Unleashed API Access page. These API access credentials are used to link your Unleashed account with Spojit integrations utilizing the Unleashed connector. 3. WooCommerce Authorization \u00b6 In order for the integration to be able to connect with WooCommerce, API Keys need to be generated and granted permission to read and write data from WooCommerce. View steps... 1. Log in to your WooCommerce admin panel \u00b6 2. Navigate to WooCommerce > Settings \u00b6 From the Wordpress Dashboard click on \u201cWooCommerce\u201d > \u201cSettings\u201d from the side bar 3. When in settings, click on \u201cAdvanced\u201d and then \u201cREST API\u201d \u00b6 4. Generate new API key \u00b6 Click the 'Add key' button, add a name for the generated key, select a user to be assigned to the key, select \u201cRead/Write\u201d for the permissions and then click \u201cGenerate API Key\u201d 5. Copy generated API keys \u00b6 Your keys should now be generated and will be displayed as follows (make sure you copy them at this stage otherwise you will not be able to see them again). Both the Consumer Key and Consumer Secret is required to authenticate WooCommerce in Spojit platform. 4. Enable Legacy Mode in WooCommerce \u00b6 Because of the batch processing of the stock and its reliance on SKU data Legacy Mode needs to be enabled in WooCommerce to send batch stock updates with SKU and quantity values View steps... Solving common WooCommerce API Issues If you are running into trouble while trying to connect your WooCommerce store via the REST API, you may want to review few technical notes on the most common issues and how to solve them in this blog post 1. Log in to your WooCommerce admin panel \u00b6 2. Navigate to WooCommerce > Settings \u00b6 From the Wordpress Dashboard click on \u201cWooCommerce\u201d > \u201cSettings\u201d from the side bar 3. When in settings, click on \u201cAdvanced\u201d and then \u201cLegacy API\u201d \u00b6 4. Enable Legacy API and save your changes \u00b6 Click the checkbox to enable the Legacy API, and save your changes. 5. Set Schedule \u00b6 Set a schedule to run this integration. Find out more in the Schedule section.","title":"Unleashed to woocommerce stock updater"},{"location":"reference/integrations/unleashed-to-woocommerce-stock-updater/#introduction","text":"The Unleashed to WooCommerce Stock Updater integration template solves the issue of overselling online and eliminates any manual labour associated with keeping your inventory levels up to date and in sync between Unleashed Software and your WooCommerce online store. In less than 5 minutes, you will be able to reap the benefits of this integration, saving you countless hours of manual labour each and every month and leaving you more time to focus on your business. After a simple step-by-step wizard guiding you through the initial configuration, the Spojit platform gives you the ability to choose how often you would like to check Unleashed Software for any stock level updates, starting at one minute intervals. Once set, the platform will check for any updates to stock levels in Unleashed and seamlessly update your WooCommerce online store as per the schedule. You stay in control of the integration link and have the ability to change the schedule as you see fit. Spojit gives you detailed logs each time the integration starts, giving you insight into the integration\u2019s performance.","title":"Introduction"},{"location":"reference/integrations/unleashed-to-woocommerce-stock-updater/#instructions","text":"","title":"Instructions"},{"location":"reference/integrations/unleashed-to-woocommerce-stock-updater/#1-introduction","text":"The following instructions outline what is needed to setup the Unleashed to WooCommerce stock updater. We will get API keys from Unleashed, create/get API keys from WooCommerce, add them both in Spojit, turn on the Legacy API in WooCommerce and then create a schedule to specify when the integration will run.","title":"1. Introduction"},{"location":"reference/integrations/unleashed-to-woocommerce-stock-updater/#2-unleashed-authorization","text":"In order for the integration to be able to connect with Unleashed, API keys need to be copied from Unleashed into Spojit. View steps...","title":"2. Unleashed Authorization"},{"location":"reference/integrations/unleashed-to-woocommerce-stock-updater/#1-log-in-to-your-unleashed-account","text":"","title":"1. Log in to your Unleashed account"},{"location":"reference/integrations/unleashed-to-woocommerce-stock-updater/#2-navigate-to-integration-unleashed-api-access","text":"From the Unleashed dashboard click on \u201cIntegration\u201d / \u201cUnleashed API Access\u201d from the side bar","title":"2. Navigate to Integration &gt; Unleashed API Access"},{"location":"reference/integrations/unleashed-to-woocommerce-stock-updater/#3-copy-api-id-and-api-key","text":"Copy the \u201cAPI Id\u201d and the \u201cAPI Key\u201d in the Unleashed API Access page. These API access credentials are used to link your Unleashed account with Spojit integrations utilizing the Unleashed connector.","title":"3. Copy API Id and API Key"},{"location":"reference/integrations/unleashed-to-woocommerce-stock-updater/#3-woocommerce-authorization","text":"In order for the integration to be able to connect with WooCommerce, API Keys need to be generated and granted permission to read and write data from WooCommerce. View steps...","title":"3. WooCommerce Authorization"},{"location":"reference/integrations/unleashed-to-woocommerce-stock-updater/#1-log-in-to-your-woocommerce-admin-panel","text":"","title":"1. Log in to your WooCommerce admin panel"},{"location":"reference/integrations/unleashed-to-woocommerce-stock-updater/#2-navigate-to-woocommerce-settings","text":"From the Wordpress Dashboard click on \u201cWooCommerce\u201d > \u201cSettings\u201d from the side bar","title":"2. Navigate to WooCommerce &gt; Settings"},{"location":"reference/integrations/unleashed-to-woocommerce-stock-updater/#3-when-in-settings-click-on-advanced-and-then-rest-api","text":"","title":"3. When in settings, click on \u201cAdvanced\u201d and then \u201cREST API\u201d"},{"location":"reference/integrations/unleashed-to-woocommerce-stock-updater/#4-generate-new-api-key","text":"Click the 'Add key' button, add a name for the generated key, select a user to be assigned to the key, select \u201cRead/Write\u201d for the permissions and then click \u201cGenerate API Key\u201d","title":"4. Generate new API key"},{"location":"reference/integrations/unleashed-to-woocommerce-stock-updater/#5-copy-generated-api-keys","text":"Your keys should now be generated and will be displayed as follows (make sure you copy them at this stage otherwise you will not be able to see them again). Both the Consumer Key and Consumer Secret is required to authenticate WooCommerce in Spojit platform.","title":"5. Copy generated API keys"},{"location":"reference/integrations/unleashed-to-woocommerce-stock-updater/#4-enable-legacy-mode-in-woocommerce","text":"Because of the batch processing of the stock and its reliance on SKU data Legacy Mode needs to be enabled in WooCommerce to send batch stock updates with SKU and quantity values View steps... Solving common WooCommerce API Issues If you are running into trouble while trying to connect your WooCommerce store via the REST API, you may want to review few technical notes on the most common issues and how to solve them in this blog post","title":"4. Enable Legacy Mode in WooCommerce"},{"location":"reference/integrations/unleashed-to-woocommerce-stock-updater/#1-log-in-to-your-woocommerce-admin-panel_1","text":"","title":"1. Log in to your WooCommerce admin panel"},{"location":"reference/integrations/unleashed-to-woocommerce-stock-updater/#2-navigate-to-woocommerce-settings_1","text":"From the Wordpress Dashboard click on \u201cWooCommerce\u201d > \u201cSettings\u201d from the side bar","title":"2. Navigate to WooCommerce &gt; Settings"},{"location":"reference/integrations/unleashed-to-woocommerce-stock-updater/#3-when-in-settings-click-on-advanced-and-then-legacy-api","text":"","title":"3. When in settings, click on \u201cAdvanced\u201d and then \u201cLegacy API\u201d"},{"location":"reference/integrations/unleashed-to-woocommerce-stock-updater/#4-enable-legacy-api-and-save-your-changes","text":"Click the checkbox to enable the Legacy API, and save your changes.","title":"4. Enable Legacy API and save your changes"},{"location":"reference/integrations/unleashed-to-woocommerce-stock-updater/#5-set-schedule","text":"Set a schedule to run this integration. Find out more in the Schedule section.","title":"5. Set Schedule"},{"location":"reference/integrations/woocommerce-to-unleashed-order-creator/","text":"Near real-time integration (webhook) Introduction \u00b6 The WooCommerce to Unleashed Order Creator integration template helps you keep track of your sales orders by sending any newly created WooCommerce sales order automatically into your Unleashed Software for further processing. As a near real-time webhook integration, an order is sent to Unleashed within seconds from when it is created in WooCommerce. Spojit gives you detailed logs each time the integration starts, giving you insight into the integration\u2019s performance. Instructions \u00b6 1. Introduction \u00b6 The following instructions outline what is needed to setup the WooCommerce to Unleashed order creator. We will get API keys from Unleashed, add them and setup the integration within Spojit and then create a webhook in WooCommerce to send newly created orders for processing. 2. Unleashed Authorization \u00b6 In order for the integration to be able to connect with Unleashed, API keys need to be copied from Unleashed into Spojit. View steps... 1. Log in to your Unleashed account \u00b6 2. Navigate to Integration > Unleashed API Access \u00b6 From the Unleashed dashboard click on \u201cIntegration\u201d / \u201cUnleashed API Access\u201d from the side bar 3. Copy API Id and API Key \u00b6 Copy the \u201cAPI Id\u201d and the \u201cAPI Key\u201d in the Unleashed API Access page. These API access credentials are used to link your Unleashed account with Spojit integrations utilizing the Unleashed connector. 3. Integration Configuration \u00b6 Enter the \u201cWarehouse Code\u201d to associate with new sales orders in Unleashed. Choose to create sales orders in Unleashed as Parked, Placed, or Completed. How to find a warehouse code... 1. Log in to your Unleashed account \u00b6 2. Navigate to Settings > System > Warehouses \u00b6 From the Unleashed dashboard click on Settings > System > \"Warehouses\" from the side bar 3. Copy Warehouse Code \u00b6 Copy the Warehouse Code (ie. 'MAIN' for the Main Warehouse) from the Unleashed Warehouses page. A warehouse code is required to complete configuration of Spojit integrations to indicate which warehouse in Unleashed is targetted by given integration (ie. for stock levels synchronization with your online store). 4. Configure Webhook \u00b6 Follow the steps and create a webhook in WooCommerce with the \u201cOrder created\u201d topic View steps... Webhook URL Configuration This guide shows you how to use the Spojit generated webhook URL with WooCommerce. Follow the below steps to enable WooCommerce webhook and link your WooCommerce with the Spojit platform. 1. Obtain webhook URL from your Spojit integration \u00b6 Log in to your Spojit account and follow our Webhook guide to obtain your unique webhook URL. 2. Log in to your WooCommerce admin panel \u00b6 3. Navigate to WooCommerce > Settings \u00b6 From the Wordpress Dashboard click on \u201cWooCommerce\u201d > \u201cSettings\u201d from the side bar 3. When in settings, click on \u201cAdvanced\u201d and then \u201cWebhooks\u201d \u00b6 4. Create new webhook \u00b6 Click the 'Create new webhook' button, enter a name, set the topic and add the Spojit delivery url that you have obtained in step 1 earlier. Click Save webhook to save the webhook.","title":"Woocommerce to unleashed order creator"},{"location":"reference/integrations/woocommerce-to-unleashed-order-creator/#introduction","text":"The WooCommerce to Unleashed Order Creator integration template helps you keep track of your sales orders by sending any newly created WooCommerce sales order automatically into your Unleashed Software for further processing. As a near real-time webhook integration, an order is sent to Unleashed within seconds from when it is created in WooCommerce. Spojit gives you detailed logs each time the integration starts, giving you insight into the integration\u2019s performance.","title":"Introduction"},{"location":"reference/integrations/woocommerce-to-unleashed-order-creator/#instructions","text":"","title":"Instructions"},{"location":"reference/integrations/woocommerce-to-unleashed-order-creator/#1-introduction","text":"The following instructions outline what is needed to setup the WooCommerce to Unleashed order creator. We will get API keys from Unleashed, add them and setup the integration within Spojit and then create a webhook in WooCommerce to send newly created orders for processing.","title":"1. Introduction"},{"location":"reference/integrations/woocommerce-to-unleashed-order-creator/#2-unleashed-authorization","text":"In order for the integration to be able to connect with Unleashed, API keys need to be copied from Unleashed into Spojit. View steps...","title":"2. Unleashed Authorization"},{"location":"reference/integrations/woocommerce-to-unleashed-order-creator/#1-log-in-to-your-unleashed-account","text":"","title":"1. Log in to your Unleashed account"},{"location":"reference/integrations/woocommerce-to-unleashed-order-creator/#2-navigate-to-integration-unleashed-api-access","text":"From the Unleashed dashboard click on \u201cIntegration\u201d / \u201cUnleashed API Access\u201d from the side bar","title":"2. Navigate to Integration &gt; Unleashed API Access"},{"location":"reference/integrations/woocommerce-to-unleashed-order-creator/#3-copy-api-id-and-api-key","text":"Copy the \u201cAPI Id\u201d and the \u201cAPI Key\u201d in the Unleashed API Access page. These API access credentials are used to link your Unleashed account with Spojit integrations utilizing the Unleashed connector.","title":"3. Copy API Id and API Key"},{"location":"reference/integrations/woocommerce-to-unleashed-order-creator/#3-integration-configuration","text":"Enter the \u201cWarehouse Code\u201d to associate with new sales orders in Unleashed. Choose to create sales orders in Unleashed as Parked, Placed, or Completed. How to find a warehouse code...","title":"3. Integration Configuration"},{"location":"reference/integrations/woocommerce-to-unleashed-order-creator/#1-log-in-to-your-unleashed-account_1","text":"","title":"1. Log in to your Unleashed account"},{"location":"reference/integrations/woocommerce-to-unleashed-order-creator/#2-navigate-to-settings-system-warehouses","text":"From the Unleashed dashboard click on Settings > System > \"Warehouses\" from the side bar","title":"2. Navigate to Settings &gt; System &gt; Warehouses"},{"location":"reference/integrations/woocommerce-to-unleashed-order-creator/#3-copy-warehouse-code","text":"Copy the Warehouse Code (ie. 'MAIN' for the Main Warehouse) from the Unleashed Warehouses page. A warehouse code is required to complete configuration of Spojit integrations to indicate which warehouse in Unleashed is targetted by given integration (ie. for stock levels synchronization with your online store).","title":"3. Copy Warehouse Code"},{"location":"reference/integrations/woocommerce-to-unleashed-order-creator/#4-configure-webhook","text":"Follow the steps and create a webhook in WooCommerce with the \u201cOrder created\u201d topic View steps... Webhook URL Configuration This guide shows you how to use the Spojit generated webhook URL with WooCommerce. Follow the below steps to enable WooCommerce webhook and link your WooCommerce with the Spojit platform.","title":"4. Configure Webhook"},{"location":"reference/integrations/woocommerce-to-unleashed-order-creator/#1-obtain-webhook-url-from-your-spojit-integration","text":"Log in to your Spojit account and follow our Webhook guide to obtain your unique webhook URL.","title":"1. Obtain webhook URL from your Spojit integration"},{"location":"reference/integrations/woocommerce-to-unleashed-order-creator/#2-log-in-to-your-woocommerce-admin-panel","text":"","title":"2. Log in to your WooCommerce admin panel"},{"location":"reference/integrations/woocommerce-to-unleashed-order-creator/#3-navigate-to-woocommerce-settings","text":"From the Wordpress Dashboard click on \u201cWooCommerce\u201d > \u201cSettings\u201d from the side bar","title":"3. Navigate to WooCommerce &gt; Settings"},{"location":"reference/integrations/woocommerce-to-unleashed-order-creator/#3-when-in-settings-click-on-advanced-and-then-webhooks","text":"","title":"3. When in settings, click on \u201cAdvanced\u201d and then \u201cWebhooks\u201d"},{"location":"reference/integrations/woocommerce-to-unleashed-order-creator/#4-create-new-webhook","text":"Click the 'Create new webhook' button, enter a name, set the topic and add the Spojit delivery url that you have obtained in step 1 earlier. Click Save webhook to save the webhook.","title":"4. Create new webhook"},{"location":"reference/integrations/unleashed/unleashed-authorization/","text":"1. Log in to your Unleashed account \u00b6 2. Navigate to Integration > Unleashed API Access \u00b6 From the Unleashed dashboard click on \u201cIntegration\u201d / \u201cUnleashed API Access\u201d from the side bar 3. Copy API Id and API Key \u00b6 Copy the \u201cAPI Id\u201d and the \u201cAPI Key\u201d in the Unleashed API Access page. These API access credentials are used to link your Unleashed account with Spojit integrations utilizing the Unleashed connector.","title":"Unleashed Authorization"},{"location":"reference/integrations/unleashed/unleashed-authorization/#1-log-in-to-your-unleashed-account","text":"","title":"1. Log in to your Unleashed account"},{"location":"reference/integrations/unleashed/unleashed-authorization/#2-navigate-to-integration-unleashed-api-access","text":"From the Unleashed dashboard click on \u201cIntegration\u201d / \u201cUnleashed API Access\u201d from the side bar","title":"2. Navigate to Integration &gt; Unleashed API Access"},{"location":"reference/integrations/unleashed/unleashed-authorization/#3-copy-api-id-and-api-key","text":"Copy the \u201cAPI Id\u201d and the \u201cAPI Key\u201d in the Unleashed API Access page. These API access credentials are used to link your Unleashed account with Spojit integrations utilizing the Unleashed connector.","title":"3. Copy API Id and API Key"},{"location":"reference/integrations/unleashed/unleashed-warehouse-code/","text":"1. Log in to your Unleashed account \u00b6 2. Navigate to Settings > System > Warehouses \u00b6 From the Unleashed dashboard click on Settings > System > \"Warehouses\" from the side bar 3. Copy Warehouse Code \u00b6 Copy the Warehouse Code (ie. 'MAIN' for the Main Warehouse) from the Unleashed Warehouses page. A warehouse code is required to complete configuration of Spojit integrations to indicate which warehouse in Unleashed is targetted by given integration (ie. for stock levels synchronization with your online store).","title":"Unleashed Warehouse Code"},{"location":"reference/integrations/unleashed/unleashed-warehouse-code/#1-log-in-to-your-unleashed-account","text":"","title":"1. Log in to your Unleashed account"},{"location":"reference/integrations/unleashed/unleashed-warehouse-code/#2-navigate-to-settings-system-warehouses","text":"From the Unleashed dashboard click on Settings > System > \"Warehouses\" from the side bar","title":"2. Navigate to Settings &gt; System &gt; Warehouses"},{"location":"reference/integrations/unleashed/unleashed-warehouse-code/#3-copy-warehouse-code","text":"Copy the Warehouse Code (ie. 'MAIN' for the Main Warehouse) from the Unleashed Warehouses page. A warehouse code is required to complete configuration of Spojit integrations to indicate which warehouse in Unleashed is targetted by given integration (ie. for stock levels synchronization with your online store).","title":"3. Copy Warehouse Code"},{"location":"reference/integrations/woocommerce/woocommerce-authorization/","text":"1. Log in to your WooCommerce admin panel \u00b6 2. Navigate to WooCommerce > Settings \u00b6 From the Wordpress Dashboard click on \u201cWooCommerce\u201d > \u201cSettings\u201d from the side bar 3. When in settings, click on \u201cAdvanced\u201d and then \u201cREST API\u201d \u00b6 4. Generate new API key \u00b6 Click the 'Add key' button, add a name for the generated key, select a user to be assigned to the key, select \u201cRead/Write\u201d for the permissions and then click \u201cGenerate API Key\u201d 5. Copy generated API keys \u00b6 Your keys should now be generated and will be displayed as follows (make sure you copy them at this stage otherwise you will not be able to see them again). Both the Consumer Key and Consumer Secret is required to authenticate WooCommerce in Spojit platform.","title":"WooCommerce Authorization"},{"location":"reference/integrations/woocommerce/woocommerce-authorization/#1-log-in-to-your-woocommerce-admin-panel","text":"","title":"1. Log in to your WooCommerce admin panel"},{"location":"reference/integrations/woocommerce/woocommerce-authorization/#2-navigate-to-woocommerce-settings","text":"From the Wordpress Dashboard click on \u201cWooCommerce\u201d > \u201cSettings\u201d from the side bar","title":"2. Navigate to WooCommerce &gt; Settings"},{"location":"reference/integrations/woocommerce/woocommerce-authorization/#3-when-in-settings-click-on-advanced-and-then-rest-api","text":"","title":"3. When in settings, click on \u201cAdvanced\u201d and then \u201cREST API\u201d"},{"location":"reference/integrations/woocommerce/woocommerce-authorization/#4-generate-new-api-key","text":"Click the 'Add key' button, add a name for the generated key, select a user to be assigned to the key, select \u201cRead/Write\u201d for the permissions and then click \u201cGenerate API Key\u201d","title":"4. Generate new API key"},{"location":"reference/integrations/woocommerce/woocommerce-authorization/#5-copy-generated-api-keys","text":"Your keys should now be generated and will be displayed as follows (make sure you copy them at this stage otherwise you will not be able to see them again). Both the Consumer Key and Consumer Secret is required to authenticate WooCommerce in Spojit platform.","title":"5. Copy generated API keys"},{"location":"reference/integrations/woocommerce/woocommerce-legacy-api/","text":"Solving common WooCommerce API Issues If you are running into trouble while trying to connect your WooCommerce store via the REST API, you may want to review few technical notes on the most common issues and how to solve them in this blog post 1. Log in to your WooCommerce admin panel \u00b6 2. Navigate to WooCommerce > Settings \u00b6 From the Wordpress Dashboard click on \u201cWooCommerce\u201d > \u201cSettings\u201d from the side bar 3. When in settings, click on \u201cAdvanced\u201d and then \u201cLegacy API\u201d \u00b6 4. Enable Legacy API and save your changes \u00b6 Click the checkbox to enable the Legacy API, and save your changes.","title":"WooCommerce Legacy API"},{"location":"reference/integrations/woocommerce/woocommerce-legacy-api/#1-log-in-to-your-woocommerce-admin-panel","text":"","title":"1. Log in to your WooCommerce admin panel"},{"location":"reference/integrations/woocommerce/woocommerce-legacy-api/#2-navigate-to-woocommerce-settings","text":"From the Wordpress Dashboard click on \u201cWooCommerce\u201d > \u201cSettings\u201d from the side bar","title":"2. Navigate to WooCommerce &gt; Settings"},{"location":"reference/integrations/woocommerce/woocommerce-legacy-api/#3-when-in-settings-click-on-advanced-and-then-legacy-api","text":"","title":"3. When in settings, click on \u201cAdvanced\u201d and then \u201cLegacy API\u201d"},{"location":"reference/integrations/woocommerce/woocommerce-legacy-api/#4-enable-legacy-api-and-save-your-changes","text":"Click the checkbox to enable the Legacy API, and save your changes.","title":"4. Enable Legacy API and save your changes"},{"location":"reference/integrations/woocommerce/woocommerce-webhooks/","text":"Webhook URL Configuration This guide shows you how to use the Spojit generated webhook URL with WooCommerce. Follow the below steps to enable WooCommerce webhook and link your WooCommerce with the Spojit platform. 1. Obtain webhook URL from your Spojit integration \u00b6 Log in to your Spojit account and follow our Webhook guide to obtain your unique webhook URL. 2. Log in to your WooCommerce admin panel \u00b6 3. Navigate to WooCommerce > Settings \u00b6 From the Wordpress Dashboard click on \u201cWooCommerce\u201d > \u201cSettings\u201d from the side bar 3. When in settings, click on \u201cAdvanced\u201d and then \u201cWebhooks\u201d \u00b6 4. Create new webhook \u00b6 Click the 'Create new webhook' button, enter a name, set the topic and add the Spojit delivery url that you have obtained in step 1 earlier. Click Save webhook to save the webhook.","title":"WooCommerce Webhooks"},{"location":"reference/integrations/woocommerce/woocommerce-webhooks/#1-obtain-webhook-url-from-your-spojit-integration","text":"Log in to your Spojit account and follow our Webhook guide to obtain your unique webhook URL.","title":"1. Obtain webhook URL from your Spojit integration"},{"location":"reference/integrations/woocommerce/woocommerce-webhooks/#2-log-in-to-your-woocommerce-admin-panel","text":"","title":"2. Log in to your WooCommerce admin panel"},{"location":"reference/integrations/woocommerce/woocommerce-webhooks/#3-navigate-to-woocommerce-settings","text":"From the Wordpress Dashboard click on \u201cWooCommerce\u201d > \u201cSettings\u201d from the side bar","title":"3. Navigate to WooCommerce &gt; Settings"},{"location":"reference/integrations/woocommerce/woocommerce-webhooks/#3-when-in-settings-click-on-advanced-and-then-webhooks","text":"","title":"3. When in settings, click on \u201cAdvanced\u201d and then \u201cWebhooks\u201d"},{"location":"reference/integrations/woocommerce/woocommerce-webhooks/#4-create-new-webhook","text":"Click the 'Create new webhook' button, enter a name, set the topic and add the Spojit delivery url that you have obtained in step 1 earlier. Click Save webhook to save the webhook.","title":"4. Create new webhook"},{"location":"reference/mapping/","text":"Mapping \u00b6 A service input data can be mapped and transformed using a built-in mapper service which allows you to define your data structure (schema), map fields from other services, and also apply functions to transform the data.","title":"Mapping"},{"location":"reference/mapping/#mapping","text":"A service input data can be mapped and transformed using a built-in mapper service which allows you to define your data structure (schema), map fields from other services, and also apply functions to transform the data.","title":"Mapping"},{"location":"reference/mapping/functions/array/","text":"Before you begin In order to use the features in this section you need to have an active Spojit account. If you don't have an account you can checkout out the pricing and register here . If you already have an account you can login here . Count \u00b6 count(array $value):int Counts all elements in given array and returns a number (integer). count([\"one\", \"two\", \"three\"]) => 3 count([1, 2]) => 2 count([0]) => 1 count([]) => 0 Get Item By Index \u00b6 getItemByIndex(array $value, integer $index):mixed Searches an array for given index and returns the array item found at the index specified. Array indexes start at 0 - zero index represents the first item in an array. Throws exception if array does not contain an item at specified index. getItemByIndex([\"one\", \"two\", \"three\"], 0) => \"one\" getItemByIndex([1, 2], 1) => 2 getItemByIndex([0], 1) => throws Exception (array does not have an item at index 1) Remove Item By Index \u00b6 removeItemByIndex(array $value, integer $index):array Searches an array for given index and removes value or object at the specified index. Array indexes start at 0 - zero index represents the first item in an array. Will reindex the array afterwards. Throws exception if array does not contain an item at specified index. removeItemByIndex([\"one\", \"two\", \"three\"], 0) => [\"two\", \"three\"] removeItemByIndex([1, 2], 1) => [2] removeItemByIndex([0], 1) => throws Exception (array does not have an item at index 1) Implode (Join) \u00b6 implode( array $value, string $glue):string Joins all elements of an array. Returns a string containing a representation of all the array elements in the same order, with the glue string between each element. implode([\"one\", \"two\", \"three\"], \" \") => \"one two three\" implode([1, 2, 3], \", \") => \"1, 2, 3\" implode([1, 2, 3]) => \"123\" Array Filter \u00b6 arr_filter(array $collection, array $conditions):array Searches input $collection (array of objects) for items matching $conditions . Returns a new collection with records matching those $conditions . $condition.field : the name of the object field (ie. 'id', or 'order_id'). Nested objects use dot notation (ie. 'address.street_address' would refer to a 'street_address' field in nested object 'address' in each object in collection). $condition.value : the value being searched for. Separate multiple search values by comma. For a $collection of person objects where each person has an 'id', a condition where $condition.field = 'id' and $condition.value = '1,2' , this function will return a new array containing all persons where 'id' is either '1' or '2'. For the same $collection of persons, a condition where $condition.field = 'contact.email' and $condition.value = 'john-at-email-dot-com' , this function will return a new array containing all persons where contact email address is 'john-at-email-dot-com'. Returns an empty array [ ] if no matching items are found. Given the following $collection: [ {\"id\": 1, \"name\": \"John\", \"contact\": {\"email\": \"john@email.com\"}}, {\"id\": 2, \"name\": \"Mary\", \"contact\": {\"email\": \"mary@email.com\"}}, {\"id\": 3, \"name\": \"Flynn\", \"contact\": {\"email\": \"flynn@email.com\"}}, {\"id\": 4, \"name\": \"Brad\", \"contact\": {\"email\": \"brad@email.com\"}} ] //Find one by 'id' where id equals 2 $condition = [{$field = \"id\", $value = \"2\"}] arr_filter($collection, $conditions) => [{\"id\": 2, \"name\": \"Mary\", \"contact\": {\"email\": \"mary@email.com\"}}}] //Find one by 'id' where id equals 10 ($field = \"id\", $value = \"10\") $conditions = [{$field = \"id\", $value = \"10\"}] arr_filter($collection, $conditions) => [] //no item where id=10 exists - returns empty array //Find one by contact email where email equals \"brad@email.com\" $conditions = [{$field = \"contact.email\", $value = \"brad@email.com\"}] arr_filter($collection, $conditions) => [{\"id\": 4, \"name\": \"Brad\", \"contact\": {\"email\": \"brad@email.com\"}}] //Find any by 'id' where id equals 2 or 4 $conditions = [{$field = \"id\", $value = \"2,4\"}] arr_filter($collection, $conditions) => [{\"id\": 2, \"name\": \"Mary\", \"contact\": {\"email\": \"mary@email.com\"}},{\"id\": 4, \"name\": \"Brad\", \"contact\": {\"email\": \"brad@email.com\"}}] //Find all where name is Flynn or id is 1 (two conditions required) $conditions = [{$field = \"name\", $value = \"Flynn\"}, {$field = \"id\", $value = \"1\"}] arr_filter($collection, $conditions) => [{\"id\": 1, \"name\": \"John\", \"contact\": {\"email\": \"john@email.com\"}},{\"id\": 3, \"name\": \"Flynn\", \"contact\": {\"email\": \"flynn@email.com\"}}] Array Map \u00b6 arr_map(array $collection, string $field):array Searches input $collection (array of objects) for values matching the provided $field . Returns a new collection of values matching that $field . $field : the name of the object field (ie. 'id', or 'order_id'). For a $collection of person objects where each person has a 'name' and a field where $field = 'name' this function will return a new array containing all persons names. Returns an empty array [ ] if no matching items are found. Given the following $collection: [ {\"id\": 1, \"name\": \"John\", \"contact\": {\"email\": \"john@email.com\"}}, {\"id\": 2, \"name\": \"Mary\", \"contact\": {\"email\": \"mary@email.com\"}}, {\"id\": 3, \"name\": \"Flynn\", \"contact\": {\"email\": \"flynn@email.com\"}}, {\"id\": 4, \"name\": \"Brad\", \"contact\": {\"email\": \"brad@email.com\"}} ] //Find all values where field equals name $field = \"name\" arr_map($collection, $field) => [\"John\", \"Mary\", \"Flynn\", \"Brad\"] //Find all values where field equals id $field = \"id\" arr_map($collection, $field) => [1, 2, 3, 4] //Find all values where field equals contact $field = \"contact\" arr_map($collection, $field) => [{\"email\": \"john@email.com\"}, {\"email\": \"mary@email.com\"}, {\"email\": \"flynn@email.com\"}, {\"email\": \"brad@email.com\"}] Array Reduce \u00b6 arr_reduce(string $type, string $method, string $field, array $collection):mixed Iterates over elements of a $collection , reducing the array to a single value/object using a predetermined $method . $type : the type of array (ie. 'simple', or 'object'). $method : the method to reduce the array (ie. 'max', or 'min'). $field : the name of the field if object type is used (ie. 'id', or 'order_id'). Given the following $collection: [ {\"id\": 1, \"name\": \"John\", \"contact\": {\"email\": \"john@email.com\"}}, {\"id\": 2, \"name\": \"Mary\", \"contact\": {\"email\": \"mary@email.com\"}}, {\"id\": 3, \"name\": \"Flynn\", \"contact\": {\"email\": \"flynn@email.com\"}}, {\"id\": 4, \"name\": \"Brad\", \"contact\": {\"email\": \"brad@email.com\"}} ] //Reduce the array using the max method on an array of objects arr_reduce('object', 'max' 'id', $collection) => {\"id\": 4, \"name\": \"Brad\", \"contact\": {\"email\": \"brad@email.com\"}} Given the following $collection: [54, 4, 19, 5, 16, 6] //Reduce the array using the min method on a simple array arr_reduce('simple', 'min' null, $collection) => 4 Add Index To Object \u00b6 add_index_to_object(string $field, array $collection):array Iterates over elements of a $collection , adding the collection index as a $field on the object. $field : the name of the field on the object (ie. 'sequence', or 'order_id'). Given the following $collection: [ {\"id\": 1, \"name\": \"John\", \"contact\": {\"email\": \"john@email.com\"}}, {\"id\": 2, \"name\": \"Mary\", \"contact\": {\"email\": \"mary@email.com\"}}, {\"id\": 3, \"name\": \"Flynn\", \"contact\": {\"email\": \"flynn@email.com\"}}, {\"id\": 4, \"name\": \"Brad\", \"contact\": {\"email\": \"brad@email.com\"}} ] //Add an index on the 'index_value' on an array of objects add_index_to_object('index_value', $collection) => [{\"index_value\":0,\"id\":1,\"name\":\"John\",\"contact\":{\"email\":\"john@email.com\"}},{\"index_value\":1,\"id\":2,\"name\":\"Mary\",\"contact\":{\"email\":\"mary@email.com\"}},{\"index_value\":2,\"id\":3,\"name\":\"Flynn\",\"contact\":{\"email\":\"flynn@email.com\"}},{\"index_value\":3,\"id\":4,\"name\":\"Brad\",\"contact\":{\"email\":\"brad@email.com\"}}]","title":"Array Functions"},{"location":"reference/mapping/functions/array/#count","text":"count(array $value):int Counts all elements in given array and returns a number (integer). count([\"one\", \"two\", \"three\"]) => 3 count([1, 2]) => 2 count([0]) => 1 count([]) => 0","title":"Count"},{"location":"reference/mapping/functions/array/#get-item-by-index","text":"getItemByIndex(array $value, integer $index):mixed Searches an array for given index and returns the array item found at the index specified. Array indexes start at 0 - zero index represents the first item in an array. Throws exception if array does not contain an item at specified index. getItemByIndex([\"one\", \"two\", \"three\"], 0) => \"one\" getItemByIndex([1, 2], 1) => 2 getItemByIndex([0], 1) => throws Exception (array does not have an item at index 1)","title":"Get Item By Index"},{"location":"reference/mapping/functions/array/#remove-item-by-index","text":"removeItemByIndex(array $value, integer $index):array Searches an array for given index and removes value or object at the specified index. Array indexes start at 0 - zero index represents the first item in an array. Will reindex the array afterwards. Throws exception if array does not contain an item at specified index. removeItemByIndex([\"one\", \"two\", \"three\"], 0) => [\"two\", \"three\"] removeItemByIndex([1, 2], 1) => [2] removeItemByIndex([0], 1) => throws Exception (array does not have an item at index 1)","title":"Remove Item By Index"},{"location":"reference/mapping/functions/array/#implode-join","text":"implode( array $value, string $glue):string Joins all elements of an array. Returns a string containing a representation of all the array elements in the same order, with the glue string between each element. implode([\"one\", \"two\", \"three\"], \" \") => \"one two three\" implode([1, 2, 3], \", \") => \"1, 2, 3\" implode([1, 2, 3]) => \"123\"","title":"Implode (Join)"},{"location":"reference/mapping/functions/array/#array-filter","text":"arr_filter(array $collection, array $conditions):array Searches input $collection (array of objects) for items matching $conditions . Returns a new collection with records matching those $conditions . $condition.field : the name of the object field (ie. 'id', or 'order_id'). Nested objects use dot notation (ie. 'address.street_address' would refer to a 'street_address' field in nested object 'address' in each object in collection). $condition.value : the value being searched for. Separate multiple search values by comma. For a $collection of person objects where each person has an 'id', a condition where $condition.field = 'id' and $condition.value = '1,2' , this function will return a new array containing all persons where 'id' is either '1' or '2'. For the same $collection of persons, a condition where $condition.field = 'contact.email' and $condition.value = 'john-at-email-dot-com' , this function will return a new array containing all persons where contact email address is 'john-at-email-dot-com'. Returns an empty array [ ] if no matching items are found. Given the following $collection: [ {\"id\": 1, \"name\": \"John\", \"contact\": {\"email\": \"john@email.com\"}}, {\"id\": 2, \"name\": \"Mary\", \"contact\": {\"email\": \"mary@email.com\"}}, {\"id\": 3, \"name\": \"Flynn\", \"contact\": {\"email\": \"flynn@email.com\"}}, {\"id\": 4, \"name\": \"Brad\", \"contact\": {\"email\": \"brad@email.com\"}} ] //Find one by 'id' where id equals 2 $condition = [{$field = \"id\", $value = \"2\"}] arr_filter($collection, $conditions) => [{\"id\": 2, \"name\": \"Mary\", \"contact\": {\"email\": \"mary@email.com\"}}}] //Find one by 'id' where id equals 10 ($field = \"id\", $value = \"10\") $conditions = [{$field = \"id\", $value = \"10\"}] arr_filter($collection, $conditions) => [] //no item where id=10 exists - returns empty array //Find one by contact email where email equals \"brad@email.com\" $conditions = [{$field = \"contact.email\", $value = \"brad@email.com\"}] arr_filter($collection, $conditions) => [{\"id\": 4, \"name\": \"Brad\", \"contact\": {\"email\": \"brad@email.com\"}}] //Find any by 'id' where id equals 2 or 4 $conditions = [{$field = \"id\", $value = \"2,4\"}] arr_filter($collection, $conditions) => [{\"id\": 2, \"name\": \"Mary\", \"contact\": {\"email\": \"mary@email.com\"}},{\"id\": 4, \"name\": \"Brad\", \"contact\": {\"email\": \"brad@email.com\"}}] //Find all where name is Flynn or id is 1 (two conditions required) $conditions = [{$field = \"name\", $value = \"Flynn\"}, {$field = \"id\", $value = \"1\"}] arr_filter($collection, $conditions) => [{\"id\": 1, \"name\": \"John\", \"contact\": {\"email\": \"john@email.com\"}},{\"id\": 3, \"name\": \"Flynn\", \"contact\": {\"email\": \"flynn@email.com\"}}]","title":"Array Filter"},{"location":"reference/mapping/functions/array/#array-map","text":"arr_map(array $collection, string $field):array Searches input $collection (array of objects) for values matching the provided $field . Returns a new collection of values matching that $field . $field : the name of the object field (ie. 'id', or 'order_id'). For a $collection of person objects where each person has a 'name' and a field where $field = 'name' this function will return a new array containing all persons names. Returns an empty array [ ] if no matching items are found. Given the following $collection: [ {\"id\": 1, \"name\": \"John\", \"contact\": {\"email\": \"john@email.com\"}}, {\"id\": 2, \"name\": \"Mary\", \"contact\": {\"email\": \"mary@email.com\"}}, {\"id\": 3, \"name\": \"Flynn\", \"contact\": {\"email\": \"flynn@email.com\"}}, {\"id\": 4, \"name\": \"Brad\", \"contact\": {\"email\": \"brad@email.com\"}} ] //Find all values where field equals name $field = \"name\" arr_map($collection, $field) => [\"John\", \"Mary\", \"Flynn\", \"Brad\"] //Find all values where field equals id $field = \"id\" arr_map($collection, $field) => [1, 2, 3, 4] //Find all values where field equals contact $field = \"contact\" arr_map($collection, $field) => [{\"email\": \"john@email.com\"}, {\"email\": \"mary@email.com\"}, {\"email\": \"flynn@email.com\"}, {\"email\": \"brad@email.com\"}]","title":"Array Map"},{"location":"reference/mapping/functions/array/#array-reduce","text":"arr_reduce(string $type, string $method, string $field, array $collection):mixed Iterates over elements of a $collection , reducing the array to a single value/object using a predetermined $method . $type : the type of array (ie. 'simple', or 'object'). $method : the method to reduce the array (ie. 'max', or 'min'). $field : the name of the field if object type is used (ie. 'id', or 'order_id'). Given the following $collection: [ {\"id\": 1, \"name\": \"John\", \"contact\": {\"email\": \"john@email.com\"}}, {\"id\": 2, \"name\": \"Mary\", \"contact\": {\"email\": \"mary@email.com\"}}, {\"id\": 3, \"name\": \"Flynn\", \"contact\": {\"email\": \"flynn@email.com\"}}, {\"id\": 4, \"name\": \"Brad\", \"contact\": {\"email\": \"brad@email.com\"}} ] //Reduce the array using the max method on an array of objects arr_reduce('object', 'max' 'id', $collection) => {\"id\": 4, \"name\": \"Brad\", \"contact\": {\"email\": \"brad@email.com\"}} Given the following $collection: [54, 4, 19, 5, 16, 6] //Reduce the array using the min method on a simple array arr_reduce('simple', 'min' null, $collection) => 4","title":"Array Reduce"},{"location":"reference/mapping/functions/array/#add-index-to-object","text":"add_index_to_object(string $field, array $collection):array Iterates over elements of a $collection , adding the collection index as a $field on the object. $field : the name of the field on the object (ie. 'sequence', or 'order_id'). Given the following $collection: [ {\"id\": 1, \"name\": \"John\", \"contact\": {\"email\": \"john@email.com\"}}, {\"id\": 2, \"name\": \"Mary\", \"contact\": {\"email\": \"mary@email.com\"}}, {\"id\": 3, \"name\": \"Flynn\", \"contact\": {\"email\": \"flynn@email.com\"}}, {\"id\": 4, \"name\": \"Brad\", \"contact\": {\"email\": \"brad@email.com\"}} ] //Add an index on the 'index_value' on an array of objects add_index_to_object('index_value', $collection) => [{\"index_value\":0,\"id\":1,\"name\":\"John\",\"contact\":{\"email\":\"john@email.com\"}},{\"index_value\":1,\"id\":2,\"name\":\"Mary\",\"contact\":{\"email\":\"mary@email.com\"}},{\"index_value\":2,\"id\":3,\"name\":\"Flynn\",\"contact\":{\"email\":\"flynn@email.com\"}},{\"index_value\":3,\"id\":4,\"name\":\"Brad\",\"contact\":{\"email\":\"brad@email.com\"}}]","title":"Add Index To Object"},{"location":"reference/mapping/functions/datetime/","text":"Before you begin In order to use the features in this section you need to have an active Spojit account. If you don't have an account you can checkout out the pricing and register here . If you already have an account you can login here . Current Datetime \u00b6 datetime_current(string $timezone, string $format, [string $modification]):string Produces current datetime (now) in specified $timezone and $format . Returns the resulting datetime as a string. Optionally modifies the return string datetime by $modification . $modification is a textual representation; ie. \"+1 day\" would add one day to the datetime, \"+1 hour\" would add one hour to the datetime, \"-2 years\" would subtract two years, and so forth. Format Description Example Y Four digit year 2020 y Two digit year 20 M Three character month Jan m Two digit month 01 F A full textual representation of a month, such as January or March January through December n Numeric representation of a month, without leading zeros 1 through 12 D Three character day Sat d Two digit day 12 j Day of the month without leading zero 1 to 31 l A full textual representation of the day of the week Saturday N ISO-8601 numeric representation of the day of the week 1 (for Monday) through 7 (for Sunday) h 12-hour format of an hour with leading zeros 01 through 12 H Hour in 24 hour format with leading zero 06 or 18 i Minutes with leading zeros 00 to 59 s Seconds with leading zeros 00 to 59 u Microseconds 654321 v Miliseconds 654 e Timezone identifier UTC or GMT or Atlantic/Azores O Difference to Greenwich time (GMT) without colon between hours and minutes +0200 P Difference to Greenwich time (GMT) with colon between hours and minutes +00:00 or +10:00 p The same as P, but returns Z instead of +00:00 T Timezone abbreviation EST or MDT S English ordinal suffix for the day of the month, 2 characters st, nd, rd or th. Works well with j w Numeric representation of the day of the week 0 (for Sunday) through 6 (for Saturday) W ISO-8601 week number of year, weeks starting on Monday Example: 42 (the 42 nd week in the year) t Number of days in the given month 28 through 31 a Lowercase Ante meridiem and Post meridiem am or pm A Uppercase Ante meridiem and Post meridiem AM or PM B Swatch internet time 000 through 999 g 12-hour format of an hour without leading zeros 1 through 12 G 24-hour format of an hour without leading zeros 1 through 23 Z Timezone offset in seconds. The offset for timezones west of UTC is always negative, and for those east of UTC is always positive. -43200 through 50400 c ISO 8601 date 2004-02-12T15:19:21+00:00 r RFC 2822 formatted date Thu, 21 Dec 2000 16:01:07 +0200 U Seconds since the Unix Epoch (January 1 1970 00:00:00 GMT) 1607759234 datetime_current(\"UTC\", \"d M Y H:i:s\") => \"12 Jan 2020 18:55:01\" datetime_current(\"UTC\", \"d M Y H:i:s\", \"-1 day\") => \"11 Jan 2020 18:55:01\" datetime_current(\"UTC\", \"d M Y H:i:s\", \"+1 hour\") => \"12 Jan 2020 19:55:01\" datetime_current(\"UTC\", \"d M Y H:i:s\", \"+1 minute\") => \"12 Jan 2020 18:56:01\" datetime_current(\"UTC\", \"d M Y H:i:s\", \"+30 seconds\") => \"12 Jan 2020 18:56:31\" datetime_current(\"UTC\", \"c\") => \"2020-01-12T18:55:01+00:00\" datetime_current(\"Australia/Sydney\", \"c\") => \"2020-01-13T05:55:01+11:00\" Modify Datetime \u00b6 datetime_modify(string $value, string $inputTimezone, string $inputFormat, string $outputTimezone, string $outputFormat, [string $modification]):string Loads a string datetime from $value in specified $inputTimezone and $inputFormat , converts that $value into $outputTimezone and $outputFormat . If $modification is specified, $value is modified by $modification string before returning. $modification is a textual representation; ie. \"+1 day\" would add one day to the datetime, \"+1 hour\" would add one hour to the datetime, \"-2 years\" would subtract two years, and so forth. Format Description Example Y Four digit year 2020 y Two digit year 20 M Three character month Jan m Two digit month 01 F A full textual representation of a month, such as January or March January through December n Numeric representation of a month, without leading zeros 1 through 12 D Three character day Sat d Two digit day 12 j Day of the month without leading zero 1 to 31 l A full textual representation of the day of the week Saturday N ISO-8601 numeric representation of the day of the week 1 (for Monday) through 7 (for Sunday) h 12-hour format of an hour with leading zeros 01 through 12 H Hour in 24 hour format with leading zero 06 or 18 i Minutes with leading zeros 00 to 59 s Seconds with leading zeros 00 to 59 u Microseconds 654321 v Miliseconds 654 e Timezone identifier UTC or GMT or Atlantic/Azores O Difference to Greenwich time (GMT) without colon between hours and minutes +0200 P Difference to Greenwich time (GMT) with colon between hours and minutes +00:00 or +10:00 p The same as P, but returns Z instead of +00:00 T Timezone abbreviation EST or MDT S English ordinal suffix for the day of the month, 2 characters st, nd, rd or th. Works well with j w Numeric representation of the day of the week 0 (for Sunday) through 6 (for Saturday) W ISO-8601 week number of year, weeks starting on Monday Example: 42 (the 42 nd week in the year) t Number of days in the given month 28 through 31 a Lowercase Ante meridiem and Post meridiem am or pm A Uppercase Ante meridiem and Post meridiem AM or PM B Swatch internet time 000 through 999 g 12-hour format of an hour without leading zeros 1 through 12 G 24-hour format of an hour without leading zeros 1 through 23 Z Timezone offset in seconds. The offset for timezones west of UTC is always negative, and for those east of UTC is always positive. -43200 through 50400 c ISO 8601 date 2004-02-12T15:19:21+00:00 r RFC 2822 formatted date Thu, 21 Dec 2000 16:01:07 +0200 U Seconds since the Unix Epoch (January 1 1970 00:00:00 GMT) 1607759234 datetime_modify(\"12 Jan 2020 18:55:01\", \"UTC\", \"d M Y H:i:s\", \"UTC\", \"Y-m-d\") => \"2020-01-12\" datetime_modify(\"12 Jan 2020 18:55:01\", \"UTC\", \"d M Y H:i:s\", \"UTC\", \"Y-m-d\", \"+1 day\") => \"2020-01-13\" datetime_modify(\"12 Jan 2020 18:55:01\", \"UTC\", \"d M Y H:i:s\", \"Australia/Sydney\", \"Y-m-d\") => \"2020-01-13\"","title":"Datetime Functions"},{"location":"reference/mapping/functions/datetime/#current-datetime","text":"datetime_current(string $timezone, string $format, [string $modification]):string Produces current datetime (now) in specified $timezone and $format . Returns the resulting datetime as a string. Optionally modifies the return string datetime by $modification . $modification is a textual representation; ie. \"+1 day\" would add one day to the datetime, \"+1 hour\" would add one hour to the datetime, \"-2 years\" would subtract two years, and so forth. Format Description Example Y Four digit year 2020 y Two digit year 20 M Three character month Jan m Two digit month 01 F A full textual representation of a month, such as January or March January through December n Numeric representation of a month, without leading zeros 1 through 12 D Three character day Sat d Two digit day 12 j Day of the month without leading zero 1 to 31 l A full textual representation of the day of the week Saturday N ISO-8601 numeric representation of the day of the week 1 (for Monday) through 7 (for Sunday) h 12-hour format of an hour with leading zeros 01 through 12 H Hour in 24 hour format with leading zero 06 or 18 i Minutes with leading zeros 00 to 59 s Seconds with leading zeros 00 to 59 u Microseconds 654321 v Miliseconds 654 e Timezone identifier UTC or GMT or Atlantic/Azores O Difference to Greenwich time (GMT) without colon between hours and minutes +0200 P Difference to Greenwich time (GMT) with colon between hours and minutes +00:00 or +10:00 p The same as P, but returns Z instead of +00:00 T Timezone abbreviation EST or MDT S English ordinal suffix for the day of the month, 2 characters st, nd, rd or th. Works well with j w Numeric representation of the day of the week 0 (for Sunday) through 6 (for Saturday) W ISO-8601 week number of year, weeks starting on Monday Example: 42 (the 42 nd week in the year) t Number of days in the given month 28 through 31 a Lowercase Ante meridiem and Post meridiem am or pm A Uppercase Ante meridiem and Post meridiem AM or PM B Swatch internet time 000 through 999 g 12-hour format of an hour without leading zeros 1 through 12 G 24-hour format of an hour without leading zeros 1 through 23 Z Timezone offset in seconds. The offset for timezones west of UTC is always negative, and for those east of UTC is always positive. -43200 through 50400 c ISO 8601 date 2004-02-12T15:19:21+00:00 r RFC 2822 formatted date Thu, 21 Dec 2000 16:01:07 +0200 U Seconds since the Unix Epoch (January 1 1970 00:00:00 GMT) 1607759234 datetime_current(\"UTC\", \"d M Y H:i:s\") => \"12 Jan 2020 18:55:01\" datetime_current(\"UTC\", \"d M Y H:i:s\", \"-1 day\") => \"11 Jan 2020 18:55:01\" datetime_current(\"UTC\", \"d M Y H:i:s\", \"+1 hour\") => \"12 Jan 2020 19:55:01\" datetime_current(\"UTC\", \"d M Y H:i:s\", \"+1 minute\") => \"12 Jan 2020 18:56:01\" datetime_current(\"UTC\", \"d M Y H:i:s\", \"+30 seconds\") => \"12 Jan 2020 18:56:31\" datetime_current(\"UTC\", \"c\") => \"2020-01-12T18:55:01+00:00\" datetime_current(\"Australia/Sydney\", \"c\") => \"2020-01-13T05:55:01+11:00\"","title":"Current Datetime"},{"location":"reference/mapping/functions/datetime/#modify-datetime","text":"datetime_modify(string $value, string $inputTimezone, string $inputFormat, string $outputTimezone, string $outputFormat, [string $modification]):string Loads a string datetime from $value in specified $inputTimezone and $inputFormat , converts that $value into $outputTimezone and $outputFormat . If $modification is specified, $value is modified by $modification string before returning. $modification is a textual representation; ie. \"+1 day\" would add one day to the datetime, \"+1 hour\" would add one hour to the datetime, \"-2 years\" would subtract two years, and so forth. Format Description Example Y Four digit year 2020 y Two digit year 20 M Three character month Jan m Two digit month 01 F A full textual representation of a month, such as January or March January through December n Numeric representation of a month, without leading zeros 1 through 12 D Three character day Sat d Two digit day 12 j Day of the month without leading zero 1 to 31 l A full textual representation of the day of the week Saturday N ISO-8601 numeric representation of the day of the week 1 (for Monday) through 7 (for Sunday) h 12-hour format of an hour with leading zeros 01 through 12 H Hour in 24 hour format with leading zero 06 or 18 i Minutes with leading zeros 00 to 59 s Seconds with leading zeros 00 to 59 u Microseconds 654321 v Miliseconds 654 e Timezone identifier UTC or GMT or Atlantic/Azores O Difference to Greenwich time (GMT) without colon between hours and minutes +0200 P Difference to Greenwich time (GMT) with colon between hours and minutes +00:00 or +10:00 p The same as P, but returns Z instead of +00:00 T Timezone abbreviation EST or MDT S English ordinal suffix for the day of the month, 2 characters st, nd, rd or th. Works well with j w Numeric representation of the day of the week 0 (for Sunday) through 6 (for Saturday) W ISO-8601 week number of year, weeks starting on Monday Example: 42 (the 42 nd week in the year) t Number of days in the given month 28 through 31 a Lowercase Ante meridiem and Post meridiem am or pm A Uppercase Ante meridiem and Post meridiem AM or PM B Swatch internet time 000 through 999 g 12-hour format of an hour without leading zeros 1 through 12 G 24-hour format of an hour without leading zeros 1 through 23 Z Timezone offset in seconds. The offset for timezones west of UTC is always negative, and for those east of UTC is always positive. -43200 through 50400 c ISO 8601 date 2004-02-12T15:19:21+00:00 r RFC 2822 formatted date Thu, 21 Dec 2000 16:01:07 +0200 U Seconds since the Unix Epoch (January 1 1970 00:00:00 GMT) 1607759234 datetime_modify(\"12 Jan 2020 18:55:01\", \"UTC\", \"d M Y H:i:s\", \"UTC\", \"Y-m-d\") => \"2020-01-12\" datetime_modify(\"12 Jan 2020 18:55:01\", \"UTC\", \"d M Y H:i:s\", \"UTC\", \"Y-m-d\", \"+1 day\") => \"2020-01-13\" datetime_modify(\"12 Jan 2020 18:55:01\", \"UTC\", \"d M Y H:i:s\", \"Australia/Sydney\", \"Y-m-d\") => \"2020-01-13\"","title":"Modify Datetime"},{"location":"reference/mapping/functions/formula/","text":"Before you begin In order to use the features in this section you need to have an active Spojit account. If you don't have an account you can checkout out the pricing and register here . If you already have an account you can login here . Break Sequence \u00b6 break(mixed $value, array $condtions) Will break (stop) functions from processing if conditions are not met. Uses the last functions' chain data and will pass that data to the next function if valid. If a default value is entered that will be returned to the field if the function sequence fails. break(56, [{\"operator\": \"eq\", \"value\": 56}]) => WILL CONTINUE break(\"pendingOrder\", [{\"operator\": \"neq\", \"value\": \"pendingOrder\"}]) => WILL NOT CONTINUE Formula \u00b6 formula(string $value) Create a custom formula to transform the field using common Excel syntax. Adding \"{{ this }}\" will enter the value of the field or previous function. Double quotes need to be around strings. A full list of functions is available at the Microsoft website . Not all functions are available. If the value of the field is 600.5655464: formula('if({{ this }}>500,\"profit\",\"loss\")') => \"profit\" formula('round({{ this }}, 2)') => 600.57","title":"Formula Functions"},{"location":"reference/mapping/functions/formula/#break-sequence","text":"break(mixed $value, array $condtions) Will break (stop) functions from processing if conditions are not met. Uses the last functions' chain data and will pass that data to the next function if valid. If a default value is entered that will be returned to the field if the function sequence fails. break(56, [{\"operator\": \"eq\", \"value\": 56}]) => WILL CONTINUE break(\"pendingOrder\", [{\"operator\": \"neq\", \"value\": \"pendingOrder\"}]) => WILL NOT CONTINUE","title":"Break Sequence"},{"location":"reference/mapping/functions/formula/#formula","text":"formula(string $value) Create a custom formula to transform the field using common Excel syntax. Adding \"{{ this }}\" will enter the value of the field or previous function. Double quotes need to be around strings. A full list of functions is available at the Microsoft website . Not all functions are available. If the value of the field is 600.5655464: formula('if({{ this }}>500,\"profit\",\"loss\")') => \"profit\" formula('round({{ this }}, 2)') => 600.57","title":"Formula"},{"location":"reference/mapping/functions/math/","text":"Before you begin In order to use the features in this section you need to have an active Spojit account. If you don't have an account you can checkout out the pricing and register here . If you already have an account you can login here . Sum \u00b6 sum(array $value):mixed Sums all value in given array and returns a number. sum([1, 2, 3]) => 6 sum([1.2, 2.2]) => 3.4 sum([]) => 0","title":"Math Functions"},{"location":"reference/mapping/functions/math/#sum","text":"sum(array $value):mixed Sums all value in given array and returns a number. sum([1, 2, 3]) => 6 sum([1.2, 2.2]) => 3.4 sum([]) => 0","title":"Sum"},{"location":"reference/mapping/functions/string/","text":"Before you begin In order to use the features in this section you need to have an active Spojit account. If you don't have an account you can checkout out the pricing and register here . If you already have an account you can login here . Trim \u00b6 trim(string $value, string $type, [string $charmask]) : string Strips whitespaces or other characters from a string. If $type is \"both\", strips strips characters from both start and end of a string. If $type is \"start\", strips characters from the start of a string. If $type is \"end\", strips characters from the end of a string. $charmask allows you to specify the characters you want to strip from a string. If not provided, Trim will strip the following characters by default: \" \" (ASCII 32 (0x20)), an ordinary space. \"\\t\" (ASCII 9 (0x09)), a tab. \"\\n\" (ASCII 10 (0x0A)), a new line (line feed). \"\\r\" (ASCII 13 (0x0D)), a carriage return. \"\\0\" (ASCII 0 (0x00)), the NUL-byte. \"\\v\" (ASCII 11 (0x0B)), a vertical tab. trim(\"Hello World\", \"both\", \"Hdle\") => \"o Wor\" trim(\"\\t\\tThese are few words :) ... \", \"both\") => \"These are a few words :) ...\" trim(\"\\t\\tThese are few words :) ... \", \"both\", \" \\t.\") => \"These are a few words :)\" trim(\"00000123\", \"start\", \"0\") => \"123\" trim(\"00000123\", \"end\", \"3\") => \"0000012\" To Lower \u00b6 toLower(string $value) : string Makes a string lowercase. Returns string with all alphabetic characters converted to lowercase. toLower(\"Hello World\") => \"hello world\" toLower(\"Mary Had A Little Lamb\") => \"mary had a little lamb\" To Upper \u00b6 toUpper(string $value) : string Makes a string uppercase. Returns string with all alphabetic characters converted to uppercase. toUpper(\"Hello World\") => \"HELLO WORLD\" toUpper(\"Mary Had A Little Lamb\") => \"MARY HAD A LITTLE LAMB\" Substring \u00b6 substring(string $value, int $start, [int $length]) : string Returns part of a string specified by the $start and optional $length parameters. If $start is non-negative, the returned string will start at the $start'th position in string, counting from zero. For instance, in the string 'abcdef', the character at position 0 is 'a', the character at position 2 is 'c', and so forth. If $length is given and is 0, an empty string will be returned. If $length is omitted, a string starting from $start until the end of the string will be returned. If $start is negative, the returned string will start at the $start'th character from the end of string. If $value is less than $start characters long, false will be returned. substr(\"abcdef\", -1) => \"f\" substr(\"abcdef\", -2) => \"ef\" substr(\"abcdef\", -3, 1) => \"d\" substr(\"abcdef\", 0, -1) => \"abcde\" substr(\"abcdef\", 2, -1) => \"cde\" substr(\"abcdef\", 4, -4) => false substr(\"abcdef\", -3, -1) => \"de\" String Replace \u00b6 str_replace(string $search, string $replace, string $value) : string Replaces all occurrences of the search string with the replacement string. $search is the value being searched for in given string, otherwise known as the needle. $replace is the replacement value that replaces found $search value. str_replace(\"0\", \"\", \"000123000\") => \"123\" str_replace(\"%body%\", \"black\", \"<body text='%body%'>\") => \"<body text='black'>\" Explode \u00b6 explode(string $value, string $delimiter, [int $limit, int $returnIndex]) : string Splits a string into chunks by given $delimiter . Returns an array of strings, each of which is a substring of string formed by splitting it on boundaries formed by the string $delimiter . If $delimiter is an empty string (\"\"), explode will return false. If $delimiter contains a value that is not contained in string and a negative limit is used, then an empty array will be returned, otherwise an array containing $value will be returned. If $limit is set and positive, the returned array will contain a maximum of $limit elements with the last element containing the rest of string. If the $limit parameter is negative, all components except the last -$limit are returned. If $returnIndex is set, explode will return the index value of the array. explode(\"piece1 piece2 piece3\", \" \") => [\"piece1\", \"piece2\", \"piece3\"] explode(\"piece1 piece2 piece3\", \" \", 2) => [\"piece1\", \"piece2 piece3\"] explode(\"piece1 piece2 piece3\", \" \", -1) => [\"piece1\", \"piece2\"] explode(\"piece1 piece2 piece3\", \" \", 2, 0) => \"piece1\" explode(\"piece1 piece2 piece3\", \" \", 2, 1) => \"piece2 piece3\" Substring Count \u00b6 substr_count(string $value, string $search) : int Counts the number of substring occurrences in given string. Returns a number (integer) - the count of $search occurences. This function doesn't count overlapped substrings. substr_count(\"This is a test\", \"test\") => 1 substr_count(\"This is a test\", \"is\") => 2 substr_count(\"gcdgcdgcd\", \"gcdgcd\") => 1 (does not count overlapped substrings) Format String \u00b6 str_format(string $value, string $format) : string Returns a string produced according to the formatting string $format , or false on failure. The $format string is composed of zero or more directives: ordinary characters (excluding %) that are copied directly to the result and conversion specifications, each of which results in fetching its own parameter. A conversion specification follows this prototype: %[argnum$][flags][width][.precision]specifier. argnum is an integer followed by a dollar sign $, to specify which number argument to treat in the conversion. Flag Description - Left-justify within the given field width; Right justification is the default + Prefix positive numbers with a plus sign +; Default only negative are prefixed with a negative sign. (space) Pads the result with spaces. This is the default. 0 Only left-pads numbers with zeros. With s specifiers this can also right-pad with zeros. '(char) Pads the result with the character (char). width is an integer that says how many characters (minimum) this conversion should result in. precision - a period . followed by an integer who's meaning depends on the specifier: For e, E, f and F specifiers: this is the number of digits to be printed after the decimal point (by default, this is 6). For g and G specifiers: this is the maximum number of significant digits to be printed. For s specifier: it acts as a cutoff point, setting a maximum character limit to the string. Specifier Description % A literal percent character. No argument is required. b The argument is treated as an integer and presented as a binary number. c The argument is treated as an integer and presented as the character with that ASCII. d The argument is treated as an integer and presented as a (signed) decimal number. e The argument is treated as scientific notation (e.g. 1.2e+2). The precision specifier stands for the number of digits after the decimal point E Like the e specifier but uses uppercase letter (e.g. 1.2E+2). f The argument is treated as a float and presented as a floating-point number (locale aware). F The argument is treated as a float and presented as a floating-point number (non-locale aware). g General format. Let P equal the precision if nonzero, 6 if the precision is omitted, or 1 if the precision is zero. Then, if a conversion with style E would have an exponent of X: If P > X \u2265 \u22124, the conversion is with style f and precision P \u2212 (X + 1). Otherwise, the conversion is with style e and precision P \u2212 1. G Like the g specifier but uses E and f. o The argument is treated as an integer and presented as an octal number. s The argument is treated and presented as a string. u The argument is treated as an integer and presented as an unsigned decimal number. x The argument is treated as an integer and presented as a hexadecimal number (with lowercase letters). X The argument is treated as an integer and presented as a hexadecimal number (with uppercase letters). Type Specifier string s integer d, u, c, o, x, X, b double g, G, e, E, f, F str_format(\"5\", \"There are %s monkeys in the tree.\") => \"There are 5 monkeys in the tree.\" str_format(\"123\", \"%'.9d\") => \"......123\" str_format(\"123\", \"%'.09d') => \"000000123\" str_format(\"123.1\", \"%01.2f\") => \"123.10\" str_format(\"362525200\", \"%.3e\") => \"3.625e+8\" Split \u00b6 split(string $value, [int $length)] : array Splits a string $value into chunks and returns all chunks as an array (converts string to an array). $length is the maximum length of each chunk after split. If $length is omitted, each chunk will be a single character long. split(\"string\") => [\"s\", \"t\", \"r\", \"i\", \"n\", \"g\"] split(\"string\", 2) => [\"st\", \"ri\", \"ng\"] Regex Match \u00b6 regex_match(string $value, string $pattern, int $matchIndex) : string Performs a regular expression search of $value by $pattern specified. Returns found match by the $matchIndex . $pattern is the pattern to search for in given string. Pattern Description [abc] A single character: a, b, or c [^abc] Any single character but a, b, or c [a-z] Any single character in the range a-z [a-zA-Z] Any single character in the range a-z or A-Z ^ Start of line $ End of line \\A Start of string \\z End of string . Any single character \\s Any whitespace character \\S Any non-whitespace character \\d Any digit \\D Any non-digit \\w Any word character (letter, number, underscore) \\W Any non-word character \\b Any word boundary character (...) Capture everything enclosed (a|b) a or b a? Zero or one of a a* Zero or more of a a+ One or more of a a{3} Exactly 3 of a a{3,} 3 or more of a a{3,6} Between 3 and 6 of a regex_match(\"foobar: 2008\", \"/(\\w+): (\\d+)/\", 0) => \"foobar: 2008\" regex_match(\"foobar: 2008\", \"/(\\w+): (\\d+)/\", 1) => \"foobar\" regex_match(\"foobar: 2008\", \"/(\\w+): (\\d+)/\", 2) => \"2008\" regex_match(\"http://www.spojit.com/index.html\", \"@^(?:http://)?([^/]+)@i\", 1) => \"www.spojit.com\" regex_match(\"www.spojit.com\", \"/[^.]+\\.[^.]+$/\", 0) => \"spojit.com\" Regex Replace \u00b6 regex_replace(string $value, string $pattern, string $replacement, [integer $limit]) : string Searches $value for matches to $pattern and replaces them with $replacement . $pattern must include a delimiter - forward slash '/' is recommended. Example: /searchme/ would search for any occurence of 'searchme' in given text and replace them with the $replacement . $pattern is the pattern to search for specified as a string enclosed in a delimiter (use forward slash /). $limit specifies the maximum possible replacements of matched $pattern in given $value . Defaults to -1 (unlimited) - all found occurences will be replaced. Special character Description \\ Quote the next metacharacter ^ Match the beginning of the line . Match any character (except newline) $ Match the end of the line (or before newline at the end) | Alternation (or) ( ) Group [ ] Character class * Match 0 or more times + Match 1 or more times ? Match 1 or 0 times {n} Match exactly n times {n,} Match at least n times {n,m} Match at least n but no more than m times regex_replace(\"The quick brown fox.\", \"/quick/\", \"slow\") => \"The slow brown fox.\" //strip excess whitespaces regex_replace(\"foo o\", \"/\\s\\s+/\", \" \") => \"foo o\" //remove all characters except for numbers and letters regex_replace(\"D'usseldorfer H'auptstrasse\", \"/[^A-Za-z0-9_]/\") => \"Dusseldorfer Hauptstrasse\" regex_replace(\"April 15, 2003\", \"/(\\w+) (\\d+),(\\d+)/i\", \"${1}1,$3\") => \"April1,2003\"","title":"String Functions"},{"location":"reference/mapping/functions/string/#trim","text":"trim(string $value, string $type, [string $charmask]) : string Strips whitespaces or other characters from a string. If $type is \"both\", strips strips characters from both start and end of a string. If $type is \"start\", strips characters from the start of a string. If $type is \"end\", strips characters from the end of a string. $charmask allows you to specify the characters you want to strip from a string. If not provided, Trim will strip the following characters by default: \" \" (ASCII 32 (0x20)), an ordinary space. \"\\t\" (ASCII 9 (0x09)), a tab. \"\\n\" (ASCII 10 (0x0A)), a new line (line feed). \"\\r\" (ASCII 13 (0x0D)), a carriage return. \"\\0\" (ASCII 0 (0x00)), the NUL-byte. \"\\v\" (ASCII 11 (0x0B)), a vertical tab. trim(\"Hello World\", \"both\", \"Hdle\") => \"o Wor\" trim(\"\\t\\tThese are few words :) ... \", \"both\") => \"These are a few words :) ...\" trim(\"\\t\\tThese are few words :) ... \", \"both\", \" \\t.\") => \"These are a few words :)\" trim(\"00000123\", \"start\", \"0\") => \"123\" trim(\"00000123\", \"end\", \"3\") => \"0000012\"","title":"Trim"},{"location":"reference/mapping/functions/string/#to-lower","text":"toLower(string $value) : string Makes a string lowercase. Returns string with all alphabetic characters converted to lowercase. toLower(\"Hello World\") => \"hello world\" toLower(\"Mary Had A Little Lamb\") => \"mary had a little lamb\"","title":"To Lower"},{"location":"reference/mapping/functions/string/#to-upper","text":"toUpper(string $value) : string Makes a string uppercase. Returns string with all alphabetic characters converted to uppercase. toUpper(\"Hello World\") => \"HELLO WORLD\" toUpper(\"Mary Had A Little Lamb\") => \"MARY HAD A LITTLE LAMB\"","title":"To Upper"},{"location":"reference/mapping/functions/string/#substring","text":"substring(string $value, int $start, [int $length]) : string Returns part of a string specified by the $start and optional $length parameters. If $start is non-negative, the returned string will start at the $start'th position in string, counting from zero. For instance, in the string 'abcdef', the character at position 0 is 'a', the character at position 2 is 'c', and so forth. If $length is given and is 0, an empty string will be returned. If $length is omitted, a string starting from $start until the end of the string will be returned. If $start is negative, the returned string will start at the $start'th character from the end of string. If $value is less than $start characters long, false will be returned. substr(\"abcdef\", -1) => \"f\" substr(\"abcdef\", -2) => \"ef\" substr(\"abcdef\", -3, 1) => \"d\" substr(\"abcdef\", 0, -1) => \"abcde\" substr(\"abcdef\", 2, -1) => \"cde\" substr(\"abcdef\", 4, -4) => false substr(\"abcdef\", -3, -1) => \"de\"","title":"Substring"},{"location":"reference/mapping/functions/string/#string-replace","text":"str_replace(string $search, string $replace, string $value) : string Replaces all occurrences of the search string with the replacement string. $search is the value being searched for in given string, otherwise known as the needle. $replace is the replacement value that replaces found $search value. str_replace(\"0\", \"\", \"000123000\") => \"123\" str_replace(\"%body%\", \"black\", \"<body text='%body%'>\") => \"<body text='black'>\"","title":"String Replace"},{"location":"reference/mapping/functions/string/#explode","text":"explode(string $value, string $delimiter, [int $limit, int $returnIndex]) : string Splits a string into chunks by given $delimiter . Returns an array of strings, each of which is a substring of string formed by splitting it on boundaries formed by the string $delimiter . If $delimiter is an empty string (\"\"), explode will return false. If $delimiter contains a value that is not contained in string and a negative limit is used, then an empty array will be returned, otherwise an array containing $value will be returned. If $limit is set and positive, the returned array will contain a maximum of $limit elements with the last element containing the rest of string. If the $limit parameter is negative, all components except the last -$limit are returned. If $returnIndex is set, explode will return the index value of the array. explode(\"piece1 piece2 piece3\", \" \") => [\"piece1\", \"piece2\", \"piece3\"] explode(\"piece1 piece2 piece3\", \" \", 2) => [\"piece1\", \"piece2 piece3\"] explode(\"piece1 piece2 piece3\", \" \", -1) => [\"piece1\", \"piece2\"] explode(\"piece1 piece2 piece3\", \" \", 2, 0) => \"piece1\" explode(\"piece1 piece2 piece3\", \" \", 2, 1) => \"piece2 piece3\"","title":"Explode"},{"location":"reference/mapping/functions/string/#substring-count","text":"substr_count(string $value, string $search) : int Counts the number of substring occurrences in given string. Returns a number (integer) - the count of $search occurences. This function doesn't count overlapped substrings. substr_count(\"This is a test\", \"test\") => 1 substr_count(\"This is a test\", \"is\") => 2 substr_count(\"gcdgcdgcd\", \"gcdgcd\") => 1 (does not count overlapped substrings)","title":"Substring Count"},{"location":"reference/mapping/functions/string/#format-string","text":"str_format(string $value, string $format) : string Returns a string produced according to the formatting string $format , or false on failure. The $format string is composed of zero or more directives: ordinary characters (excluding %) that are copied directly to the result and conversion specifications, each of which results in fetching its own parameter. A conversion specification follows this prototype: %[argnum$][flags][width][.precision]specifier. argnum is an integer followed by a dollar sign $, to specify which number argument to treat in the conversion. Flag Description - Left-justify within the given field width; Right justification is the default + Prefix positive numbers with a plus sign +; Default only negative are prefixed with a negative sign. (space) Pads the result with spaces. This is the default. 0 Only left-pads numbers with zeros. With s specifiers this can also right-pad with zeros. '(char) Pads the result with the character (char). width is an integer that says how many characters (minimum) this conversion should result in. precision - a period . followed by an integer who's meaning depends on the specifier: For e, E, f and F specifiers: this is the number of digits to be printed after the decimal point (by default, this is 6). For g and G specifiers: this is the maximum number of significant digits to be printed. For s specifier: it acts as a cutoff point, setting a maximum character limit to the string. Specifier Description % A literal percent character. No argument is required. b The argument is treated as an integer and presented as a binary number. c The argument is treated as an integer and presented as the character with that ASCII. d The argument is treated as an integer and presented as a (signed) decimal number. e The argument is treated as scientific notation (e.g. 1.2e+2). The precision specifier stands for the number of digits after the decimal point E Like the e specifier but uses uppercase letter (e.g. 1.2E+2). f The argument is treated as a float and presented as a floating-point number (locale aware). F The argument is treated as a float and presented as a floating-point number (non-locale aware). g General format. Let P equal the precision if nonzero, 6 if the precision is omitted, or 1 if the precision is zero. Then, if a conversion with style E would have an exponent of X: If P > X \u2265 \u22124, the conversion is with style f and precision P \u2212 (X + 1). Otherwise, the conversion is with style e and precision P \u2212 1. G Like the g specifier but uses E and f. o The argument is treated as an integer and presented as an octal number. s The argument is treated and presented as a string. u The argument is treated as an integer and presented as an unsigned decimal number. x The argument is treated as an integer and presented as a hexadecimal number (with lowercase letters). X The argument is treated as an integer and presented as a hexadecimal number (with uppercase letters). Type Specifier string s integer d, u, c, o, x, X, b double g, G, e, E, f, F str_format(\"5\", \"There are %s monkeys in the tree.\") => \"There are 5 monkeys in the tree.\" str_format(\"123\", \"%'.9d\") => \"......123\" str_format(\"123\", \"%'.09d') => \"000000123\" str_format(\"123.1\", \"%01.2f\") => \"123.10\" str_format(\"362525200\", \"%.3e\") => \"3.625e+8\"","title":"Format String"},{"location":"reference/mapping/functions/string/#split","text":"split(string $value, [int $length)] : array Splits a string $value into chunks and returns all chunks as an array (converts string to an array). $length is the maximum length of each chunk after split. If $length is omitted, each chunk will be a single character long. split(\"string\") => [\"s\", \"t\", \"r\", \"i\", \"n\", \"g\"] split(\"string\", 2) => [\"st\", \"ri\", \"ng\"]","title":"Split"},{"location":"reference/mapping/functions/string/#regex-match","text":"regex_match(string $value, string $pattern, int $matchIndex) : string Performs a regular expression search of $value by $pattern specified. Returns found match by the $matchIndex . $pattern is the pattern to search for in given string. Pattern Description [abc] A single character: a, b, or c [^abc] Any single character but a, b, or c [a-z] Any single character in the range a-z [a-zA-Z] Any single character in the range a-z or A-Z ^ Start of line $ End of line \\A Start of string \\z End of string . Any single character \\s Any whitespace character \\S Any non-whitespace character \\d Any digit \\D Any non-digit \\w Any word character (letter, number, underscore) \\W Any non-word character \\b Any word boundary character (...) Capture everything enclosed (a|b) a or b a? Zero or one of a a* Zero or more of a a+ One or more of a a{3} Exactly 3 of a a{3,} 3 or more of a a{3,6} Between 3 and 6 of a regex_match(\"foobar: 2008\", \"/(\\w+): (\\d+)/\", 0) => \"foobar: 2008\" regex_match(\"foobar: 2008\", \"/(\\w+): (\\d+)/\", 1) => \"foobar\" regex_match(\"foobar: 2008\", \"/(\\w+): (\\d+)/\", 2) => \"2008\" regex_match(\"http://www.spojit.com/index.html\", \"@^(?:http://)?([^/]+)@i\", 1) => \"www.spojit.com\" regex_match(\"www.spojit.com\", \"/[^.]+\\.[^.]+$/\", 0) => \"spojit.com\"","title":"Regex Match"},{"location":"reference/mapping/functions/string/#regex-replace","text":"regex_replace(string $value, string $pattern, string $replacement, [integer $limit]) : string Searches $value for matches to $pattern and replaces them with $replacement . $pattern must include a delimiter - forward slash '/' is recommended. Example: /searchme/ would search for any occurence of 'searchme' in given text and replace them with the $replacement . $pattern is the pattern to search for specified as a string enclosed in a delimiter (use forward slash /). $limit specifies the maximum possible replacements of matched $pattern in given $value . Defaults to -1 (unlimited) - all found occurences will be replaced. Special character Description \\ Quote the next metacharacter ^ Match the beginning of the line . Match any character (except newline) $ Match the end of the line (or before newline at the end) | Alternation (or) ( ) Group [ ] Character class * Match 0 or more times + Match 1 or more times ? Match 1 or 0 times {n} Match exactly n times {n,} Match at least n times {n,m} Match at least n but no more than m times regex_replace(\"The quick brown fox.\", \"/quick/\", \"slow\") => \"The slow brown fox.\" //strip excess whitespaces regex_replace(\"foo o\", \"/\\s\\s+/\", \" \") => \"foo o\" //remove all characters except for numbers and letters regex_replace(\"D'usseldorfer H'auptstrasse\", \"/[^A-Za-z0-9_]/\") => \"Dusseldorfer Hauptstrasse\" regex_replace(\"April 15, 2003\", \"/(\\w+) (\\d+),(\\d+)/i\", \"${1}1,$3\") => \"April1,2003\"","title":"Regex Replace"},{"location":"reference/services/","text":"Services \u00b6 Each service is an independent mini application facilitating a unique function (ie. send SMS, or fetch data from a server). Depending on complexity, a service may require configuration and/or authorization.","title":"Services"},{"location":"reference/services/#services","text":"Each service is an independent mini application facilitating a unique function (ie. send SMS, or fetch data from a server). Depending on complexity, a service may require configuration and/or authorization.","title":"Services"},{"location":"reference/services/array-service/","text":"Before you begin In order to use the features in this section you need to have an active Spojit account. If you don't have an account you can checkout out the pricing and register here . If you already have an account you can login here . This service can be used to merge arrays, join object values and filter objects in an array. Array Merge \u00b6 Array merge will merge two arrays into one array. Option Description Default Required Method Select \"arrayMerge\". - TRUE Array 1 The first array. - TRUE Array 2 The second array. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the array service to merge two arrays. The array service doesn't require any service data setup. Given the following 2 arrays: [ { \"id_number\" : \"1\" , \"job_name\" : \"Scuba Diver\" } ] [ { \"id_number\" : \"2\" , \"job_name\" : \"Plumber\" } ] In this example the following output will be generated automatically by this service after it is run: { \"data\" : [ { \"id_number\" : \"1\" , \"job_name\" : \"Scuba Diver\" }, { \"id_number\" : \"2\" , \"job_name\" : \"Plumber\" } ], \"metadata\" : {} } Filter By \u00b6 Filter By will remove items from an array if they don't match a given set of criteria. Option Description Default Required Method Select \"filterBy\". - TRUE Array The array to filter. - TRUE The following operators can be used for the criteria: Operator Description eq Equal to neq Not equal to lt Less than lte Less than equal to gt Greater than gte Greater than equal to isTrue Is it true isFalse Is it false isNull Is it NULL isNotNull Is it not NULL Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the array service to filter an array based on criteria. The array service doesn't require any service data setup. Given the following arrays: [ { \"id_number\" : \"1\" , \"job_name\" : \"Scuba Diver\" }, { \"id_number\" : \"2\" , \"job_name\" : \"Plumber\" }, { \"id_number\" : \"3\" , \"job_name\" : \"Scuba Diver\" } ] In this example the following output will be generated automatically by this service after it is run if the criteria is job_name == \"Scuba Diver\" : { \"data\" : [ { \"id_number\" : \"1\" , \"job_name\" : \"Scuba Diver\" }, { \"id_number\" : \"3\" , \"job_name\" : \"Scuba Diver\" } ], \"metadata\" : {} } Filter While \u00b6 Filter While will iterate through an array and add items to a new array until criteria are not met and then stop iterating. Option Description Default Required Method Select \"filterWhile\". - TRUE Array The array to filter. - TRUE The following operators can be used for the criteria: Operator Description eq Equal to neq Not equal to lt Less than lte Less than equal to gt Greater than gte Greater than equal to isTrue Is it true isFalse Is it false isNull Is it NULL isNotNull Is it not NULL Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the array service to filter an array until criteria are not met. The array service doesn't require any service data setup. Given the following arrays: [ { \"id_number\" : \"1\" , \"job_name\" : \"Scuba Diver\" }, { \"id_number\" : \"2\" , \"job_name\" : \"Scuba Diver\" }, { \"id_number\" : \"3\" , \"job_name\" : \"Plumber\" }, { \"id_number\" : \"4\" , \"job_name\" : \"Scuba Diver\" } ] In this example the following output will be generated automatically by this service after it is run if the criteria is job_name == \"Scuba Diver\" : { \"data\" : [ { \"id_number\" : \"1\" , \"job_name\" : \"Scuba Diver\" }, { \"id_number\" : \"2\" , \"job_name\" : \"Scuba Diver\" } ], \"metadata\" : {} } Join While \u00b6 Join while will join the values into a string of subsequent objects by key while a given set of criteria is not met. Option Description Default Required Method Select \"joinWhile\". - TRUE Array The array to filter. - TRUE Separator The value put between the joined values. - FALSE The following operators can be used for the criteria: Operator Description eq Equal to neq Not equal to lt Less than lte Less than equal to gt Greater than gte Greater than equal to isTrue Is it true isFalse Is it false isNull Is it NULL isNotNull Is it not NULL Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the array service to join values of an array based on criteria. The array service doesn't require any service data setup. Given the following arrays: [ { \"id_number\" : \"1\" , \"job_name\" : \"Scuba Diver\" }, { \"id_number\" : \"\" , \"job_name\" : \"Plumber\" }, { \"id_number\" : \"3\" , \"job_name\" : \"Bus Driver\" }, { \"id_number\" : \"\" , \"job_name\" : \"Cashier\" }, { \"id_number\" : \"\" , \"job_name\" : \"Zoo Keeper\" } ] In this example the following output will be generated automatically by this service after it is run if the criteria is id_number != \"\" with a separator of - : { \"data\" : [ { \"id_number\" : \"1\" , \"job_name\" : \"Scuba Diver - Plumber\" }, { \"id_number\" : \"3\" , \"job_name\" : \"Bus Driver - Cashier - Zoo Keeper\" } ], \"metadata\" : {} } Multidimensional Array Combine Values \u00b6 Multidimensional Array Combine Values will combine values in a multidimensional array based on keys. Option Description Default Required Method Select \"multidimensionalCombineValues\". - TRUE Array The multidimensional array to process. - TRUE Keys A list of keys. - TRUE Tip Each key added is another level that will get you deeper in the array. If the key does not exist the function won't go any deeper. Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the array service to combine values in a multidimensional array. The array service doesn't require any service data setup. Given the following arrays: [ { \"id\" : 1 , \"name\" : \"Leanne Graham\" , \"username\" : \"Bret\" , \"email\" : \"Sincere@april.biz\" , \"companies\" : [ { \"name\" : \"Romaguera-Crona\" , \"catchPhrase\" : \"Multi-layered client-server neural-net\" , \"bs\" : \"harness real-time e-markets\" , }, { \"name\" : \"Deckow-Crist\" , \"catchPhrase\" : \"Proactive didactic contingency\" , \"bs\" : \"synergize scalable supply-chains\" } ] }, { \"id\" : 2 , \"name\" : \"Ervin Howell\" , \"username\" : \"Antonette\" , \"email\" : \"Shanna@melissa.tv\" , \"companies\" : [ { \"name\" : \"Romaguera-Jacobson\" , \"catchPhrase\" : \"Face to face bifurcated interface\" , \"bs\" : \"e-enable strategic applications\" }, { \"name\" : \"Robel-Corkery\" , \"catchPhrase\" : \"Multi-tiered zero tolerance productivity\" , \"bs\" : \"transition cutting-edge web services\" } ] } ] In this example the following output will be generated automatically by this service after it is run if the key is set to companies : { \"data\" : [ { \"name\" : \"Romaguera-Crona\" , \"catchPhrase\" : \"Multi-layered client-server neural-net\" , \"bs\" : \"harness real-time e-markets\" , }, { \"name\" : \"Deckow-Crist\" , \"catchPhrase\" : \"Proactive didactic contingency\" , \"bs\" : \"synergize scalable supply-chains\" }, { \"name\" : \"Romaguera-Jacobson\" , \"catchPhrase\" : \"Face to face bifurcated interface\" , \"bs\" : \"e-enable strategic applications\" }, { \"name\" : \"Robel-Corkery\" , \"catchPhrase\" : \"Multi-tiered zero tolerance productivity\" , \"bs\" : \"transition cutting-edge web services\" } ], \"metadata\" : {} }","title":"Array Service"},{"location":"reference/services/array-service/#array-merge","text":"Array merge will merge two arrays into one array. Option Description Default Required Method Select \"arrayMerge\". - TRUE Array 1 The first array. - TRUE Array 2 The second array. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the array service to merge two arrays. The array service doesn't require any service data setup. Given the following 2 arrays: [ { \"id_number\" : \"1\" , \"job_name\" : \"Scuba Diver\" } ] [ { \"id_number\" : \"2\" , \"job_name\" : \"Plumber\" } ] In this example the following output will be generated automatically by this service after it is run: { \"data\" : [ { \"id_number\" : \"1\" , \"job_name\" : \"Scuba Diver\" }, { \"id_number\" : \"2\" , \"job_name\" : \"Plumber\" } ], \"metadata\" : {} }","title":"Array Merge"},{"location":"reference/services/array-service/#filter-by","text":"Filter By will remove items from an array if they don't match a given set of criteria. Option Description Default Required Method Select \"filterBy\". - TRUE Array The array to filter. - TRUE The following operators can be used for the criteria: Operator Description eq Equal to neq Not equal to lt Less than lte Less than equal to gt Greater than gte Greater than equal to isTrue Is it true isFalse Is it false isNull Is it NULL isNotNull Is it not NULL Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the array service to filter an array based on criteria. The array service doesn't require any service data setup. Given the following arrays: [ { \"id_number\" : \"1\" , \"job_name\" : \"Scuba Diver\" }, { \"id_number\" : \"2\" , \"job_name\" : \"Plumber\" }, { \"id_number\" : \"3\" , \"job_name\" : \"Scuba Diver\" } ] In this example the following output will be generated automatically by this service after it is run if the criteria is job_name == \"Scuba Diver\" : { \"data\" : [ { \"id_number\" : \"1\" , \"job_name\" : \"Scuba Diver\" }, { \"id_number\" : \"3\" , \"job_name\" : \"Scuba Diver\" } ], \"metadata\" : {} }","title":"Filter By"},{"location":"reference/services/array-service/#filter-while","text":"Filter While will iterate through an array and add items to a new array until criteria are not met and then stop iterating. Option Description Default Required Method Select \"filterWhile\". - TRUE Array The array to filter. - TRUE The following operators can be used for the criteria: Operator Description eq Equal to neq Not equal to lt Less than lte Less than equal to gt Greater than gte Greater than equal to isTrue Is it true isFalse Is it false isNull Is it NULL isNotNull Is it not NULL Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the array service to filter an array until criteria are not met. The array service doesn't require any service data setup. Given the following arrays: [ { \"id_number\" : \"1\" , \"job_name\" : \"Scuba Diver\" }, { \"id_number\" : \"2\" , \"job_name\" : \"Scuba Diver\" }, { \"id_number\" : \"3\" , \"job_name\" : \"Plumber\" }, { \"id_number\" : \"4\" , \"job_name\" : \"Scuba Diver\" } ] In this example the following output will be generated automatically by this service after it is run if the criteria is job_name == \"Scuba Diver\" : { \"data\" : [ { \"id_number\" : \"1\" , \"job_name\" : \"Scuba Diver\" }, { \"id_number\" : \"2\" , \"job_name\" : \"Scuba Diver\" } ], \"metadata\" : {} }","title":"Filter While"},{"location":"reference/services/array-service/#join-while","text":"Join while will join the values into a string of subsequent objects by key while a given set of criteria is not met. Option Description Default Required Method Select \"joinWhile\". - TRUE Array The array to filter. - TRUE Separator The value put between the joined values. - FALSE The following operators can be used for the criteria: Operator Description eq Equal to neq Not equal to lt Less than lte Less than equal to gt Greater than gte Greater than equal to isTrue Is it true isFalse Is it false isNull Is it NULL isNotNull Is it not NULL Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the array service to join values of an array based on criteria. The array service doesn't require any service data setup. Given the following arrays: [ { \"id_number\" : \"1\" , \"job_name\" : \"Scuba Diver\" }, { \"id_number\" : \"\" , \"job_name\" : \"Plumber\" }, { \"id_number\" : \"3\" , \"job_name\" : \"Bus Driver\" }, { \"id_number\" : \"\" , \"job_name\" : \"Cashier\" }, { \"id_number\" : \"\" , \"job_name\" : \"Zoo Keeper\" } ] In this example the following output will be generated automatically by this service after it is run if the criteria is id_number != \"\" with a separator of - : { \"data\" : [ { \"id_number\" : \"1\" , \"job_name\" : \"Scuba Diver - Plumber\" }, { \"id_number\" : \"3\" , \"job_name\" : \"Bus Driver - Cashier - Zoo Keeper\" } ], \"metadata\" : {} }","title":"Join While"},{"location":"reference/services/array-service/#multidimensional-array-combine-values","text":"Multidimensional Array Combine Values will combine values in a multidimensional array based on keys. Option Description Default Required Method Select \"multidimensionalCombineValues\". - TRUE Array The multidimensional array to process. - TRUE Keys A list of keys. - TRUE Tip Each key added is another level that will get you deeper in the array. If the key does not exist the function won't go any deeper. Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the array service to combine values in a multidimensional array. The array service doesn't require any service data setup. Given the following arrays: [ { \"id\" : 1 , \"name\" : \"Leanne Graham\" , \"username\" : \"Bret\" , \"email\" : \"Sincere@april.biz\" , \"companies\" : [ { \"name\" : \"Romaguera-Crona\" , \"catchPhrase\" : \"Multi-layered client-server neural-net\" , \"bs\" : \"harness real-time e-markets\" , }, { \"name\" : \"Deckow-Crist\" , \"catchPhrase\" : \"Proactive didactic contingency\" , \"bs\" : \"synergize scalable supply-chains\" } ] }, { \"id\" : 2 , \"name\" : \"Ervin Howell\" , \"username\" : \"Antonette\" , \"email\" : \"Shanna@melissa.tv\" , \"companies\" : [ { \"name\" : \"Romaguera-Jacobson\" , \"catchPhrase\" : \"Face to face bifurcated interface\" , \"bs\" : \"e-enable strategic applications\" }, { \"name\" : \"Robel-Corkery\" , \"catchPhrase\" : \"Multi-tiered zero tolerance productivity\" , \"bs\" : \"transition cutting-edge web services\" } ] } ] In this example the following output will be generated automatically by this service after it is run if the key is set to companies : { \"data\" : [ { \"name\" : \"Romaguera-Crona\" , \"catchPhrase\" : \"Multi-layered client-server neural-net\" , \"bs\" : \"harness real-time e-markets\" , }, { \"name\" : \"Deckow-Crist\" , \"catchPhrase\" : \"Proactive didactic contingency\" , \"bs\" : \"synergize scalable supply-chains\" }, { \"name\" : \"Romaguera-Jacobson\" , \"catchPhrase\" : \"Face to face bifurcated interface\" , \"bs\" : \"e-enable strategic applications\" }, { \"name\" : \"Robel-Corkery\" , \"catchPhrase\" : \"Multi-tiered zero tolerance productivity\" , \"bs\" : \"transition cutting-edge web services\" } ], \"metadata\" : {} }","title":"Multidimensional Array Combine Values"},{"location":"reference/services/csv-parser/","text":"Before you begin In order to use the features in this section you need to have an active Spojit account. If you don't have an account you can checkout out the pricing and register here . If you already have an account you can login here . This service can write a CSV file from source data (API/Webhook etc) which could be used that to create a file on a FTP or send the file as an email attachment. It can also read the data from a CSV file which would create data output which could be used to send API requests. Creating a CSV \u00b6 When the write configuration is selected the service will write a CSV file from mapped data and configuration options. Option Description Default Required Method Select \"write\" to write a CSV file. - TRUE Headers The CSV headers are not required as a file will generate without them with all the data; however, if they are specified only matching columns will be generated. If added the Header Key and Header Value is required for each. - FALSE Header Key The field in the data that the column corresponds to. - TRUE Header Value The name of the column header in the CSV file. - TRUE Always Quote Always encapsulate column data in quotes in the CSV file? Either TRUE or FALSE. FALSE FALSE Field Delimiter String value of delimiter between column values. , TRUE Record Delimiter String value of delimiter between rows. Either LF (Linux) or CRLF (Windows). LF TRUE Important Mapped service data must be contained with an ARRAY where the fields match the desired header columns. The parser does not generate the file itself rather the raw data that can be used by other services to generate a file (i.e SFTP/Email). Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the CSV Parser to create a two column CSV file from an array of data. The configuration is set up to create two headers for the columns with a comma as a field delimiter and using the LF record delimiter. After the configuration is setup we can then create a schema for the output CSV. Each field within the array can be a column (depending on how headers are setup) and each index of the array consists of a row in the CSV. For this example we are going to switch to the ARRAY schema and add id and job as fields to that ARRAY: Given the following source data from another service: { \"data\" : [ { \"id_number\" : \"1\" , \"job_name\" : \"Scuba Diver\" }, { \"id_number\" : \"2\" , \"job_name\" : \"Plumber\" } ] } Next we can map the data array on the array in the field mapping with the id_number and job_name on id and job respectively as fields within the array: In this example the following output will be generated automatically by this service after it is run: { \"data\" : \"ID,Job\\n1,Scuba Diver\\n2,Plumber\\n\" , \"metadata\" : {} } This output data can be used to create a CSV file like this: Reading a CSV \u00b6 When the read configuration is selected the service will read the raw data from a CSV file to create an array of output data. The array can then be used by other services. Option Description Default Required Method Select \"read\" to read a CSV file. - TRUE Raw Data The raw data of the CSV file that will be parsed. - TRUE Info There is no need to configure the service data that is read. The CSV data will be read with output fields and headers automatically created. Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the CSV Parser to read a two column CSV file and create an array of data from that. Given the following source data from another service: { \"data\" : \"ID,Job\\n1,Scuba Diver\\n2,Plumber\\n\" , \"metadata\" : {} } The location of the raw CSV data needs to be specified in the configuration: The CSV reader doesn't require any service data setup. In this example the following output will be generated automatically by this service after it is run: { \"data\" : [ { \"ID\" : \"1\" , \"Job\" : \"Scuba Diver\" }, { \"ID\" : \"2\" , \"Job\" : \"Plumber\" } ], \"metadata\" : { } }","title":"CSV Parser"},{"location":"reference/services/csv-parser/#creating-a-csv","text":"When the write configuration is selected the service will write a CSV file from mapped data and configuration options. Option Description Default Required Method Select \"write\" to write a CSV file. - TRUE Headers The CSV headers are not required as a file will generate without them with all the data; however, if they are specified only matching columns will be generated. If added the Header Key and Header Value is required for each. - FALSE Header Key The field in the data that the column corresponds to. - TRUE Header Value The name of the column header in the CSV file. - TRUE Always Quote Always encapsulate column data in quotes in the CSV file? Either TRUE or FALSE. FALSE FALSE Field Delimiter String value of delimiter between column values. , TRUE Record Delimiter String value of delimiter between rows. Either LF (Linux) or CRLF (Windows). LF TRUE Important Mapped service data must be contained with an ARRAY where the fields match the desired header columns. The parser does not generate the file itself rather the raw data that can be used by other services to generate a file (i.e SFTP/Email). Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the CSV Parser to create a two column CSV file from an array of data. The configuration is set up to create two headers for the columns with a comma as a field delimiter and using the LF record delimiter. After the configuration is setup we can then create a schema for the output CSV. Each field within the array can be a column (depending on how headers are setup) and each index of the array consists of a row in the CSV. For this example we are going to switch to the ARRAY schema and add id and job as fields to that ARRAY: Given the following source data from another service: { \"data\" : [ { \"id_number\" : \"1\" , \"job_name\" : \"Scuba Diver\" }, { \"id_number\" : \"2\" , \"job_name\" : \"Plumber\" } ] } Next we can map the data array on the array in the field mapping with the id_number and job_name on id and job respectively as fields within the array: In this example the following output will be generated automatically by this service after it is run: { \"data\" : \"ID,Job\\n1,Scuba Diver\\n2,Plumber\\n\" , \"metadata\" : {} } This output data can be used to create a CSV file like this:","title":"Creating a CSV"},{"location":"reference/services/csv-parser/#reading-a-csv","text":"When the read configuration is selected the service will read the raw data from a CSV file to create an array of output data. The array can then be used by other services. Option Description Default Required Method Select \"read\" to read a CSV file. - TRUE Raw Data The raw data of the CSV file that will be parsed. - TRUE Info There is no need to configure the service data that is read. The CSV data will be read with output fields and headers automatically created. Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the CSV Parser to read a two column CSV file and create an array of data from that. Given the following source data from another service: { \"data\" : \"ID,Job\\n1,Scuba Diver\\n2,Plumber\\n\" , \"metadata\" : {} } The location of the raw CSV data needs to be specified in the configuration: The CSV reader doesn't require any service data setup. In this example the following output will be generated automatically by this service after it is run: { \"data\" : [ { \"ID\" : \"1\" , \"Job\" : \"Scuba Diver\" }, { \"ID\" : \"2\" , \"Job\" : \"Plumber\" } ], \"metadata\" : { } }","title":"Reading a CSV"},{"location":"reference/services/dataset/","text":"Before you begin In order to use the features in this section you need to have an active Spojit account with a Business plan. If you don't have an account you can checkout out the pricing and register here . If you already have an account you can login here . The Dataset service allows you to read, write and delete columns/rows to a collection of data (database table). The following example configuration shows you how to add a dataset and how to configure the Dataset service to insert, update, delete and find data within the dataset. Creating a dataset \u00b6 Before starting to use the dataset service a dataset needs to be created in the Spojit platform. Select \"Datasets\" on the left side bar and click \"+ Dataset\" to add a new dataset. Add a name for the dataset and define the columns: Column Type \u00b6 The column type is the type of data that is stored in the column. Option Description Example STRING A text value \"car\" NUMERIC A numerical value 123456 BOOL A boolean value TRUE or FALSE ARRAY A list of values or objects [\"bike\", \"boat\", \"car\"] Data Type \u00b6 The data type is the type of data used for statistical and training purposes. Option Description Example TEXT Free forms words or sentences. \"The sun is hot in the summer!\" Important Inactive columns will be cleaned a regular intervals. Once the columns are defined make sure that they are active in order to be used. After a dataset is saved you will be able to use it in any workflow. Dataset Row Object \u00b6 When dealing with a row in the dataset an object with be used with the fields matching the columns specified in the dataset configuration. Reserved columns (fields) \u00b6 The following reserved names can not be used to name a column or be a field in the dataset row object as they are automatically generated for an object: Name Description _id Internal ID generated for this row. _createdAt The interal creation datetime for this row (UTC). _updatedAt The interal updated datetime for this row (UTC). Info Although you can not create/update or delete any reserved fields they can be used for querying the dataset. Example dataset row object \u00b6 If you have the columns id and name from the creating a dataset example above the object would consist of the following (with the reserved fields added): { \"id\" : 1 , \"name\" : \"delectus aut autem\" , \"_id\" : \"60792518693cf2625e7530b2\" , \"_createdAt\" : \"2021-04-16T05:48:08+00:00\" , \"_updatedAt\" : \"2021-04-16T05:48:08+00:00\" } Dataset Querying Criteria \u00b6 You can query a dataset with critier to find a record to update or to search for records within the dataset. The following operators can be used: Operator Description eq Equal to neq Not equal to lt Less than lte Less than equal to gt Greater than gte Greater than equal to These operators can be chained to produce more specific results. Primary Keys \u00b6 The internal primary key (id) will always be generated automatically but if you want to pair it with an external primary key (or other unique identifier) the \"Upsert\" method can be used with criteria to identify it. For example if the \"Upsert\" method is setup in the following way: The record will be created if the value for external_id doesn't exist in the id column or updated if it does. Two or more columns can also be used to have a composite primary key. Service Methods \u00b6 The dataset service has various methods add to and perform actions on data in a dataset. Insert a row \u00b6 Inserting a row will add a new record into the dataset. Option Description Default Required Method Select \"insert\" to insert a row into the dataset. - TRUE Dataset Select the name of the dataset you wish to use. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Dataset Service to insert a record. The schema can be whatever you wish to insert into the dataset with the fields matching the columns specified in the Dataset Configuration. For this example we are going to create an OBJECT schema with the specified fields: Given the following source data from another service: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false } } We can map the applicable fields with the schema object: In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"id\" : 1 , \"name\" : \"delectus aut autem\" , \"_id\" : \"60792518693cf2625e7530b2\" , \"_createdAt\" : \"2021-04-16T05:48:08+00:00\" , \"_updatedAt\" : \"2021-04-16T05:48:08+00:00\" }, \"metadata\" : [] } Update a row \u00b6 Updating a row will update a record in the dataset. Option Description Default Required Method Select \"update\" to update a row in the dataset. - TRUE Dataset Select the name of the dataset you wish to use. - TRUE Criteria Criteria used to find existing records to update. - FALSE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Dataset Service to update a record given an id of 1. The schema can be whatever you wish to update into the dataset with the fields matching the columns specified in the Dataset Configuration. For this example we are going to create an OBJECT schema with the specified fields: Given the following source data from another service: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"hello world\" , \"completed\" : false } } We can map the applicable fields with the schema object: In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"id\" : 1 , \"name\" : \"hello world\" , \"_id\" : \"60792518693cf2625e7530b2\" , \"_createdAt\" : \"2021-04-16T05:48:08+00:00\" , \"_updatedAt\" : \"2021-04-16T05:58:08+00:00\" }, \"metadata\" : [] } Upsert a row \u00b6 Upserting a row will either create a record in the dataset if it doesn't exist or update a record if it already exists. Option Description Default Required Method Select \"upsert\" to upsert a row in the dataset. - TRUE Dataset Select the name of the dataset you wish to use. - TRUE Criteria Criteria used to find existing records to update. - FALSE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Dataset Service to upsert a record given an id from an external entity (see above about primary keys ). The schema can be whatever you wish to upsert into the dataset with the fields matching the columns specified in the Dataset Configuration. For this example we are going to create an OBJECT schema with the specified fields: Given the following source data from another service: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"hello world\" , \"completed\" : false } } We can map the applicable fields with the schema object: In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"id\" : 1 , \"name\" : \"hello world\" , \"_id\" : \"60792518693cf2625e7530b2\" , \"_createdAt\" : \"2021-04-16T05:48:08+00:00\" , \"_updatedAt\" : \"2021-04-16T05:58:08+00:00\" }, \"metadata\" : [] } Delete a row \u00b6 Deleting a row will remove a record from the dataset if it exists. Option Description Default Required Method Select \"delete\" to delete a row in the dataset. - TRUE Dataset Select the name of the dataset you wish to use. - TRUE Criteria Criteria used to find existing records to delete. - FALSE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Dataset Service to update a record given an id of 1. The DELETE method doesn't require any service data setup. There will be no output data generated by the DELETE method. An error will be thrown if it can't be deleted. Find one row \u00b6 Find one row will search for and find one record from the dataset if it exists. It will find and return the first matching record. If there are multiple matching rows then \"find\" should be used. Option Description Default Required Method Select \"findOne\" to find a row in the dataset. - TRUE Dataset Select the name of the dataset you wish to use. - TRUE Criteria Criteria used to find existing records. - FALSE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Dataset Service to find a record given an id of 1. The FINDONE method doesn't require any service data setup. In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"id\" : 1 , \"name\" : \"hello world\" , \"_id\" : \"60792518693cf2625e7530b2\" , \"_createdAt\" : \"2021-04-16T05:48:08+00:00\" , \"_updatedAt\" : \"2021-04-16T05:58:08+00:00\" }, \"metadata\" : [] } Find rows \u00b6 Find rows will search for and find records from the dataset if they exists. It will find and return all matching records in an array. If you only want one result \"findOne\" should be used. Option Description Default Required Method Select \"find\" to find rows the dataset. - TRUE Dataset Select the name of the dataset you wish to use. - TRUE Criteria Criteria used to find existing records. - FALSE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Dataset Service to find records given an colour of \"blue\". The FIND method doesn't require any service data setup. In this example the following output will be generated automatically by this service after it is run (note that an array of objects is returned): { \"data\" : [ { \"id\" : 1 , \"name\" : \"pants\" , \"colour\" : \"blue\" , \"_id\" : \"60792518693cf2625e7530b2\" , \"_createdAt\" : \"2021-04-16T05: 48: 08+00: 00\" , \"_updatedAt\" : \"2021-04-16T05: 58: 08+00: 00\" }, { \"id\" : 2 , \"name\" : \"tshirt\" , \"colour\" : \"blue\" , \"_id\" : \"60792518693cf2625e7530b2\" , \"_createdAt\" : \"2021-04-16T05: 48: 08+00: 00\" , \"_updatedAt\" : \"2021-04-16T05: 58: 08+00: 00\" } ], \"metadata\" : [ ] }","title":"Dataset Service"},{"location":"reference/services/dataset/#creating-a-dataset","text":"Before starting to use the dataset service a dataset needs to be created in the Spojit platform. Select \"Datasets\" on the left side bar and click \"+ Dataset\" to add a new dataset. Add a name for the dataset and define the columns:","title":"Creating a dataset"},{"location":"reference/services/dataset/#column-type","text":"The column type is the type of data that is stored in the column. Option Description Example STRING A text value \"car\" NUMERIC A numerical value 123456 BOOL A boolean value TRUE or FALSE ARRAY A list of values or objects [\"bike\", \"boat\", \"car\"]","title":"Column Type"},{"location":"reference/services/dataset/#data-type","text":"The data type is the type of data used for statistical and training purposes. Option Description Example TEXT Free forms words or sentences. \"The sun is hot in the summer!\" Important Inactive columns will be cleaned a regular intervals. Once the columns are defined make sure that they are active in order to be used. After a dataset is saved you will be able to use it in any workflow.","title":"Data Type"},{"location":"reference/services/dataset/#dataset-row-object","text":"When dealing with a row in the dataset an object with be used with the fields matching the columns specified in the dataset configuration.","title":"Dataset Row Object"},{"location":"reference/services/dataset/#reserved-columns-fields","text":"The following reserved names can not be used to name a column or be a field in the dataset row object as they are automatically generated for an object: Name Description _id Internal ID generated for this row. _createdAt The interal creation datetime for this row (UTC). _updatedAt The interal updated datetime for this row (UTC). Info Although you can not create/update or delete any reserved fields they can be used for querying the dataset.","title":"Reserved columns (fields)"},{"location":"reference/services/dataset/#example-dataset-row-object","text":"If you have the columns id and name from the creating a dataset example above the object would consist of the following (with the reserved fields added): { \"id\" : 1 , \"name\" : \"delectus aut autem\" , \"_id\" : \"60792518693cf2625e7530b2\" , \"_createdAt\" : \"2021-04-16T05:48:08+00:00\" , \"_updatedAt\" : \"2021-04-16T05:48:08+00:00\" }","title":"Example dataset row object"},{"location":"reference/services/dataset/#dataset-querying-criteria","text":"You can query a dataset with critier to find a record to update or to search for records within the dataset. The following operators can be used: Operator Description eq Equal to neq Not equal to lt Less than lte Less than equal to gt Greater than gte Greater than equal to These operators can be chained to produce more specific results.","title":"Dataset Querying Criteria"},{"location":"reference/services/dataset/#primary-keys","text":"The internal primary key (id) will always be generated automatically but if you want to pair it with an external primary key (or other unique identifier) the \"Upsert\" method can be used with criteria to identify it. For example if the \"Upsert\" method is setup in the following way: The record will be created if the value for external_id doesn't exist in the id column or updated if it does. Two or more columns can also be used to have a composite primary key.","title":"Primary Keys"},{"location":"reference/services/dataset/#service-methods","text":"The dataset service has various methods add to and perform actions on data in a dataset.","title":"Service Methods"},{"location":"reference/services/dataset/#insert-a-row","text":"Inserting a row will add a new record into the dataset. Option Description Default Required Method Select \"insert\" to insert a row into the dataset. - TRUE Dataset Select the name of the dataset you wish to use. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Dataset Service to insert a record. The schema can be whatever you wish to insert into the dataset with the fields matching the columns specified in the Dataset Configuration. For this example we are going to create an OBJECT schema with the specified fields: Given the following source data from another service: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false } } We can map the applicable fields with the schema object: In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"id\" : 1 , \"name\" : \"delectus aut autem\" , \"_id\" : \"60792518693cf2625e7530b2\" , \"_createdAt\" : \"2021-04-16T05:48:08+00:00\" , \"_updatedAt\" : \"2021-04-16T05:48:08+00:00\" }, \"metadata\" : [] }","title":"Insert a row"},{"location":"reference/services/dataset/#update-a-row","text":"Updating a row will update a record in the dataset. Option Description Default Required Method Select \"update\" to update a row in the dataset. - TRUE Dataset Select the name of the dataset you wish to use. - TRUE Criteria Criteria used to find existing records to update. - FALSE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Dataset Service to update a record given an id of 1. The schema can be whatever you wish to update into the dataset with the fields matching the columns specified in the Dataset Configuration. For this example we are going to create an OBJECT schema with the specified fields: Given the following source data from another service: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"hello world\" , \"completed\" : false } } We can map the applicable fields with the schema object: In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"id\" : 1 , \"name\" : \"hello world\" , \"_id\" : \"60792518693cf2625e7530b2\" , \"_createdAt\" : \"2021-04-16T05:48:08+00:00\" , \"_updatedAt\" : \"2021-04-16T05:58:08+00:00\" }, \"metadata\" : [] }","title":"Update a row"},{"location":"reference/services/dataset/#upsert-a-row","text":"Upserting a row will either create a record in the dataset if it doesn't exist or update a record if it already exists. Option Description Default Required Method Select \"upsert\" to upsert a row in the dataset. - TRUE Dataset Select the name of the dataset you wish to use. - TRUE Criteria Criteria used to find existing records to update. - FALSE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Dataset Service to upsert a record given an id from an external entity (see above about primary keys ). The schema can be whatever you wish to upsert into the dataset with the fields matching the columns specified in the Dataset Configuration. For this example we are going to create an OBJECT schema with the specified fields: Given the following source data from another service: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"hello world\" , \"completed\" : false } } We can map the applicable fields with the schema object: In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"id\" : 1 , \"name\" : \"hello world\" , \"_id\" : \"60792518693cf2625e7530b2\" , \"_createdAt\" : \"2021-04-16T05:48:08+00:00\" , \"_updatedAt\" : \"2021-04-16T05:58:08+00:00\" }, \"metadata\" : [] }","title":"Upsert a row"},{"location":"reference/services/dataset/#delete-a-row","text":"Deleting a row will remove a record from the dataset if it exists. Option Description Default Required Method Select \"delete\" to delete a row in the dataset. - TRUE Dataset Select the name of the dataset you wish to use. - TRUE Criteria Criteria used to find existing records to delete. - FALSE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Dataset Service to update a record given an id of 1. The DELETE method doesn't require any service data setup. There will be no output data generated by the DELETE method. An error will be thrown if it can't be deleted.","title":"Delete a row"},{"location":"reference/services/dataset/#find-one-row","text":"Find one row will search for and find one record from the dataset if it exists. It will find and return the first matching record. If there are multiple matching rows then \"find\" should be used. Option Description Default Required Method Select \"findOne\" to find a row in the dataset. - TRUE Dataset Select the name of the dataset you wish to use. - TRUE Criteria Criteria used to find existing records. - FALSE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Dataset Service to find a record given an id of 1. The FINDONE method doesn't require any service data setup. In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"id\" : 1 , \"name\" : \"hello world\" , \"_id\" : \"60792518693cf2625e7530b2\" , \"_createdAt\" : \"2021-04-16T05:48:08+00:00\" , \"_updatedAt\" : \"2021-04-16T05:58:08+00:00\" }, \"metadata\" : [] }","title":"Find one row"},{"location":"reference/services/dataset/#find-rows","text":"Find rows will search for and find records from the dataset if they exists. It will find and return all matching records in an array. If you only want one result \"findOne\" should be used. Option Description Default Required Method Select \"find\" to find rows the dataset. - TRUE Dataset Select the name of the dataset you wish to use. - TRUE Criteria Criteria used to find existing records. - FALSE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Dataset Service to find records given an colour of \"blue\". The FIND method doesn't require any service data setup. In this example the following output will be generated automatically by this service after it is run (note that an array of objects is returned): { \"data\" : [ { \"id\" : 1 , \"name\" : \"pants\" , \"colour\" : \"blue\" , \"_id\" : \"60792518693cf2625e7530b2\" , \"_createdAt\" : \"2021-04-16T05: 48: 08+00: 00\" , \"_updatedAt\" : \"2021-04-16T05: 58: 08+00: 00\" }, { \"id\" : 2 , \"name\" : \"tshirt\" , \"colour\" : \"blue\" , \"_id\" : \"60792518693cf2625e7530b2\" , \"_createdAt\" : \"2021-04-16T05: 48: 08+00: 00\" , \"_updatedAt\" : \"2021-04-16T05: 58: 08+00: 00\" } ], \"metadata\" : [ ] }","title":"Find rows"},{"location":"reference/services/dear-systems-service/","text":"Before you begin In order to use the features in this section you need to have an active Spojit account. If you don't have an account you can checkout out the pricing and register here . If you already have an account you can login here . DEAR Systems is a cloud-based ERP solution for small to midsized retailers, wholesalers, manufacturers, and e-commerce operators. Tip Full documentation of DEAR Systems resources and configuration is available at DEAR Systems API Documentation . DEAR Systems Authorization \u00b6 The following authorization configuration needs to filled out in order to connect with DEAR Systems: Option Description Default Required Account ID Your DEAR Systems account ID. - TRUE Application Key An application key for your DEAR Systems account. - TRUE The following example configuration shows you how to configure the authorziation for DEAR Systems: The details can be created & viewed in your DEAR Systems account under Integrations / API: Important This service uses Version 2 (v2) of the DEAR Systems API by default and will append this to the path automatically. Please add the paths accordingly without the reference to /externalapi/v2/ : Correct Incorrect /saleList /externalapi/v2/saleList Important This service has a built in JSON parser and will automatically convert to the proper format. Requests will automatically contain required headers and authorization configuration so they do not need to be added. The following (below) is a general guide on how to use the methods for this service. The examples use the JSONPlaceholder fake online REST API. Please refer to the system documentation above for full path and schema information. GET \u00b6 When the GET configuration is selected the service will retrieve a resource from a given URL. Option Description Default Required Method Select \"get\" to retrieve a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to get data from a resource. It also contains an example header for an OAuth authorization bearer token. The GET method doesn't require any service data setup. In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 200 } } POST \u00b6 When the POST configuration is selected the service will create a resource at a given location. Option Description Default Required Method Select \"post\" to create a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to create a resource. The schema can be whatever the resource excepts and for this example we are going to create an OBJECT schema with the specified fields: Given the following source data from another service: { \"data\" : { \"user_id\" : 1 , \"my_id\" : 1 , \"the_title\" : \"delectus aut autem\" , \"finished\" : false } } We can map the applicable fields with the schema object: In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 201 } } PUT \u00b6 When the PUT configuration is selected the service will update a resource at a given location. Option Description Default Required Method Select \"put\" to update a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to update a resource. The schema can be whatever the resource excepts and for this example we are going to create an OBJECT schema with the specified fields: Given the following source data from another service: { \"data\" : { \"user_id\" : 1 , \"my_id\" : 1 , \"the_title\" : \"delectus aut autem\" , \"finished\" : false } } We can map the applicable fields with the schema object: In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 200 } } DELETE \u00b6 When the DELETE configuration is selected the service will delete a resource from a given URL. Option Description Default Required Method Select \"delete\" to delete a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to delete a resource: The DELETE method doesn't require any service data setup. Many services will not return any data after a resource is deleted but if data is returned it could possiblly look like this: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 204 } }","title":"DEAR Systems"},{"location":"reference/services/dear-systems-service/#dear-systems-authorization","text":"The following authorization configuration needs to filled out in order to connect with DEAR Systems: Option Description Default Required Account ID Your DEAR Systems account ID. - TRUE Application Key An application key for your DEAR Systems account. - TRUE The following example configuration shows you how to configure the authorziation for DEAR Systems: The details can be created & viewed in your DEAR Systems account under Integrations / API: Important This service uses Version 2 (v2) of the DEAR Systems API by default and will append this to the path automatically. Please add the paths accordingly without the reference to /externalapi/v2/ : Correct Incorrect /saleList /externalapi/v2/saleList Important This service has a built in JSON parser and will automatically convert to the proper format. Requests will automatically contain required headers and authorization configuration so they do not need to be added. The following (below) is a general guide on how to use the methods for this service. The examples use the JSONPlaceholder fake online REST API. Please refer to the system documentation above for full path and schema information.","title":"DEAR Systems Authorization"},{"location":"reference/services/dear-systems-service/#get","text":"When the GET configuration is selected the service will retrieve a resource from a given URL. Option Description Default Required Method Select \"get\" to retrieve a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to get data from a resource. It also contains an example header for an OAuth authorization bearer token. The GET method doesn't require any service data setup. In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 200 } }","title":"GET"},{"location":"reference/services/dear-systems-service/#post","text":"When the POST configuration is selected the service will create a resource at a given location. Option Description Default Required Method Select \"post\" to create a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to create a resource. The schema can be whatever the resource excepts and for this example we are going to create an OBJECT schema with the specified fields: Given the following source data from another service: { \"data\" : { \"user_id\" : 1 , \"my_id\" : 1 , \"the_title\" : \"delectus aut autem\" , \"finished\" : false } } We can map the applicable fields with the schema object: In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 201 } }","title":"POST"},{"location":"reference/services/dear-systems-service/#put","text":"When the PUT configuration is selected the service will update a resource at a given location. Option Description Default Required Method Select \"put\" to update a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to update a resource. The schema can be whatever the resource excepts and for this example we are going to create an OBJECT schema with the specified fields: Given the following source data from another service: { \"data\" : { \"user_id\" : 1 , \"my_id\" : 1 , \"the_title\" : \"delectus aut autem\" , \"finished\" : false } } We can map the applicable fields with the schema object: In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 200 } }","title":"PUT"},{"location":"reference/services/dear-systems-service/#delete","text":"When the DELETE configuration is selected the service will delete a resource from a given URL. Option Description Default Required Method Select \"delete\" to delete a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to delete a resource: The DELETE method doesn't require any service data setup. Many services will not return any data after a resource is deleted but if data is returned it could possiblly look like this: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 204 } }","title":"DELETE"},{"location":"reference/services/default-connector/","text":"Important This service has a built in JSON parser and will automatically convert to the proper format. Requests will automatically contain required headers and authorization configuration so they do not need to be added. The following (below) is a general guide on how to use the methods for this service. The examples use the JSONPlaceholder fake online REST API. Please refer to the system documentation above for full path and schema information. GET \u00b6 When the GET configuration is selected the service will retrieve a resource from a given URL. Option Description Default Required Method Select \"get\" to retrieve a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to get data from a resource. It also contains an example header for an OAuth authorization bearer token. The GET method doesn't require any service data setup. In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 200 } } POST \u00b6 When the POST configuration is selected the service will create a resource at a given location. Option Description Default Required Method Select \"post\" to create a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to create a resource. The schema can be whatever the resource excepts and for this example we are going to create an OBJECT schema with the specified fields: Given the following source data from another service: { \"data\" : { \"user_id\" : 1 , \"my_id\" : 1 , \"the_title\" : \"delectus aut autem\" , \"finished\" : false } } We can map the applicable fields with the schema object: In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 201 } } PUT \u00b6 When the PUT configuration is selected the service will update a resource at a given location. Option Description Default Required Method Select \"put\" to update a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to update a resource. The schema can be whatever the resource excepts and for this example we are going to create an OBJECT schema with the specified fields: Given the following source data from another service: { \"data\" : { \"user_id\" : 1 , \"my_id\" : 1 , \"the_title\" : \"delectus aut autem\" , \"finished\" : false } } We can map the applicable fields with the schema object: In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 200 } } DELETE \u00b6 When the DELETE configuration is selected the service will delete a resource from a given URL. Option Description Default Required Method Select \"delete\" to delete a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to delete a resource: The DELETE method doesn't require any service data setup. Many services will not return any data after a resource is deleted but if data is returned it could possiblly look like this: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 204 } }","title":"Default connector"},{"location":"reference/services/default-connector/#get","text":"When the GET configuration is selected the service will retrieve a resource from a given URL. Option Description Default Required Method Select \"get\" to retrieve a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to get data from a resource. It also contains an example header for an OAuth authorization bearer token. The GET method doesn't require any service data setup. In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 200 } }","title":"GET"},{"location":"reference/services/default-connector/#post","text":"When the POST configuration is selected the service will create a resource at a given location. Option Description Default Required Method Select \"post\" to create a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to create a resource. The schema can be whatever the resource excepts and for this example we are going to create an OBJECT schema with the specified fields: Given the following source data from another service: { \"data\" : { \"user_id\" : 1 , \"my_id\" : 1 , \"the_title\" : \"delectus aut autem\" , \"finished\" : false } } We can map the applicable fields with the schema object: In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 201 } }","title":"POST"},{"location":"reference/services/default-connector/#put","text":"When the PUT configuration is selected the service will update a resource at a given location. Option Description Default Required Method Select \"put\" to update a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to update a resource. The schema can be whatever the resource excepts and for this example we are going to create an OBJECT schema with the specified fields: Given the following source data from another service: { \"data\" : { \"user_id\" : 1 , \"my_id\" : 1 , \"the_title\" : \"delectus aut autem\" , \"finished\" : false } } We can map the applicable fields with the schema object: In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 200 } }","title":"PUT"},{"location":"reference/services/default-connector/#delete","text":"When the DELETE configuration is selected the service will delete a resource from a given URL. Option Description Default Required Method Select \"delete\" to delete a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to delete a resource: The DELETE method doesn't require any service data setup. Many services will not return any data after a resource is deleted but if data is returned it could possiblly look like this: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 204 } }","title":"DELETE"},{"location":"reference/services/delay-service/","text":"Before you begin In order to use the features in this section you need to have an active Spojit account. If you don't have an account you can checkout out the pricing and register here . If you already have an account you can login here . This service can be used to delay the execution of a workflow. Option Description Default Required Delay The amount you want to delay in seconds (max 60). 5 TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the delay service to delay the workflow by 5 seconds. The delay service doesn't require any service data setup. The delay service doesn't have any output data.","title":"Delay Service"},{"location":"reference/services/deputy-service/","text":"Before you begin In order to use the features in this section you need to have an active Spojit account. If you don't have an account you can checkout out the pricing and register here . If you already have an account you can login here . Deputy is a cloud-based workforce management and scheduling platform designed to help companies organize, track, and manage their teams. This service can facilitate the bilateral transfer of resources within the Deputy RESTful web service. Tip Full documentation of Deputy resources and configuration is available at Deputy API Documentation . Deputy Authorization \u00b6 The following authorization configuration needs to filled out in order to connect with Deputy: Option Description Default Required Subdomain and Region The subdomain and server region of your Deputy instance (i.e. https://****.**.deputy.com). - TRUE OAuth Token The permanent OAuth Access Token. - TRUE The following example configuration shows you how to configure the authorziation for Deputy: Important This service uses Version 1 (v1) of the Deputy API by default and will append this to the path automatically. Please add the paths accordingly without the reference to /api/v1 : Correct Incorrect /resource/Employee /api/v1/resource/Employee Important This service has a built in JSON parser and will automatically convert to the proper format. Requests will automatically contain required headers and authorization configuration so they do not need to be added. The following (below) is a general guide on how to use the methods for this service. The examples use the JSONPlaceholder fake online REST API. Please refer to the system documentation above for full path and schema information. GET \u00b6 When the GET configuration is selected the service will retrieve a resource from a given URL. Option Description Default Required Method Select \"get\" to retrieve a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to get data from a resource. It also contains an example header for an OAuth authorization bearer token. The GET method doesn't require any service data setup. In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 200 } } POST \u00b6 When the POST configuration is selected the service will create a resource at a given location. Option Description Default Required Method Select \"post\" to create a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to create a resource. The schema can be whatever the resource excepts and for this example we are going to create an OBJECT schema with the specified fields: Given the following source data from another service: { \"data\" : { \"user_id\" : 1 , \"my_id\" : 1 , \"the_title\" : \"delectus aut autem\" , \"finished\" : false } } We can map the applicable fields with the schema object: In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 201 } } PUT \u00b6 When the PUT configuration is selected the service will update a resource at a given location. Option Description Default Required Method Select \"put\" to update a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to update a resource. The schema can be whatever the resource excepts and for this example we are going to create an OBJECT schema with the specified fields: Given the following source data from another service: { \"data\" : { \"user_id\" : 1 , \"my_id\" : 1 , \"the_title\" : \"delectus aut autem\" , \"finished\" : false } } We can map the applicable fields with the schema object: In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 200 } } DELETE \u00b6 When the DELETE configuration is selected the service will delete a resource from a given URL. Option Description Default Required Method Select \"delete\" to delete a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to delete a resource: The DELETE method doesn't require any service data setup. Many services will not return any data after a resource is deleted but if data is returned it could possiblly look like this: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 204 } }","title":"Deputy"},{"location":"reference/services/deputy-service/#deputy-authorization","text":"The following authorization configuration needs to filled out in order to connect with Deputy: Option Description Default Required Subdomain and Region The subdomain and server region of your Deputy instance (i.e. https://****.**.deputy.com). - TRUE OAuth Token The permanent OAuth Access Token. - TRUE The following example configuration shows you how to configure the authorziation for Deputy: Important This service uses Version 1 (v1) of the Deputy API by default and will append this to the path automatically. Please add the paths accordingly without the reference to /api/v1 : Correct Incorrect /resource/Employee /api/v1/resource/Employee Important This service has a built in JSON parser and will automatically convert to the proper format. Requests will automatically contain required headers and authorization configuration so they do not need to be added. The following (below) is a general guide on how to use the methods for this service. The examples use the JSONPlaceholder fake online REST API. Please refer to the system documentation above for full path and schema information.","title":"Deputy Authorization"},{"location":"reference/services/deputy-service/#get","text":"When the GET configuration is selected the service will retrieve a resource from a given URL. Option Description Default Required Method Select \"get\" to retrieve a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to get data from a resource. It also contains an example header for an OAuth authorization bearer token. The GET method doesn't require any service data setup. In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 200 } }","title":"GET"},{"location":"reference/services/deputy-service/#post","text":"When the POST configuration is selected the service will create a resource at a given location. Option Description Default Required Method Select \"post\" to create a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to create a resource. The schema can be whatever the resource excepts and for this example we are going to create an OBJECT schema with the specified fields: Given the following source data from another service: { \"data\" : { \"user_id\" : 1 , \"my_id\" : 1 , \"the_title\" : \"delectus aut autem\" , \"finished\" : false } } We can map the applicable fields with the schema object: In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 201 } }","title":"POST"},{"location":"reference/services/deputy-service/#put","text":"When the PUT configuration is selected the service will update a resource at a given location. Option Description Default Required Method Select \"put\" to update a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to update a resource. The schema can be whatever the resource excepts and for this example we are going to create an OBJECT schema with the specified fields: Given the following source data from another service: { \"data\" : { \"user_id\" : 1 , \"my_id\" : 1 , \"the_title\" : \"delectus aut autem\" , \"finished\" : false } } We can map the applicable fields with the schema object: In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 200 } }","title":"PUT"},{"location":"reference/services/deputy-service/#delete","text":"When the DELETE configuration is selected the service will delete a resource from a given URL. Option Description Default Required Method Select \"delete\" to delete a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to delete a resource: The DELETE method doesn't require any service data setup. Many services will not return any data after a resource is deleted but if data is returned it could possiblly look like this: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 204 } }","title":"DELETE"},{"location":"reference/services/document-ocr/","text":"Before you begin In order to use the features in this section you need to have an active Spojit account with an Enterprise plan. If you don't have an account you can checkout out the pricing and register here . If you already have an account you can login here . The Document OCR (Optical Character Recognition) service allows you to read text and tables in documents (such as PDFs) which could be used to make an API request or create an Excel or CSV file. Important The Document OCR service will sometimes pick up outliers and other noise/graphics as text or have difficulty reading some text depending on the font. Changing the sections or page segmentation mode and implementing functions can help to eliminate this issue. Always test with multiple documents prior to implementing in a production environment to ensure that the proper functions have been used to get the required result. Page Segmentation Mode \u00b6 The page segmentation mode (PSM) will enhance the accuracy of the text by choosing a the mode for the type of text that the OCR will expect in your section. You will be able to select the mode on each simple or table section. Mode Description 0 Orientation and script detection (OSD) only. 1 Automatic page segmentation with OSD. 2 Automatic page segmentation, but no OSD, or OCR. 3 Fully automatic page segmentation, but no OSD. 4 Assume a single column of text of variable sizes. 5 Assume a single uniform block of vertically aligned text. 6 Assume a single uniform block of text. 7 Treat the image as a single text line. 8 Treat the image as a single word. 9 Treat the image as a single word in a circle. 10 Treat the image as a single character. 11 Sparse text. Find as much text as possible in no particular order. 12 Sparse text with OSD. 13 Raw line. The following example configuration shows you how to configure the Document OCR service to read a field and a table in a PDF and create an output that could be used for other services. Input Data Configuration \u00b6 The input data configuration used to select the source of the document to read and the file type. Currently only PDF is supported but more options will be available soon. Option Description Default Required File type Select \"PDF\" to read a PDF file. pdf TRUE Raw Data The raw data of the PDF file that will be read in the service. - TRUE OCR Configuration \u00b6 The OCR configuration is used to upload a test document file and create selections to be read into an output. Upload Document \u00b6 Select your document file and upload it: Define Tables \u00b6 If your document contains tables, define them and the column names that are associated with them in this step. Start by adding a table: And then any columns that you wish to be in that table: This step should look like the following after the table is added: Configure OCR \u00b6 Finally we are going to configure tables and fields on the OCR document itself. Select \"Configure OCR\" to get started: First you will see the preview of the uploaded document: Adding a simple section \u00b6 Hold the ALT key and select a section: Select \"Simple Section\" as the type, add a name for it, and then click create: Adding a tabular section \u00b6 Hold the ALT key and select a section for a column (like in the Simple section). Select \"Tabular data\" as the type, choose the corresponding column and finally click on \"create\": Finally click \"Done\" to finish configuring the OCR Output Data \u00b6 The following data will be output from the OCR from the above example. Please note that the empty lines within the table are also in the output. Use available functions to remove empty lines or pick specific fields. { \"Table 1\" : [ { \"Column 1\" : \"1\" }, { \"Column 1\" : \"\" }, { \"Column 1\" : \"\" }, { \"Column 1\" : \"\" }, { \"Column 1\" : \"2\" }, { \"Column 1\" : \"\" }, { \"Column 1\" : \"\" }, { \"Column 1\" : \"\" }, { \"Column 1\" : \"\" }, { \"Column 1\" : \"3\" }, { \"Column 1\" : \"\" }, { \"Column 1\" : \"\" }, { \"Column 1\" : \"\" }, { \"Column 1\" : \"4\" }, { \"Column 1\" : \"\" }, { \"Column 1\" : \"\" }, { \"Column 1\" : \"\" }, { \"Column 1\" : \"\" }, { \"Column 1\" : \"5\" }, { \"Column 1\" : \"\" }, { \"Column 1\" : \"\" }, { \"Column 1\" : \"\" }, { \"Column 1\" : \"6\" }, { \"Column 1\" : \"\" } ], \"My test section\" : [ \"QualityHosting AG - Uferweg 40-42 - D-63571 Gelnhausen\" , \"\" ] }","title":"Document OCR"},{"location":"reference/services/document-ocr/#page-segmentation-mode","text":"The page segmentation mode (PSM) will enhance the accuracy of the text by choosing a the mode for the type of text that the OCR will expect in your section. You will be able to select the mode on each simple or table section. Mode Description 0 Orientation and script detection (OSD) only. 1 Automatic page segmentation with OSD. 2 Automatic page segmentation, but no OSD, or OCR. 3 Fully automatic page segmentation, but no OSD. 4 Assume a single column of text of variable sizes. 5 Assume a single uniform block of vertically aligned text. 6 Assume a single uniform block of text. 7 Treat the image as a single text line. 8 Treat the image as a single word. 9 Treat the image as a single word in a circle. 10 Treat the image as a single character. 11 Sparse text. Find as much text as possible in no particular order. 12 Sparse text with OSD. 13 Raw line. The following example configuration shows you how to configure the Document OCR service to read a field and a table in a PDF and create an output that could be used for other services.","title":"Page Segmentation Mode"},{"location":"reference/services/document-ocr/#input-data-configuration","text":"The input data configuration used to select the source of the document to read and the file type. Currently only PDF is supported but more options will be available soon. Option Description Default Required File type Select \"PDF\" to read a PDF file. pdf TRUE Raw Data The raw data of the PDF file that will be read in the service. - TRUE","title":"Input Data Configuration"},{"location":"reference/services/document-ocr/#ocr-configuration","text":"The OCR configuration is used to upload a test document file and create selections to be read into an output.","title":"OCR Configuration"},{"location":"reference/services/document-ocr/#upload-document","text":"Select your document file and upload it:","title":"Upload Document"},{"location":"reference/services/document-ocr/#define-tables","text":"If your document contains tables, define them and the column names that are associated with them in this step. Start by adding a table: And then any columns that you wish to be in that table: This step should look like the following after the table is added:","title":"Define Tables"},{"location":"reference/services/document-ocr/#configure-ocr","text":"Finally we are going to configure tables and fields on the OCR document itself. Select \"Configure OCR\" to get started: First you will see the preview of the uploaded document:","title":"Configure OCR"},{"location":"reference/services/document-ocr/#adding-a-simple-section","text":"Hold the ALT key and select a section: Select \"Simple Section\" as the type, add a name for it, and then click create:","title":"Adding a simple section"},{"location":"reference/services/document-ocr/#adding-a-tabular-section","text":"Hold the ALT key and select a section for a column (like in the Simple section). Select \"Tabular data\" as the type, choose the corresponding column and finally click on \"create\": Finally click \"Done\" to finish configuring the OCR","title":"Adding a tabular section"},{"location":"reference/services/document-ocr/#output-data","text":"The following data will be output from the OCR from the above example. Please note that the empty lines within the table are also in the output. Use available functions to remove empty lines or pick specific fields. { \"Table 1\" : [ { \"Column 1\" : \"1\" }, { \"Column 1\" : \"\" }, { \"Column 1\" : \"\" }, { \"Column 1\" : \"\" }, { \"Column 1\" : \"2\" }, { \"Column 1\" : \"\" }, { \"Column 1\" : \"\" }, { \"Column 1\" : \"\" }, { \"Column 1\" : \"\" }, { \"Column 1\" : \"3\" }, { \"Column 1\" : \"\" }, { \"Column 1\" : \"\" }, { \"Column 1\" : \"\" }, { \"Column 1\" : \"4\" }, { \"Column 1\" : \"\" }, { \"Column 1\" : \"\" }, { \"Column 1\" : \"\" }, { \"Column 1\" : \"\" }, { \"Column 1\" : \"5\" }, { \"Column 1\" : \"\" }, { \"Column 1\" : \"\" }, { \"Column 1\" : \"\" }, { \"Column 1\" : \"6\" }, { \"Column 1\" : \"\" } ], \"My test section\" : [ \"QualityHosting AG - Uferweg 40-42 - D-63571 Gelnhausen\" , \"\" ] }","title":"Output Data"},{"location":"reference/services/file-system/","text":"Creating a file \u00b6 Creating (or writing) a file will send the raw data output from another service(s) to a location. Option Description Default Required Method Select \"write\" to transfer a file. - TRUE Path The location to write the file to (including the filename). - TRUE Raw Data The raw data of the file that will be sent. - TRUE Important The path will always require the filename at the end of it (i.e '/path/to/file.txt'). Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure a file system service to transfer a file to a location. This service doesn't require any service data setup. This service will not provide any output data. Updating a file \u00b6 Updating a file will send the raw data output from another service(s) to a location if it exists. Option Description Default Required Method Select \"update\" to update a file. - TRUE Path The location to update the file to (including the filename). - TRUE Raw Data The raw data of the file that will be sent. - TRUE Tip This option will only update the file it if already exists on the server. If there is a possibility that the file will not exist use the Upsert (PUT) option instead. Important The path will always require the filename at the end of it (i.e '/path/to/file.txt'). Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure a file system service to update a file. This service doesn't require any service data setup. This service will not provide any output data. Upserting a file \u00b6 Upserting (or putting) a file will send the raw data output from another service(s) to a location. If it exists it will be overwritten and if it does not exist it will be created. Option Description Default Required Method Select \"put\" to upsert a file. - TRUE Path The location to upsert the file to (including the filename). - TRUE Raw Data The raw data of the file that will be sent. - TRUE Tip This option will create a file if it does not exist and update it if it already exists. Important The path will always require the filename at the end of it (i.e '/path/to/file.txt'). Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure a file system service to upsert a file. This service doesn't require any service data setup. This service will not provide any output data. Downloading a file \u00b6 Downloading (or reading) a file will transer the raw data from the location to be used as output for other service(s). Option Description Default Required Method Select \"read\" to download a file. - TRUE Path The location of the file to download (including the filename). - TRUE Important The path will always require the filename at the end of it (i.e '/path/to/file.txt'). Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure a file system service to read a file. This service doesn't require any service data setup. This service will produce the following raw data if the file transfered successfully: { \"data\" : \"ID,Job\\n1,Scuba Diver\\n2,Plumber\\n\" , \"metadata\" : {} } Deleting a file \u00b6 Deleting a file will remove a file from a location if it exists. Option Description Default Required Method Select \"delete\" to remove a file. - TRUE Path The location of the file to delete (including the filename). - TRUE Important The path will always require the filename at the end of it (i.e '/path/to/file.txt'). Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure a file system service to delete a file. This service doesn't require any service data setup. This service will not provide any output data. Check if a file or directory exists \u00b6 This option will check to see if a file exists at a given location. Option Description Default Required Method Select \"has\" to check if it exists. - TRUE Path The location to check if it exists. - TRUE Tip This method can check if directories exist as well. Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure a file system service to delete a file. This service doesn't require any service data setup. This service will produce the following boolean data ( true if it exists, false if it does not exist): { \"data\" : true , \"metadata\" : {} } Get list of files and directories \u00b6 This option will get a list of files and folders in a specified directory. Option Description Default Required Method Select \"list\" to get a list of files. - TRUE Path The location to get the list from. - TRUE Recursive Whether is it recursive or not. FALSE FALSE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure a file system service to retrieve a list of files and directories: This service doesn't require any service data setup. This service will produce the following array of files and directories: { \"data\" : [ { \"type\" : \"file\" , \"path\" : \"357a3948-e3ad-4cb5-856b-1cde09c37b55.txt\" , \"visibility\" : \"public\" , \"size\" : 16 , \"dirname\" : \"\" , \"basename\" : \"357a3948-e3ad-4cb5-856b-1cde09c37b55.txt\" , \"extension\" : \"txt\" , \"filename\" : \"357a3948-e3ad-4cb5-856b-1cde09c37b55\" }, { \"type\" : \"file\" , \"path\" : \"59430d5e-ce73-4691-9fd7-705ab97cd792.txt\" , \"visibility\" : \"public\" , \"size\" : 16 , \"dirname\" : \"\" , \"basename\" : \"59430d5e-ce73-4691-9fd7-705ab97cd792.txt\" , \"extension\" : \"txt\" , \"filename\" : \"59430d5e-ce73-4691-9fd7-705ab97cd792\" }, { \"type\" : \"file\" , \"path\" : \"dea44f29-c9e3-441b-b02c-0d923112698d.txt\" , \"visibility\" : \"public\" , \"size\" : 16 , \"dirname\" : \"\" , \"basename\" : \"dea44f29-c9e3-441b-b02c-0d923112698d.txt\" , \"extension\" : \"txt\" , \"filename\" : \"dea44f29-c9e3-441b-b02c-0d923112698d\" }, { \"type\" : \"dir\" , \"path\" : \"Testing\" , \"dirname\" : \"\" , \"basename\" : \"Testing\" , \"filename\" : \"Testing\" } ], \"metadata\" : [] } Creating a directory \u00b6 Create a directory will create a directory in a location if it doesn't exist. Option Description Default Required Method Select \"createDir\" to create a directory. - TRUE Path The location of the directory to create. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure a file system service to create a directory. This service doesn't require any service data setup. This service will not provide any output data. Deleting a directory \u00b6 Deleting a directory will remove a directory from a location if it exists. Option Description Default Required Method Select \"deleteDir\" to remove a directory. - TRUE Path The location of the directory to delete. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure a file system service to delete a directory. This service doesn't require any service data setup. This service will not provide any output data.","title":"File system"},{"location":"reference/services/file-system/#creating-a-file","text":"Creating (or writing) a file will send the raw data output from another service(s) to a location. Option Description Default Required Method Select \"write\" to transfer a file. - TRUE Path The location to write the file to (including the filename). - TRUE Raw Data The raw data of the file that will be sent. - TRUE Important The path will always require the filename at the end of it (i.e '/path/to/file.txt'). Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure a file system service to transfer a file to a location. This service doesn't require any service data setup. This service will not provide any output data.","title":"Creating a file"},{"location":"reference/services/file-system/#updating-a-file","text":"Updating a file will send the raw data output from another service(s) to a location if it exists. Option Description Default Required Method Select \"update\" to update a file. - TRUE Path The location to update the file to (including the filename). - TRUE Raw Data The raw data of the file that will be sent. - TRUE Tip This option will only update the file it if already exists on the server. If there is a possibility that the file will not exist use the Upsert (PUT) option instead. Important The path will always require the filename at the end of it (i.e '/path/to/file.txt'). Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure a file system service to update a file. This service doesn't require any service data setup. This service will not provide any output data.","title":"Updating a file"},{"location":"reference/services/file-system/#upserting-a-file","text":"Upserting (or putting) a file will send the raw data output from another service(s) to a location. If it exists it will be overwritten and if it does not exist it will be created. Option Description Default Required Method Select \"put\" to upsert a file. - TRUE Path The location to upsert the file to (including the filename). - TRUE Raw Data The raw data of the file that will be sent. - TRUE Tip This option will create a file if it does not exist and update it if it already exists. Important The path will always require the filename at the end of it (i.e '/path/to/file.txt'). Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure a file system service to upsert a file. This service doesn't require any service data setup. This service will not provide any output data.","title":"Upserting a file"},{"location":"reference/services/file-system/#downloading-a-file","text":"Downloading (or reading) a file will transer the raw data from the location to be used as output for other service(s). Option Description Default Required Method Select \"read\" to download a file. - TRUE Path The location of the file to download (including the filename). - TRUE Important The path will always require the filename at the end of it (i.e '/path/to/file.txt'). Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure a file system service to read a file. This service doesn't require any service data setup. This service will produce the following raw data if the file transfered successfully: { \"data\" : \"ID,Job\\n1,Scuba Diver\\n2,Plumber\\n\" , \"metadata\" : {} }","title":"Downloading a file"},{"location":"reference/services/file-system/#deleting-a-file","text":"Deleting a file will remove a file from a location if it exists. Option Description Default Required Method Select \"delete\" to remove a file. - TRUE Path The location of the file to delete (including the filename). - TRUE Important The path will always require the filename at the end of it (i.e '/path/to/file.txt'). Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure a file system service to delete a file. This service doesn't require any service data setup. This service will not provide any output data.","title":"Deleting a file"},{"location":"reference/services/file-system/#check-if-a-file-or-directory-exists","text":"This option will check to see if a file exists at a given location. Option Description Default Required Method Select \"has\" to check if it exists. - TRUE Path The location to check if it exists. - TRUE Tip This method can check if directories exist as well. Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure a file system service to delete a file. This service doesn't require any service data setup. This service will produce the following boolean data ( true if it exists, false if it does not exist): { \"data\" : true , \"metadata\" : {} }","title":"Check if a file or directory exists"},{"location":"reference/services/file-system/#get-list-of-files-and-directories","text":"This option will get a list of files and folders in a specified directory. Option Description Default Required Method Select \"list\" to get a list of files. - TRUE Path The location to get the list from. - TRUE Recursive Whether is it recursive or not. FALSE FALSE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure a file system service to retrieve a list of files and directories: This service doesn't require any service data setup. This service will produce the following array of files and directories: { \"data\" : [ { \"type\" : \"file\" , \"path\" : \"357a3948-e3ad-4cb5-856b-1cde09c37b55.txt\" , \"visibility\" : \"public\" , \"size\" : 16 , \"dirname\" : \"\" , \"basename\" : \"357a3948-e3ad-4cb5-856b-1cde09c37b55.txt\" , \"extension\" : \"txt\" , \"filename\" : \"357a3948-e3ad-4cb5-856b-1cde09c37b55\" }, { \"type\" : \"file\" , \"path\" : \"59430d5e-ce73-4691-9fd7-705ab97cd792.txt\" , \"visibility\" : \"public\" , \"size\" : 16 , \"dirname\" : \"\" , \"basename\" : \"59430d5e-ce73-4691-9fd7-705ab97cd792.txt\" , \"extension\" : \"txt\" , \"filename\" : \"59430d5e-ce73-4691-9fd7-705ab97cd792\" }, { \"type\" : \"file\" , \"path\" : \"dea44f29-c9e3-441b-b02c-0d923112698d.txt\" , \"visibility\" : \"public\" , \"size\" : 16 , \"dirname\" : \"\" , \"basename\" : \"dea44f29-c9e3-441b-b02c-0d923112698d.txt\" , \"extension\" : \"txt\" , \"filename\" : \"dea44f29-c9e3-441b-b02c-0d923112698d\" }, { \"type\" : \"dir\" , \"path\" : \"Testing\" , \"dirname\" : \"\" , \"basename\" : \"Testing\" , \"filename\" : \"Testing\" } ], \"metadata\" : [] }","title":"Get list of files and directories"},{"location":"reference/services/file-system/#creating-a-directory","text":"Create a directory will create a directory in a location if it doesn't exist. Option Description Default Required Method Select \"createDir\" to create a directory. - TRUE Path The location of the directory to create. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure a file system service to create a directory. This service doesn't require any service data setup. This service will not provide any output data.","title":"Creating a directory"},{"location":"reference/services/file-system/#deleting-a-directory","text":"Deleting a directory will remove a directory from a location if it exists. Option Description Default Required Method Select \"deleteDir\" to remove a directory. - TRUE Path The location of the directory to delete. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure a file system service to delete a directory. This service doesn't require any service data setup. This service will not provide any output data.","title":"Deleting a directory"},{"location":"reference/services/ftp-service/","text":"Before you begin In order to use the features in this section you need to have an active Spojit account. If you don't have an account you can checkout out the pricing and register here . If you already have an account you can login here . This service can facilitate the transfer of computer files between a client and server via the File Transfer Protocol (FTP). Authorization \u00b6 The following authorization configuration needs to filled out in order to connect to the FTP server: Option Description Default Required Host The address of the FTP server (i.e. ftp.dlptest.com). - TRUE Port The port of the FTP server. 21 TRUE Username The username to log in to the FTP server. - TRUE Password The password to log in to the FTP server. - TRUE Passive mode Enable passive mode allowing the client to initiate the data connection with the server. TRUE FALSE SSL Enable the use of SSL (Secure Socket Layer). TRUE FALSE Ignore Passive Address Ignore the received passive address from the FTP server. FALSE FALSE The following example configuration shows you how to configure the test FTP server at DLP Test and ensuring that passive mode is turned on. Important The host address does not require the protocol as it will default to FTP (i.e ftp://). Creating a file \u00b6 Creating (or writing) a file will send the raw data output from another service(s) to a location. Option Description Default Required Method Select \"write\" to transfer a file. - TRUE Path The location to write the file to (including the filename). - TRUE Raw Data The raw data of the file that will be sent. - TRUE Important The path will always require the filename at the end of it (i.e '/path/to/file.txt'). Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure a file system service to transfer a file to a location. This service doesn't require any service data setup. This service will not provide any output data. Updating a file \u00b6 Updating a file will send the raw data output from another service(s) to a location if it exists. Option Description Default Required Method Select \"update\" to update a file. - TRUE Path The location to update the file to (including the filename). - TRUE Raw Data The raw data of the file that will be sent. - TRUE Tip This option will only update the file it if already exists on the server. If there is a possibility that the file will not exist use the Upsert (PUT) option instead. Important The path will always require the filename at the end of it (i.e '/path/to/file.txt'). Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure a file system service to update a file. This service doesn't require any service data setup. This service will not provide any output data. Upserting a file \u00b6 Upserting (or putting) a file will send the raw data output from another service(s) to a location. If it exists it will be overwritten and if it does not exist it will be created. Option Description Default Required Method Select \"put\" to upsert a file. - TRUE Path The location to upsert the file to (including the filename). - TRUE Raw Data The raw data of the file that will be sent. - TRUE Tip This option will create a file if it does not exist and update it if it already exists. Important The path will always require the filename at the end of it (i.e '/path/to/file.txt'). Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure a file system service to upsert a file. This service doesn't require any service data setup. This service will not provide any output data. Downloading a file \u00b6 Downloading (or reading) a file will transer the raw data from the location to be used as output for other service(s). Option Description Default Required Method Select \"read\" to download a file. - TRUE Path The location of the file to download (including the filename). - TRUE Important The path will always require the filename at the end of it (i.e '/path/to/file.txt'). Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure a file system service to read a file. This service doesn't require any service data setup. This service will produce the following raw data if the file transfered successfully: { \"data\" : \"ID,Job\\n1,Scuba Diver\\n2,Plumber\\n\" , \"metadata\" : {} } Deleting a file \u00b6 Deleting a file will remove a file from a location if it exists. Option Description Default Required Method Select \"delete\" to remove a file. - TRUE Path The location of the file to delete (including the filename). - TRUE Important The path will always require the filename at the end of it (i.e '/path/to/file.txt'). Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure a file system service to delete a file. This service doesn't require any service data setup. This service will not provide any output data. Check if a file or directory exists \u00b6 This option will check to see if a file exists at a given location. Option Description Default Required Method Select \"has\" to check if it exists. - TRUE Path The location to check if it exists. - TRUE Tip This method can check if directories exist as well. Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure a file system service to delete a file. This service doesn't require any service data setup. This service will produce the following boolean data ( true if it exists, false if it does not exist): { \"data\" : true , \"metadata\" : {} } Get list of files and directories \u00b6 This option will get a list of files and folders in a specified directory. Option Description Default Required Method Select \"list\" to get a list of files. - TRUE Path The location to get the list from. - TRUE Recursive Whether is it recursive or not. FALSE FALSE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure a file system service to retrieve a list of files and directories: This service doesn't require any service data setup. This service will produce the following array of files and directories: { \"data\" : [ { \"type\" : \"file\" , \"path\" : \"357a3948-e3ad-4cb5-856b-1cde09c37b55.txt\" , \"visibility\" : \"public\" , \"size\" : 16 , \"dirname\" : \"\" , \"basename\" : \"357a3948-e3ad-4cb5-856b-1cde09c37b55.txt\" , \"extension\" : \"txt\" , \"filename\" : \"357a3948-e3ad-4cb5-856b-1cde09c37b55\" }, { \"type\" : \"file\" , \"path\" : \"59430d5e-ce73-4691-9fd7-705ab97cd792.txt\" , \"visibility\" : \"public\" , \"size\" : 16 , \"dirname\" : \"\" , \"basename\" : \"59430d5e-ce73-4691-9fd7-705ab97cd792.txt\" , \"extension\" : \"txt\" , \"filename\" : \"59430d5e-ce73-4691-9fd7-705ab97cd792\" }, { \"type\" : \"file\" , \"path\" : \"dea44f29-c9e3-441b-b02c-0d923112698d.txt\" , \"visibility\" : \"public\" , \"size\" : 16 , \"dirname\" : \"\" , \"basename\" : \"dea44f29-c9e3-441b-b02c-0d923112698d.txt\" , \"extension\" : \"txt\" , \"filename\" : \"dea44f29-c9e3-441b-b02c-0d923112698d\" }, { \"type\" : \"dir\" , \"path\" : \"Testing\" , \"dirname\" : \"\" , \"basename\" : \"Testing\" , \"filename\" : \"Testing\" } ], \"metadata\" : [] } Creating a directory \u00b6 Create a directory will create a directory in a location if it doesn't exist. Option Description Default Required Method Select \"createDir\" to create a directory. - TRUE Path The location of the directory to create. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure a file system service to create a directory. This service doesn't require any service data setup. This service will not provide any output data. Deleting a directory \u00b6 Deleting a directory will remove a directory from a location if it exists. Option Description Default Required Method Select \"deleteDir\" to remove a directory. - TRUE Path The location of the directory to delete. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure a file system service to delete a directory. This service doesn't require any service data setup. This service will not provide any output data.","title":"FTP Service"},{"location":"reference/services/ftp-service/#authorization","text":"The following authorization configuration needs to filled out in order to connect to the FTP server: Option Description Default Required Host The address of the FTP server (i.e. ftp.dlptest.com). - TRUE Port The port of the FTP server. 21 TRUE Username The username to log in to the FTP server. - TRUE Password The password to log in to the FTP server. - TRUE Passive mode Enable passive mode allowing the client to initiate the data connection with the server. TRUE FALSE SSL Enable the use of SSL (Secure Socket Layer). TRUE FALSE Ignore Passive Address Ignore the received passive address from the FTP server. FALSE FALSE The following example configuration shows you how to configure the test FTP server at DLP Test and ensuring that passive mode is turned on. Important The host address does not require the protocol as it will default to FTP (i.e ftp://).","title":"Authorization"},{"location":"reference/services/ftp-service/#creating-a-file","text":"Creating (or writing) a file will send the raw data output from another service(s) to a location. Option Description Default Required Method Select \"write\" to transfer a file. - TRUE Path The location to write the file to (including the filename). - TRUE Raw Data The raw data of the file that will be sent. - TRUE Important The path will always require the filename at the end of it (i.e '/path/to/file.txt'). Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure a file system service to transfer a file to a location. This service doesn't require any service data setup. This service will not provide any output data.","title":"Creating a file"},{"location":"reference/services/ftp-service/#updating-a-file","text":"Updating a file will send the raw data output from another service(s) to a location if it exists. Option Description Default Required Method Select \"update\" to update a file. - TRUE Path The location to update the file to (including the filename). - TRUE Raw Data The raw data of the file that will be sent. - TRUE Tip This option will only update the file it if already exists on the server. If there is a possibility that the file will not exist use the Upsert (PUT) option instead. Important The path will always require the filename at the end of it (i.e '/path/to/file.txt'). Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure a file system service to update a file. This service doesn't require any service data setup. This service will not provide any output data.","title":"Updating a file"},{"location":"reference/services/ftp-service/#upserting-a-file","text":"Upserting (or putting) a file will send the raw data output from another service(s) to a location. If it exists it will be overwritten and if it does not exist it will be created. Option Description Default Required Method Select \"put\" to upsert a file. - TRUE Path The location to upsert the file to (including the filename). - TRUE Raw Data The raw data of the file that will be sent. - TRUE Tip This option will create a file if it does not exist and update it if it already exists. Important The path will always require the filename at the end of it (i.e '/path/to/file.txt'). Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure a file system service to upsert a file. This service doesn't require any service data setup. This service will not provide any output data.","title":"Upserting a file"},{"location":"reference/services/ftp-service/#downloading-a-file","text":"Downloading (or reading) a file will transer the raw data from the location to be used as output for other service(s). Option Description Default Required Method Select \"read\" to download a file. - TRUE Path The location of the file to download (including the filename). - TRUE Important The path will always require the filename at the end of it (i.e '/path/to/file.txt'). Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure a file system service to read a file. This service doesn't require any service data setup. This service will produce the following raw data if the file transfered successfully: { \"data\" : \"ID,Job\\n1,Scuba Diver\\n2,Plumber\\n\" , \"metadata\" : {} }","title":"Downloading a file"},{"location":"reference/services/ftp-service/#deleting-a-file","text":"Deleting a file will remove a file from a location if it exists. Option Description Default Required Method Select \"delete\" to remove a file. - TRUE Path The location of the file to delete (including the filename). - TRUE Important The path will always require the filename at the end of it (i.e '/path/to/file.txt'). Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure a file system service to delete a file. This service doesn't require any service data setup. This service will not provide any output data.","title":"Deleting a file"},{"location":"reference/services/ftp-service/#check-if-a-file-or-directory-exists","text":"This option will check to see if a file exists at a given location. Option Description Default Required Method Select \"has\" to check if it exists. - TRUE Path The location to check if it exists. - TRUE Tip This method can check if directories exist as well. Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure a file system service to delete a file. This service doesn't require any service data setup. This service will produce the following boolean data ( true if it exists, false if it does not exist): { \"data\" : true , \"metadata\" : {} }","title":"Check if a file or directory exists"},{"location":"reference/services/ftp-service/#get-list-of-files-and-directories","text":"This option will get a list of files and folders in a specified directory. Option Description Default Required Method Select \"list\" to get a list of files. - TRUE Path The location to get the list from. - TRUE Recursive Whether is it recursive or not. FALSE FALSE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure a file system service to retrieve a list of files and directories: This service doesn't require any service data setup. This service will produce the following array of files and directories: { \"data\" : [ { \"type\" : \"file\" , \"path\" : \"357a3948-e3ad-4cb5-856b-1cde09c37b55.txt\" , \"visibility\" : \"public\" , \"size\" : 16 , \"dirname\" : \"\" , \"basename\" : \"357a3948-e3ad-4cb5-856b-1cde09c37b55.txt\" , \"extension\" : \"txt\" , \"filename\" : \"357a3948-e3ad-4cb5-856b-1cde09c37b55\" }, { \"type\" : \"file\" , \"path\" : \"59430d5e-ce73-4691-9fd7-705ab97cd792.txt\" , \"visibility\" : \"public\" , \"size\" : 16 , \"dirname\" : \"\" , \"basename\" : \"59430d5e-ce73-4691-9fd7-705ab97cd792.txt\" , \"extension\" : \"txt\" , \"filename\" : \"59430d5e-ce73-4691-9fd7-705ab97cd792\" }, { \"type\" : \"file\" , \"path\" : \"dea44f29-c9e3-441b-b02c-0d923112698d.txt\" , \"visibility\" : \"public\" , \"size\" : 16 , \"dirname\" : \"\" , \"basename\" : \"dea44f29-c9e3-441b-b02c-0d923112698d.txt\" , \"extension\" : \"txt\" , \"filename\" : \"dea44f29-c9e3-441b-b02c-0d923112698d\" }, { \"type\" : \"dir\" , \"path\" : \"Testing\" , \"dirname\" : \"\" , \"basename\" : \"Testing\" , \"filename\" : \"Testing\" } ], \"metadata\" : [] }","title":"Get list of files and directories"},{"location":"reference/services/ftp-service/#creating-a-directory","text":"Create a directory will create a directory in a location if it doesn't exist. Option Description Default Required Method Select \"createDir\" to create a directory. - TRUE Path The location of the directory to create. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure a file system service to create a directory. This service doesn't require any service data setup. This service will not provide any output data.","title":"Creating a directory"},{"location":"reference/services/ftp-service/#deleting-a-directory","text":"Deleting a directory will remove a directory from a location if it exists. Option Description Default Required Method Select \"deleteDir\" to remove a directory. - TRUE Path The location of the directory to delete. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure a file system service to delete a directory. This service doesn't require any service data setup. This service will not provide any output data.","title":"Deleting a directory"},{"location":"reference/services/json-parser/","text":"Before you begin In order to use the features in this section you need to have an active Spojit account. If you don't have an account you can checkout out the pricing and register here . If you already have an account you can login here . This service can write a JSON file from source data which could be used that to create a file on a FTP or make a request in the JSON format. It can also read the data from a JSON file which would create data output. Tip Choose the writeToString or readFromString methods to input/output as a string instead of a file. Writing a JSON file \u00b6 When the write configuration is selected the service will write a JSON file from mapped data and configuration options. Option Description Default Required Method Select \"write\" to write a JSON file. - TRUE Important The parser does not generate the file itself rather the raw data that can be used by other services to generate or send a file (i.e SFTP/HTTP Request). Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the JSON Parser to create a JSON file from a data object. The schema can be whatever you want and for this example we are going to create an OBJECT schema with the specified fields: Given the following source data from another service: { \"data\" : { \"user_id\" : 1 , \"my_id\" : 1 , \"the_title\" : \"delectus aut autem\" , \"finished\" : false } } We can map the applicable fields with the schema object: In this example the following output will be generated automatically by this service after it is run: { \"data\" : \"{\" userId \":1,\" id \":1,\" t i tle \":\" delec tus au t au te m \",\" comple te d \":false}\" , \"metadata\" : {} } Reading a JSON file \u00b6 When the read configuration is selected the service will read the raw data from a JSON file to create output data. The output data can then be used by other services. Option Description Default Required Method Select \"read\" to read a JSON file - TRUE Raw Data The raw data of the JSON file that will be parsed - TRUE Info There is no need to configure the service data that is read. The JSON data will automatically create the data object. Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the JSON Parser to create a data object. Given the following source data from another service: { \"data\" : \"{\" userId \":1,\" id \":1,\" t i tle \":\" delec tus au t au te m \",\" comple te d \":false}\" , \"metadata\" : {} } The location of the raw JSON data needs to be specified in the configuration: The JSON reader doesn't require any service data setup. In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { } }","title":"JSON Parser"},{"location":"reference/services/json-parser/#writing-a-json-file","text":"When the write configuration is selected the service will write a JSON file from mapped data and configuration options. Option Description Default Required Method Select \"write\" to write a JSON file. - TRUE Important The parser does not generate the file itself rather the raw data that can be used by other services to generate or send a file (i.e SFTP/HTTP Request). Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the JSON Parser to create a JSON file from a data object. The schema can be whatever you want and for this example we are going to create an OBJECT schema with the specified fields: Given the following source data from another service: { \"data\" : { \"user_id\" : 1 , \"my_id\" : 1 , \"the_title\" : \"delectus aut autem\" , \"finished\" : false } } We can map the applicable fields with the schema object: In this example the following output will be generated automatically by this service after it is run: { \"data\" : \"{\" userId \":1,\" id \":1,\" t i tle \":\" delec tus au t au te m \",\" comple te d \":false}\" , \"metadata\" : {} }","title":"Writing a JSON file"},{"location":"reference/services/json-parser/#reading-a-json-file","text":"When the read configuration is selected the service will read the raw data from a JSON file to create output data. The output data can then be used by other services. Option Description Default Required Method Select \"read\" to read a JSON file - TRUE Raw Data The raw data of the JSON file that will be parsed - TRUE Info There is no need to configure the service data that is read. The JSON data will automatically create the data object. Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the JSON Parser to create a data object. Given the following source data from another service: { \"data\" : \"{\" userId \":1,\" id \":1,\" t i tle \":\" delec tus au t au te m \",\" comple te d \":false}\" , \"metadata\" : {} } The location of the raw JSON data needs to be specified in the configuration: The JSON reader doesn't require any service data setup. In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { } }","title":"Reading a JSON file"},{"location":"reference/services/magento2-service/","text":"Before you begin In order to use the features in this section you need to have an active Spojit account. If you don't have an account you can checkout out the pricing and register here . If you already have an account you can login here . Magento 2 empowers thousands of retailers and brands with the best eCommerce platforms and flexible cloud solutions to rapidly innovate and grow. Tip Full documentation of Magento 2 resources and configuration is available at Magento 2 API Documentation . Magento 2 Authorization \u00b6 The following authorization configuration needs to filled out in order to connect with Magento 2: Option Description Default Required URL The main URL of your Magento 2 instance (i.e. https://www.mymagentostore.com ). - TRUE Store Code The store code you wish to access. Default refers to your default store. default TRUE Access Token The permanent Access Token. - TRUE The following example configuration shows you how to configure the authorziation for Magento 2: Tip Create an integration in Magento 2 admin to get your access token: Magento 2 Create Integration in admin . Please note: no Callback URL or Identity Link URL is required when addin a new integration. Important This service uses Version 1 (V1) of the Magento 2 Rest API by default and will append this and the store code to the URL automatically. Please add the paths accordingly without the reference to /rest/{{ store_code }}/V1/ : Correct Incorrect /bundle-products/options/types /rest/default/V1/bundle-products/options/types Important This service has a built in JSON parser and will automatically convert to the proper format. Requests will automatically contain required headers and authorization configuration so they do not need to be added. The following (below) is a general guide on how to use the methods for this service. The examples use the JSONPlaceholder fake online REST API. Please refer to the system documentation above for full path and schema information. GET \u00b6 When the GET configuration is selected the service will retrieve a resource from a given URL. Option Description Default Required Method Select \"get\" to retrieve a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to get data from a resource. It also contains an example header for an OAuth authorization bearer token. The GET method doesn't require any service data setup. In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 200 } } POST \u00b6 When the POST configuration is selected the service will create a resource at a given location. Option Description Default Required Method Select \"post\" to create a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to create a resource. The schema can be whatever the resource excepts and for this example we are going to create an OBJECT schema with the specified fields: Given the following source data from another service: { \"data\" : { \"user_id\" : 1 , \"my_id\" : 1 , \"the_title\" : \"delectus aut autem\" , \"finished\" : false } } We can map the applicable fields with the schema object: In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 201 } } PUT \u00b6 When the PUT configuration is selected the service will update a resource at a given location. Option Description Default Required Method Select \"put\" to update a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to update a resource. The schema can be whatever the resource excepts and for this example we are going to create an OBJECT schema with the specified fields: Given the following source data from another service: { \"data\" : { \"user_id\" : 1 , \"my_id\" : 1 , \"the_title\" : \"delectus aut autem\" , \"finished\" : false } } We can map the applicable fields with the schema object: In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 200 } } DELETE \u00b6 When the DELETE configuration is selected the service will delete a resource from a given URL. Option Description Default Required Method Select \"delete\" to delete a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to delete a resource: The DELETE method doesn't require any service data setup. Many services will not return any data after a resource is deleted but if data is returned it could possiblly look like this: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 204 } }","title":"Magento 2"},{"location":"reference/services/magento2-service/#magento-2-authorization","text":"The following authorization configuration needs to filled out in order to connect with Magento 2: Option Description Default Required URL The main URL of your Magento 2 instance (i.e. https://www.mymagentostore.com ). - TRUE Store Code The store code you wish to access. Default refers to your default store. default TRUE Access Token The permanent Access Token. - TRUE The following example configuration shows you how to configure the authorziation for Magento 2: Tip Create an integration in Magento 2 admin to get your access token: Magento 2 Create Integration in admin . Please note: no Callback URL or Identity Link URL is required when addin a new integration. Important This service uses Version 1 (V1) of the Magento 2 Rest API by default and will append this and the store code to the URL automatically. Please add the paths accordingly without the reference to /rest/{{ store_code }}/V1/ : Correct Incorrect /bundle-products/options/types /rest/default/V1/bundle-products/options/types Important This service has a built in JSON parser and will automatically convert to the proper format. Requests will automatically contain required headers and authorization configuration so they do not need to be added. The following (below) is a general guide on how to use the methods for this service. The examples use the JSONPlaceholder fake online REST API. Please refer to the system documentation above for full path and schema information.","title":"Magento 2 Authorization"},{"location":"reference/services/magento2-service/#get","text":"When the GET configuration is selected the service will retrieve a resource from a given URL. Option Description Default Required Method Select \"get\" to retrieve a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to get data from a resource. It also contains an example header for an OAuth authorization bearer token. The GET method doesn't require any service data setup. In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 200 } }","title":"GET"},{"location":"reference/services/magento2-service/#post","text":"When the POST configuration is selected the service will create a resource at a given location. Option Description Default Required Method Select \"post\" to create a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to create a resource. The schema can be whatever the resource excepts and for this example we are going to create an OBJECT schema with the specified fields: Given the following source data from another service: { \"data\" : { \"user_id\" : 1 , \"my_id\" : 1 , \"the_title\" : \"delectus aut autem\" , \"finished\" : false } } We can map the applicable fields with the schema object: In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 201 } }","title":"POST"},{"location":"reference/services/magento2-service/#put","text":"When the PUT configuration is selected the service will update a resource at a given location. Option Description Default Required Method Select \"put\" to update a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to update a resource. The schema can be whatever the resource excepts and for this example we are going to create an OBJECT schema with the specified fields: Given the following source data from another service: { \"data\" : { \"user_id\" : 1 , \"my_id\" : 1 , \"the_title\" : \"delectus aut autem\" , \"finished\" : false } } We can map the applicable fields with the schema object: In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 200 } }","title":"PUT"},{"location":"reference/services/magento2-service/#delete","text":"When the DELETE configuration is selected the service will delete a resource from a given URL. Option Description Default Required Method Select \"delete\" to delete a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to delete a resource: The DELETE method doesn't require any service data setup. Many services will not return any data after a resource is deleted but if data is returned it could possiblly look like this: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 204 } }","title":"DELETE"},{"location":"reference/services/mailer/","text":"Before you begin In order to use the features in this section you need to have an active Spojit account. If you don't have an account you can checkout out the pricing and register here . If you already have an account you can login here . This service can send a simple email from the Spojit System email address. It includes the ability to configure recipients, a subject line, text body, and add attachments. Configuration \u00b6 Option Description Default Required To The recipient(s) of the email message. Each receipient requires a name and email address - TRUE Name The name of the recipient of the email message. - TRUE Email The email address of the recipient. - TRUE Subject The subject line of the email that is going to be sent. - TRUE Body The body of the email that is going to be sent. - TRUE Attachments File(s) that are attached to the email. This requires attachment type, name and the raw data for the file. - FALSE Attachment Type The type of file that is being attached (i.e application/csv). - TRUE Attachment Filename The name of file that is being attached (i.e somedata.csv). - TRUE Raw data The raw data of the file that will be attached. - TRUE Important The attachments need to be provided to this service in raw data with the correct data type and file name selected in order for the file to be read properly with some email clients. Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the mailer to send an email with an attachment. The To , Subject and Body are essential and attachments must be raw data with the applicable data type and name provided. The mailer doesn't require any service data setup. The mailer will not provide much output data besides if the email was sent or not. The following is what this configured email might look like when received:","title":"Mailer"},{"location":"reference/services/mailer/#configuration","text":"Option Description Default Required To The recipient(s) of the email message. Each receipient requires a name and email address - TRUE Name The name of the recipient of the email message. - TRUE Email The email address of the recipient. - TRUE Subject The subject line of the email that is going to be sent. - TRUE Body The body of the email that is going to be sent. - TRUE Attachments File(s) that are attached to the email. This requires attachment type, name and the raw data for the file. - FALSE Attachment Type The type of file that is being attached (i.e application/csv). - TRUE Attachment Filename The name of file that is being attached (i.e somedata.csv). - TRUE Raw data The raw data of the file that will be attached. - TRUE Important The attachments need to be provided to this service in raw data with the correct data type and file name selected in order for the file to be read properly with some email clients. Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the mailer to send an email with an attachment. The To , Subject and Body are essential and attachments must be raw data with the applicable data type and name provided. The mailer doesn't require any service data setup. The mailer will not provide much output data besides if the email was sent or not. The following is what this configured email might look like when received:","title":"Configuration"},{"location":"reference/services/mapper-service/","text":"Before you begin In order to use the features in this section you need to have an active Spojit account. If you don't have an account you can checkout out the pricing and register here . If you already have an account you can login here . The mapper service allows the mapping of data to create new objects or arrays. The developed schema and associated mapping becomes the output of this service which could be used by other services. Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to use the mapper service to create a new object. There is no required configuration for this service. The schema can be whatever you want and for this example we are going to create an OBJECT schema with the specified fields: Given the following source data from another service: { \"data\" : { \"user_id\" : 1 , \"my_id\" : 1 , \"the_title\" : \"delectus aut autem\" , \"finished\" : false } } We can map the applicable fields with the schema object: In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : [] }","title":"Mapper Service"},{"location":"reference/services/netsuite-rest-service/","text":"Before you begin In order to use the features in this section you need to have an active Spojit account. If you don't have an account you can checkout out the pricing and register here . If you already have an account you can login here . NetSuite is the leading integrated cloud business software suite, including business accounting, ERP, CRM and ecommerce software. This service can facilitate the bilateral transfer of resources within the Netsuite RESTful web service. Tip Full documentation of Netsuite resources and configuration is available in the Netsuite Help Center . Netsuite Authorization \u00b6 This service uses the Token Based Authentication (TBA) approach outlined in the Netsuite Help Center . The following authorization configuration needs to filled out in order to connect with Netsuite: Option Description Default Required Company URL The company endpoint for your Netsuite instance (i.e. https://****.suitetalk.api.netsuite.com). - TRUE Account ID Your account ID. - TRUE Consumer Key A consumer key for your Netsuite instance. - TRUE Consumer Secret A consumer secret for your Netsuite instance. - TRUE Token ID A token ID for your Netsuite instance. - TRUE Token Secret A token secret for your Netsuite instance. - TRUE The following example configuration shows you how to configure the authorziation for Netsuite: Important This service uses Version 1 (v1) of the Netsuite REST API by default and will append this to the path automatically. Please add the paths accordingly without the reference to /services/rest/record/v1 : Correct Incorrect /salesOrder /services/rest/record/v1/salesOrder Important This service has a built in JSON parser and will automatically convert to the proper format. Requests will automatically contain required headers and authorization configuration so they do not need to be added. The following (below) is a general guide on how to use the methods for this service. The examples use the JSONPlaceholder fake online REST API. Please refer to the system documentation above for full path and schema information. GET \u00b6 When the GET configuration is selected the service will retrieve a resource from a given URL. Option Description Default Required Method Select \"get\" to retrieve a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to get data from a resource. It also contains an example header for an OAuth authorization bearer token. The GET method doesn't require any service data setup. In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 200 } } POST \u00b6 When the POST configuration is selected the service will create a resource at a given location. Option Description Default Required Method Select \"post\" to create a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to create a resource. The schema can be whatever the resource excepts and for this example we are going to create an OBJECT schema with the specified fields: Given the following source data from another service: { \"data\" : { \"user_id\" : 1 , \"my_id\" : 1 , \"the_title\" : \"delectus aut autem\" , \"finished\" : false } } We can map the applicable fields with the schema object: In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 201 } } PUT \u00b6 When the PUT configuration is selected the service will update a resource at a given location. Option Description Default Required Method Select \"put\" to update a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to update a resource. The schema can be whatever the resource excepts and for this example we are going to create an OBJECT schema with the specified fields: Given the following source data from another service: { \"data\" : { \"user_id\" : 1 , \"my_id\" : 1 , \"the_title\" : \"delectus aut autem\" , \"finished\" : false } } We can map the applicable fields with the schema object: In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 200 } } DELETE \u00b6 When the DELETE configuration is selected the service will delete a resource from a given URL. Option Description Default Required Method Select \"delete\" to delete a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to delete a resource: The DELETE method doesn't require any service data setup. Many services will not return any data after a resource is deleted but if data is returned it could possiblly look like this: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 204 } }","title":"Netsuite REST Service"},{"location":"reference/services/netsuite-rest-service/#netsuite-authorization","text":"This service uses the Token Based Authentication (TBA) approach outlined in the Netsuite Help Center . The following authorization configuration needs to filled out in order to connect with Netsuite: Option Description Default Required Company URL The company endpoint for your Netsuite instance (i.e. https://****.suitetalk.api.netsuite.com). - TRUE Account ID Your account ID. - TRUE Consumer Key A consumer key for your Netsuite instance. - TRUE Consumer Secret A consumer secret for your Netsuite instance. - TRUE Token ID A token ID for your Netsuite instance. - TRUE Token Secret A token secret for your Netsuite instance. - TRUE The following example configuration shows you how to configure the authorziation for Netsuite: Important This service uses Version 1 (v1) of the Netsuite REST API by default and will append this to the path automatically. Please add the paths accordingly without the reference to /services/rest/record/v1 : Correct Incorrect /salesOrder /services/rest/record/v1/salesOrder Important This service has a built in JSON parser and will automatically convert to the proper format. Requests will automatically contain required headers and authorization configuration so they do not need to be added. The following (below) is a general guide on how to use the methods for this service. The examples use the JSONPlaceholder fake online REST API. Please refer to the system documentation above for full path and schema information.","title":"Netsuite Authorization"},{"location":"reference/services/netsuite-rest-service/#get","text":"When the GET configuration is selected the service will retrieve a resource from a given URL. Option Description Default Required Method Select \"get\" to retrieve a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to get data from a resource. It also contains an example header for an OAuth authorization bearer token. The GET method doesn't require any service data setup. In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 200 } }","title":"GET"},{"location":"reference/services/netsuite-rest-service/#post","text":"When the POST configuration is selected the service will create a resource at a given location. Option Description Default Required Method Select \"post\" to create a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to create a resource. The schema can be whatever the resource excepts and for this example we are going to create an OBJECT schema with the specified fields: Given the following source data from another service: { \"data\" : { \"user_id\" : 1 , \"my_id\" : 1 , \"the_title\" : \"delectus aut autem\" , \"finished\" : false } } We can map the applicable fields with the schema object: In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 201 } }","title":"POST"},{"location":"reference/services/netsuite-rest-service/#put","text":"When the PUT configuration is selected the service will update a resource at a given location. Option Description Default Required Method Select \"put\" to update a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to update a resource. The schema can be whatever the resource excepts and for this example we are going to create an OBJECT schema with the specified fields: Given the following source data from another service: { \"data\" : { \"user_id\" : 1 , \"my_id\" : 1 , \"the_title\" : \"delectus aut autem\" , \"finished\" : false } } We can map the applicable fields with the schema object: In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 200 } }","title":"PUT"},{"location":"reference/services/netsuite-rest-service/#delete","text":"When the DELETE configuration is selected the service will delete a resource from a given URL. Option Description Default Required Method Select \"delete\" to delete a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to delete a resource: The DELETE method doesn't require any service data setup. Many services will not return any data after a resource is deleted but if data is returned it could possiblly look like this: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 204 } }","title":"DELETE"},{"location":"reference/services/netsuite-restlet-service/","text":"Before you begin In order to use the features in this section you need to have an active Spojit account. If you don't have an account you can checkout out the pricing and register here . If you already have an account you can login here . NetSuite is the leading integrated cloud business software suite, including business accounting, ERP, CRM and ecommerce software. This service can facilitate the bilateral transfer of resources within the Netsuite RESTlet service. Tip Full documentation of creating RESTlets in Netsuite is available in the Netsuite Help Center . Netsuite RESTlet Authorization \u00b6 This service uses the Token Based Authentication (TBA) approach outlined in the Netsuite Help Center . The following authorization configuration needs to filled out in order to connect with Netsuite: Option Description Default Required Company URL The company endpoint for your Netsuite instance (i.e. https://****.suitetalk.api.netsuite.com). - TRUE Account ID Your account ID. - TRUE Consumer Key A consumer key for your Netsuite instance. - TRUE Consumer Secret A consumer secret for your Netsuite instance. - TRUE Token ID A token ID for your Netsuite instance. - TRUE Token Secret A token secret for your Netsuite instance. - TRUE The following example configuration shows you how to configure the authorziation for Netsuite: Making a request \u00b6 Making a request with send/retrieve data from a given Netsuite RESTlet URL. Basic HTTP are used (GET, POST, PUT and DELETE) and the responses will be what is configured for the RESTlet. Option Description Default Required Method GET / POST / PUT / DELETE GET TRUE URL The full URL of your RESTlet. - TRUE Important The response code will always be 200 if the RESTlet response is successful. Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Netsuite RESTlet service to get data from Netsuite. This service's data setup is dependant on the RESTlet configuration. This service's output data is dependant on the RESTlet configuration.","title":"Netsuite RESTlet Service"},{"location":"reference/services/netsuite-restlet-service/#netsuite-restlet-authorization","text":"This service uses the Token Based Authentication (TBA) approach outlined in the Netsuite Help Center . The following authorization configuration needs to filled out in order to connect with Netsuite: Option Description Default Required Company URL The company endpoint for your Netsuite instance (i.e. https://****.suitetalk.api.netsuite.com). - TRUE Account ID Your account ID. - TRUE Consumer Key A consumer key for your Netsuite instance. - TRUE Consumer Secret A consumer secret for your Netsuite instance. - TRUE Token ID A token ID for your Netsuite instance. - TRUE Token Secret A token secret for your Netsuite instance. - TRUE The following example configuration shows you how to configure the authorziation for Netsuite:","title":"Netsuite RESTlet Authorization"},{"location":"reference/services/netsuite-restlet-service/#making-a-request","text":"Making a request with send/retrieve data from a given Netsuite RESTlet URL. Basic HTTP are used (GET, POST, PUT and DELETE) and the responses will be what is configured for the RESTlet. Option Description Default Required Method GET / POST / PUT / DELETE GET TRUE URL The full URL of your RESTlet. - TRUE Important The response code will always be 200 if the RESTlet response is successful. Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Netsuite RESTlet service to get data from Netsuite. This service's data setup is dependant on the RESTlet configuration. This service's output data is dependant on the RESTlet configuration.","title":"Making a request"},{"location":"reference/services/netsuite-soap-service/","text":"Before you begin In order to use the features in this section you need to have an active Spojit account. If you don't have an account you can checkout out the pricing and register here . If you already have an account you can login here . NetSuite is the leading integrated cloud business software suite, including business accounting, ERP, CRM and ecommerce software. This service can facilitate the extraction of resources within the Netsuite SOAP web service. Tip Full documentation of Netsuite resources and configuration is available in the Netsuite Help Center . Netsuite Authorization \u00b6 This service uses the Token Based Authentication (TBA) approach outlined in the Netsuite Help Center . The following authorization configuration needs to filled out in order to connect with Netsuite: Option Description Default Required Company URL The company endpoint for your Netsuite instance (i.e. https://****.suitetalk.api.netsuite.com). - TRUE Account ID Your account ID. - TRUE Consumer Key A consumer key for your Netsuite instance. - TRUE Consumer Secret A consumer secret for your Netsuite instance. - TRUE Token ID A token ID for your Netsuite instance. - TRUE Token Secret A token secret for your Netsuite instance. - TRUE The following example configuration shows you how to configure the authorziation for Netsuite: Get Entity \u00b6 When the Get Entity configuration is selected the service will retrieve a resource from a given ID. Option Description Default Required Entity The name of the resource you want to retrieve. - TRUE Entity ID The unique identifier of the resource that you want to retrieve. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Get Entity method to get data for a particular entity. This method doesn't require any service data setup. The call will return a single entity like the following: { \"data\" : { \"readResponse\" : { \"status\" : { \"statusDetail\" : null , \"isSuccess\" : false }, \"record\" : { \"createdDate\" : \"2020-11-20T19:24:42.000-08:00\" , \"customForm\" : null , \"entity\" : { \"internalId\" : \"4324144\" , \"externalId\" : null , \"type\" : null , \"name\" : \"MacDonald Farms\" }, \"job\" : null , \"currency\" : { \"internalId\" : \"1\" , \"externalId\" : null , \"type\" : null , \"name\" : \"AUD\" }, \"drAccount\" : null , \"fxAccount\" : null , \"tranDate\" : \"2020-11-20T05:00:00.000-08:00\" , \"tranId\" : \"Service-order-ref-123\" , \"entityTaxRegNum\" : null , \"source\" : null , \"createdFrom\" : null , \"orderStatus\" : null , \"nextBill\" : null , \"opportunity\" : null , \"salesRep\" : null , \"contribPct\" : null , \"partner\" : null , \"salesGroup\" : null , \"syncSalesTeams\" : null , \"leadSource\" : null , \"startDate\" : null , \"endDate\" : null , \"otherRefNum\" : \"5434323422\" , \"memo\" : \"Service_order_ref_123\" , \"salesEffectiveDate\" : null , \"excludeCommission\" : null , \"totalCostEstimate\" : 98.98 , \"estGrossProfit\" : 34.33 , \"estGrossProfitPercent\" : 43.44 , \"exchangeRate\" : 1 , \"promoCode\" : null , \"currencyName\" : \"AUD\" , \"discountItem\" : null , \"discountRate\" : null , \"isTaxable\" : null , \"taxItem\" : null , \"taxRate\" : null , \"toBePrinted\" : false , \"toBeEmailed\" : false , \"email\" : \"someone@example.com\" , \"toBeFaxed\" : null , \"fax\" : null , \"messageSel\" : null , \"message\" : null , \"paymentOption\" : null , \"inputAuthCode\" : null , \"inputReferenceCode\" : null , \"checkNumber\" : null , \"paymentCardCsc\" : null , \"paymentProcessingProfile\" : null , \"handlingMode\" : null , \"outputAuthCode\" : null , \"outputReferenceCode\" : null , \"paymentOperation\" : null , \"dynamicDescriptor\" : null , \"billingAddress\" : { \"internalId\" : \"434234232\" , \"country\" : \"Australia\" , \"attention\" : \"Ronald MacDonald\" , \"addressee\" : \"\" , \"addrPhone\" : \"0444444444\" , \"addr1\" : \"123 Sample Street\" , \"addr2\" : null , \"addr3\" : null , \"city\" : \"Sydney\" , \"state\" : \"NSW\" , \"zip\" : \"2000\" , \"override\" : true , \"customFieldList\" : { \"customField\" : [ ] }, \"nullFieldList\" : null }, \"billAddressList\" : null , \"shippingAddress\" : { \"internalId\" : \"434234232\" , \"country\" : \"Australia\" , \"attention\" : \"Ronald MacDonald\" , \"addressee\" : \"\" , \"addrPhone\" : \"0444444444\" , \"addr1\" : \"123 Sample Street\" , \"addr2\" : null , \"addr3\" : null , \"city\" : \"Sydney\" , \"state\" : \"NSW\" , \"zip\" : \"2000\" , \"override\" : true , \"customFieldList\" : { \"customField\" : [ ] }, \"nullFieldList\" : null }, \"shipIsResidential\" : false , \"shipAddressList\" : null , \"fob\" : null , \"shipDate\" : null , \"actualShipDate\" : null , \"shipMethod\" : { \"internalId\" : \"3234\" , \"externalId\" : null , \"type\" : null , \"name\" : \"Express\" }, \"shippingCost\" : 0 , \"shippingTax1Rate\" : 10 , \"isMultiShipTo\" : null , \"shippingTax2Rate\" : null , \"shippingTaxCode\" : { \"internalId\" : \"3\" , \"externalId\" : null , \"type\" : null , \"name\" : \"GST:STD\" }, \"handlingTaxCode\" : null , \"handlingTax1Rate\" : null , \"handlingTax2Rate\" : null , \"handlingCost\" : null , \"trackingNumbers\" : null , \"linkedTrackingNumbers\" : null , \"shipComplete\" : null , \"paymentMethod\" : { \"internalId\" : \"2\" , \"externalId\" : null , \"type\" : null , \"name\" : \"VISA\" }, \"shopperIpAddress\" : null , \"saveOnAuthDecline\" : true , \"canHaveStackable\" : false , \"creditCard\" : null , \"revenueStatus\" : null , \"recognizedRevenue\" : null , \"deferredRevenue\" : null , \"revRecOnRevCommitment\" : null , \"revCommitStatus\" : null , \"ccNumber\" : \"************4444\" , \"ccExpireDate\" : \"2023-02-01T00:00:00.000-08:00\" , \"ccName\" : \"Bob Somebody\" , \"ccStreet\" : \"123 Sample Street\" , \"ccZipCode\" : \"2000\" , \"payPalStatus\" : null , \"creditCardProcessor\" : { \"internalId\" : \"2\" , \"externalId\" : null , \"type\" : null , \"name\" : \"Credit Card\" }, \"payPalTranId\" : null , \"ccApproved\" : null , \"getAuth\" : null , \"authCode\" : \"43453\" , \"ccAvsStreetMatch\" : null , \"ccAvsZipMatch\" : null , \"isRecurringPayment\" : false , \"ccSecurityCodeMatch\" : null , \"altSalesTotal\" : null , \"ignoreAvs\" : null , \"paymentEventResult\" : \"_accept\" , \"paymentEventHoldReason\" : null , \"paymentEventType\" : \"_captureAuthorization\" , \"paymentEventDate\" : \"2016-11-20T23:39:00.000-08:00\" , \"paymentEventUpdatedBy\" : \"somone@example.com\" , \"subTotal\" : 45.33 , \"discountTotal\" : null , \"taxTotal\" : 18.57 , \"altShippingCost\" : 0 , \"altHandlingCost\" : null , \"total\" : 56.44 , \"revRecSchedule\" : null , \"revRecStartDate\" : null , \"revRecEndDate\" : null , \"paypalAuthId\" : null , \"balance\" : null , \"paypalProcess\" : null , \"billingSchedule\" : null , \"ccSecurityCode\" : null , \"threeDStatusCode\" : null , \"class\" : null , \"department\" : null , \"subsidiary\" : { \"internalId\" : \"1\" , \"externalId\" : null , \"type\" : null , \"name\" : \"Example Company\" }, \"intercoTransaction\" : null , \"intercoStatus\" : null , \"debitCardIssueNo\" : null , \"lastModifiedDate\" : \"2021-03-31T16:24:30.000-07:00\" , \"nexus\" : null , \"subsidiaryTaxRegNum\" : null , \"taxRegOverride\" : null , \"taxPointDate\" : null , \"taxDetailsOverride\" : null , \"location\" : null , \"pnRefNum\" : \"54543543\" , \"status\" : \"Billed\" , \"tax2Total\" : null , \"terms\" : null , \"validFrom\" : null , \"vatRegNum\" : null , \"giftCertApplied\" : null , \"oneTime\" : null , \"recurWeekly\" : null , \"recurMonthly\" : null , \"recurQuarterly\" : null , \"recurAnnually\" : null , \"tranIsVsoeBundle\" : null , \"vsoeAutoCalc\" : null , \"syncPartnerTeams\" : null , \"salesTeamList\" : null , \"partnersList\" : null , \"giftCertRedemptionList\" : null , \"promotionsList\" : null , \"itemList\" : null , \"shipGroupList\" : null , \"accountingBookDetailList\" : null , \"taxDetailsList\" : null , \"customFieldList\" : { \"customField\" : [ { \"value\" : false , \"internalId\" : \"543\" , \"scriptId\" : \"custbody5\" } ] }, \"internalId\" : \"4345453\" , \"externalId\" : null , \"nullFieldList\" : null } } }, \"metadata\" : { \"statusCode\" : \"200\" , \"headers\" : [ ] } } Search Entity \u00b6 When the Search Entity configuration is selected the service will retrieve resources from a given set of search criteria. Option Description Default Required Entity The name of the resource you want to retrieve. - TRUE Last Modified Date Search criteria based on the last time a resouce was modified (RFC 3339 (Y-m-d\\TH:i:sP)). - FALSE Limit The maximum number of the resources you want to retrieve at a given time. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Search Entity method to get data for a particular entity. This method doesn't require any service data setup. The call will return an array of enities like the following: { \"data\" : { \"searchResult\" : { \"status\" : { \"statusDetail\" : null , \"isSuccess\" : true }, \"totalRecords\" : 45713 , \"pageSize\" : 1 , \"totalPages\" : 45713 , \"pageIndex\" : 1 , \"searchId\" : \"WEBSERVICES_54352342_54353453453453_a798g76d672\" , \"recordList\" : { \"record\" : [ { \"createdDate\" : \"2020-11-20T19:24:42.000-08:00\" , \"customForm\" : null , \"entity\" : { \"internalId\" : \"4324144\" , \"externalId\" : null , \"type\" : null , \"name\" : \"MacDonald Farms\" }, \"job\" : null , \"currency\" : { \"internalId\" : \"1\" , \"externalId\" : null , \"type\" : null , \"name\" : \"AUD\" }, \"drAccount\" : null , \"fxAccount\" : null , \"tranDate\" : \"2020-11-20T05:00:00.000-08:00\" , \"tranId\" : \"Service-order-ref-123\" , \"entityTaxRegNum\" : null , \"source\" : null , \"createdFrom\" : null , \"orderStatus\" : null , \"nextBill\" : null , \"opportunity\" : null , \"salesRep\" : null , \"contribPct\" : null , \"partner\" : null , \"salesGroup\" : null , \"syncSalesTeams\" : null , \"leadSource\" : null , \"startDate\" : null , \"endDate\" : null , \"otherRefNum\" : \"5434323422\" , \"memo\" : \"Service_order_ref_123\" , \"salesEffectiveDate\" : null , \"excludeCommission\" : null , \"totalCostEstimate\" : 98.98 , \"estGrossProfit\" : 34.33 , \"estGrossProfitPercent\" : 43.44 , \"exchangeRate\" : 1 , \"promoCode\" : null , \"currencyName\" : \"AUD\" , \"discountItem\" : null , \"discountRate\" : null , \"isTaxable\" : null , \"taxItem\" : null , \"taxRate\" : null , \"toBePrinted\" : false , \"toBeEmailed\" : false , \"email\" : \"someone@example.com\" , \"toBeFaxed\" : null , \"fax\" : null , \"messageSel\" : null , \"message\" : null , \"paymentOption\" : null , \"inputAuthCode\" : null , \"inputReferenceCode\" : null , \"checkNumber\" : null , \"paymentCardCsc\" : null , \"paymentProcessingProfile\" : null , \"handlingMode\" : null , \"outputAuthCode\" : null , \"outputReferenceCode\" : null , \"paymentOperation\" : null , \"dynamicDescriptor\" : null , \"billingAddress\" : { \"internalId\" : \"434234232\" , \"country\" : \"Australia\" , \"attention\" : \"Ronald MacDonald\" , \"addressee\" : \"\" , \"addrPhone\" : \"0444444444\" , \"addr1\" : \"123 Sample Street\" , \"addr2\" : null , \"addr3\" : null , \"city\" : \"Sydney\" , \"state\" : \"NSW\" , \"zip\" : \"2000\" , \"override\" : true , \"customFieldList\" : { \"customField\" : [ ] }, \"nullFieldList\" : null }, \"billAddressList\" : null , \"shippingAddress\" : { \"internalId\" : \"434234232\" , \"country\" : \"Australia\" , \"attention\" : \"Ronald MacDonald\" , \"addressee\" : \"\" , \"addrPhone\" : \"0444444444\" , \"addr1\" : \"123 Sample Street\" , \"addr2\" : null , \"addr3\" : null , \"city\" : \"Sydney\" , \"state\" : \"NSW\" , \"zip\" : \"2000\" , \"override\" : true , \"customFieldList\" : { \"customField\" : [ ] }, \"nullFieldList\" : null }, \"shipIsResidential\" : false , \"shipAddressList\" : null , \"fob\" : null , \"shipDate\" : null , \"actualShipDate\" : null , \"shipMethod\" : { \"internalId\" : \"3234\" , \"externalId\" : null , \"type\" : null , \"name\" : \"Express\" }, \"shippingCost\" : 0 , \"shippingTax1Rate\" : 10 , \"isMultiShipTo\" : null , \"shippingTax2Rate\" : null , \"shippingTaxCode\" : { \"internalId\" : \"3\" , \"externalId\" : null , \"type\" : null , \"name\" : \"GST:STD\" }, \"handlingTaxCode\" : null , \"handlingTax1Rate\" : null , \"handlingTax2Rate\" : null , \"handlingCost\" : null , \"trackingNumbers\" : null , \"linkedTrackingNumbers\" : null , \"shipComplete\" : null , \"paymentMethod\" : { \"internalId\" : \"2\" , \"externalId\" : null , \"type\" : null , \"name\" : \"VISA\" }, \"shopperIpAddress\" : null , \"saveOnAuthDecline\" : true , \"canHaveStackable\" : false , \"creditCard\" : null , \"revenueStatus\" : null , \"recognizedRevenue\" : null , \"deferredRevenue\" : null , \"revRecOnRevCommitment\" : null , \"revCommitStatus\" : null , \"ccNumber\" : \"************4444\" , \"ccExpireDate\" : \"2023-02-01T00:00:00.000-08:00\" , \"ccName\" : \"Bob Somebody\" , \"ccStreet\" : \"123 Sample Street\" , \"ccZipCode\" : \"2000\" , \"payPalStatus\" : null , \"creditCardProcessor\" : { \"internalId\" : \"2\" , \"externalId\" : null , \"type\" : null , \"name\" : \"Credit Card\" }, \"payPalTranId\" : null , \"ccApproved\" : null , \"getAuth\" : null , \"authCode\" : \"43453\" , \"ccAvsStreetMatch\" : null , \"ccAvsZipMatch\" : null , \"isRecurringPayment\" : false , \"ccSecurityCodeMatch\" : null , \"altSalesTotal\" : null , \"ignoreAvs\" : null , \"paymentEventResult\" : \"_accept\" , \"paymentEventHoldReason\" : null , \"paymentEventType\" : \"_captureAuthorization\" , \"paymentEventDate\" : \"2016-11-20T23:39:00.000-08:00\" , \"paymentEventUpdatedBy\" : \"somone@example.com\" , \"subTotal\" : 45.33 , \"discountTotal\" : null , \"taxTotal\" : 18.57 , \"altShippingCost\" : 0 , \"altHandlingCost\" : null , \"total\" : 56.44 , \"revRecSchedule\" : null , \"revRecStartDate\" : null , \"revRecEndDate\" : null , \"paypalAuthId\" : null , \"balance\" : null , \"paypalProcess\" : null , \"billingSchedule\" : null , \"ccSecurityCode\" : null , \"threeDStatusCode\" : null , \"class\" : null , \"department\" : null , \"subsidiary\" : { \"internalId\" : \"1\" , \"externalId\" : null , \"type\" : null , \"name\" : \"Example Company\" }, \"intercoTransaction\" : null , \"intercoStatus\" : null , \"debitCardIssueNo\" : null , \"lastModifiedDate\" : \"2021-03-31T16:24:30.000-07:00\" , \"nexus\" : null , \"subsidiaryTaxRegNum\" : null , \"taxRegOverride\" : null , \"taxPointDate\" : null , \"taxDetailsOverride\" : null , \"location\" : null , \"pnRefNum\" : \"54543543\" , \"status\" : \"Billed\" , \"tax2Total\" : null , \"terms\" : null , \"validFrom\" : null , \"vatRegNum\" : null , \"giftCertApplied\" : null , \"oneTime\" : null , \"recurWeekly\" : null , \"recurMonthly\" : null , \"recurQuarterly\" : null , \"recurAnnually\" : null , \"tranIsVsoeBundle\" : null , \"vsoeAutoCalc\" : null , \"syncPartnerTeams\" : null , \"salesTeamList\" : null , \"partnersList\" : null , \"giftCertRedemptionList\" : null , \"promotionsList\" : null , \"itemList\" : null , \"shipGroupList\" : null , \"accountingBookDetailList\" : null , \"taxDetailsList\" : null , \"customFieldList\" : { \"customField\" : [ { \"value\" : false , \"internalId\" : \"543\" , \"scriptId\" : \"custbody5\" } ] }, \"internalId\" : \"4345453\" , \"externalId\" : null , \"nullFieldList\" : null } ] }, \"searchRowList\" : null } }, \"metadata\" : { \"statusCode\" : \"200\" , \"headers\" : [ ] } }","title":"Netsuite SOAP Service"},{"location":"reference/services/netsuite-soap-service/#netsuite-authorization","text":"This service uses the Token Based Authentication (TBA) approach outlined in the Netsuite Help Center . The following authorization configuration needs to filled out in order to connect with Netsuite: Option Description Default Required Company URL The company endpoint for your Netsuite instance (i.e. https://****.suitetalk.api.netsuite.com). - TRUE Account ID Your account ID. - TRUE Consumer Key A consumer key for your Netsuite instance. - TRUE Consumer Secret A consumer secret for your Netsuite instance. - TRUE Token ID A token ID for your Netsuite instance. - TRUE Token Secret A token secret for your Netsuite instance. - TRUE The following example configuration shows you how to configure the authorziation for Netsuite:","title":"Netsuite Authorization"},{"location":"reference/services/netsuite-soap-service/#get-entity","text":"When the Get Entity configuration is selected the service will retrieve a resource from a given ID. Option Description Default Required Entity The name of the resource you want to retrieve. - TRUE Entity ID The unique identifier of the resource that you want to retrieve. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Get Entity method to get data for a particular entity. This method doesn't require any service data setup. The call will return a single entity like the following: { \"data\" : { \"readResponse\" : { \"status\" : { \"statusDetail\" : null , \"isSuccess\" : false }, \"record\" : { \"createdDate\" : \"2020-11-20T19:24:42.000-08:00\" , \"customForm\" : null , \"entity\" : { \"internalId\" : \"4324144\" , \"externalId\" : null , \"type\" : null , \"name\" : \"MacDonald Farms\" }, \"job\" : null , \"currency\" : { \"internalId\" : \"1\" , \"externalId\" : null , \"type\" : null , \"name\" : \"AUD\" }, \"drAccount\" : null , \"fxAccount\" : null , \"tranDate\" : \"2020-11-20T05:00:00.000-08:00\" , \"tranId\" : \"Service-order-ref-123\" , \"entityTaxRegNum\" : null , \"source\" : null , \"createdFrom\" : null , \"orderStatus\" : null , \"nextBill\" : null , \"opportunity\" : null , \"salesRep\" : null , \"contribPct\" : null , \"partner\" : null , \"salesGroup\" : null , \"syncSalesTeams\" : null , \"leadSource\" : null , \"startDate\" : null , \"endDate\" : null , \"otherRefNum\" : \"5434323422\" , \"memo\" : \"Service_order_ref_123\" , \"salesEffectiveDate\" : null , \"excludeCommission\" : null , \"totalCostEstimate\" : 98.98 , \"estGrossProfit\" : 34.33 , \"estGrossProfitPercent\" : 43.44 , \"exchangeRate\" : 1 , \"promoCode\" : null , \"currencyName\" : \"AUD\" , \"discountItem\" : null , \"discountRate\" : null , \"isTaxable\" : null , \"taxItem\" : null , \"taxRate\" : null , \"toBePrinted\" : false , \"toBeEmailed\" : false , \"email\" : \"someone@example.com\" , \"toBeFaxed\" : null , \"fax\" : null , \"messageSel\" : null , \"message\" : null , \"paymentOption\" : null , \"inputAuthCode\" : null , \"inputReferenceCode\" : null , \"checkNumber\" : null , \"paymentCardCsc\" : null , \"paymentProcessingProfile\" : null , \"handlingMode\" : null , \"outputAuthCode\" : null , \"outputReferenceCode\" : null , \"paymentOperation\" : null , \"dynamicDescriptor\" : null , \"billingAddress\" : { \"internalId\" : \"434234232\" , \"country\" : \"Australia\" , \"attention\" : \"Ronald MacDonald\" , \"addressee\" : \"\" , \"addrPhone\" : \"0444444444\" , \"addr1\" : \"123 Sample Street\" , \"addr2\" : null , \"addr3\" : null , \"city\" : \"Sydney\" , \"state\" : \"NSW\" , \"zip\" : \"2000\" , \"override\" : true , \"customFieldList\" : { \"customField\" : [ ] }, \"nullFieldList\" : null }, \"billAddressList\" : null , \"shippingAddress\" : { \"internalId\" : \"434234232\" , \"country\" : \"Australia\" , \"attention\" : \"Ronald MacDonald\" , \"addressee\" : \"\" , \"addrPhone\" : \"0444444444\" , \"addr1\" : \"123 Sample Street\" , \"addr2\" : null , \"addr3\" : null , \"city\" : \"Sydney\" , \"state\" : \"NSW\" , \"zip\" : \"2000\" , \"override\" : true , \"customFieldList\" : { \"customField\" : [ ] }, \"nullFieldList\" : null }, \"shipIsResidential\" : false , \"shipAddressList\" : null , \"fob\" : null , \"shipDate\" : null , \"actualShipDate\" : null , \"shipMethod\" : { \"internalId\" : \"3234\" , \"externalId\" : null , \"type\" : null , \"name\" : \"Express\" }, \"shippingCost\" : 0 , \"shippingTax1Rate\" : 10 , \"isMultiShipTo\" : null , \"shippingTax2Rate\" : null , \"shippingTaxCode\" : { \"internalId\" : \"3\" , \"externalId\" : null , \"type\" : null , \"name\" : \"GST:STD\" }, \"handlingTaxCode\" : null , \"handlingTax1Rate\" : null , \"handlingTax2Rate\" : null , \"handlingCost\" : null , \"trackingNumbers\" : null , \"linkedTrackingNumbers\" : null , \"shipComplete\" : null , \"paymentMethod\" : { \"internalId\" : \"2\" , \"externalId\" : null , \"type\" : null , \"name\" : \"VISA\" }, \"shopperIpAddress\" : null , \"saveOnAuthDecline\" : true , \"canHaveStackable\" : false , \"creditCard\" : null , \"revenueStatus\" : null , \"recognizedRevenue\" : null , \"deferredRevenue\" : null , \"revRecOnRevCommitment\" : null , \"revCommitStatus\" : null , \"ccNumber\" : \"************4444\" , \"ccExpireDate\" : \"2023-02-01T00:00:00.000-08:00\" , \"ccName\" : \"Bob Somebody\" , \"ccStreet\" : \"123 Sample Street\" , \"ccZipCode\" : \"2000\" , \"payPalStatus\" : null , \"creditCardProcessor\" : { \"internalId\" : \"2\" , \"externalId\" : null , \"type\" : null , \"name\" : \"Credit Card\" }, \"payPalTranId\" : null , \"ccApproved\" : null , \"getAuth\" : null , \"authCode\" : \"43453\" , \"ccAvsStreetMatch\" : null , \"ccAvsZipMatch\" : null , \"isRecurringPayment\" : false , \"ccSecurityCodeMatch\" : null , \"altSalesTotal\" : null , \"ignoreAvs\" : null , \"paymentEventResult\" : \"_accept\" , \"paymentEventHoldReason\" : null , \"paymentEventType\" : \"_captureAuthorization\" , \"paymentEventDate\" : \"2016-11-20T23:39:00.000-08:00\" , \"paymentEventUpdatedBy\" : \"somone@example.com\" , \"subTotal\" : 45.33 , \"discountTotal\" : null , \"taxTotal\" : 18.57 , \"altShippingCost\" : 0 , \"altHandlingCost\" : null , \"total\" : 56.44 , \"revRecSchedule\" : null , \"revRecStartDate\" : null , \"revRecEndDate\" : null , \"paypalAuthId\" : null , \"balance\" : null , \"paypalProcess\" : null , \"billingSchedule\" : null , \"ccSecurityCode\" : null , \"threeDStatusCode\" : null , \"class\" : null , \"department\" : null , \"subsidiary\" : { \"internalId\" : \"1\" , \"externalId\" : null , \"type\" : null , \"name\" : \"Example Company\" }, \"intercoTransaction\" : null , \"intercoStatus\" : null , \"debitCardIssueNo\" : null , \"lastModifiedDate\" : \"2021-03-31T16:24:30.000-07:00\" , \"nexus\" : null , \"subsidiaryTaxRegNum\" : null , \"taxRegOverride\" : null , \"taxPointDate\" : null , \"taxDetailsOverride\" : null , \"location\" : null , \"pnRefNum\" : \"54543543\" , \"status\" : \"Billed\" , \"tax2Total\" : null , \"terms\" : null , \"validFrom\" : null , \"vatRegNum\" : null , \"giftCertApplied\" : null , \"oneTime\" : null , \"recurWeekly\" : null , \"recurMonthly\" : null , \"recurQuarterly\" : null , \"recurAnnually\" : null , \"tranIsVsoeBundle\" : null , \"vsoeAutoCalc\" : null , \"syncPartnerTeams\" : null , \"salesTeamList\" : null , \"partnersList\" : null , \"giftCertRedemptionList\" : null , \"promotionsList\" : null , \"itemList\" : null , \"shipGroupList\" : null , \"accountingBookDetailList\" : null , \"taxDetailsList\" : null , \"customFieldList\" : { \"customField\" : [ { \"value\" : false , \"internalId\" : \"543\" , \"scriptId\" : \"custbody5\" } ] }, \"internalId\" : \"4345453\" , \"externalId\" : null , \"nullFieldList\" : null } } }, \"metadata\" : { \"statusCode\" : \"200\" , \"headers\" : [ ] } }","title":"Get Entity"},{"location":"reference/services/netsuite-soap-service/#search-entity","text":"When the Search Entity configuration is selected the service will retrieve resources from a given set of search criteria. Option Description Default Required Entity The name of the resource you want to retrieve. - TRUE Last Modified Date Search criteria based on the last time a resouce was modified (RFC 3339 (Y-m-d\\TH:i:sP)). - FALSE Limit The maximum number of the resources you want to retrieve at a given time. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Search Entity method to get data for a particular entity. This method doesn't require any service data setup. The call will return an array of enities like the following: { \"data\" : { \"searchResult\" : { \"status\" : { \"statusDetail\" : null , \"isSuccess\" : true }, \"totalRecords\" : 45713 , \"pageSize\" : 1 , \"totalPages\" : 45713 , \"pageIndex\" : 1 , \"searchId\" : \"WEBSERVICES_54352342_54353453453453_a798g76d672\" , \"recordList\" : { \"record\" : [ { \"createdDate\" : \"2020-11-20T19:24:42.000-08:00\" , \"customForm\" : null , \"entity\" : { \"internalId\" : \"4324144\" , \"externalId\" : null , \"type\" : null , \"name\" : \"MacDonald Farms\" }, \"job\" : null , \"currency\" : { \"internalId\" : \"1\" , \"externalId\" : null , \"type\" : null , \"name\" : \"AUD\" }, \"drAccount\" : null , \"fxAccount\" : null , \"tranDate\" : \"2020-11-20T05:00:00.000-08:00\" , \"tranId\" : \"Service-order-ref-123\" , \"entityTaxRegNum\" : null , \"source\" : null , \"createdFrom\" : null , \"orderStatus\" : null , \"nextBill\" : null , \"opportunity\" : null , \"salesRep\" : null , \"contribPct\" : null , \"partner\" : null , \"salesGroup\" : null , \"syncSalesTeams\" : null , \"leadSource\" : null , \"startDate\" : null , \"endDate\" : null , \"otherRefNum\" : \"5434323422\" , \"memo\" : \"Service_order_ref_123\" , \"salesEffectiveDate\" : null , \"excludeCommission\" : null , \"totalCostEstimate\" : 98.98 , \"estGrossProfit\" : 34.33 , \"estGrossProfitPercent\" : 43.44 , \"exchangeRate\" : 1 , \"promoCode\" : null , \"currencyName\" : \"AUD\" , \"discountItem\" : null , \"discountRate\" : null , \"isTaxable\" : null , \"taxItem\" : null , \"taxRate\" : null , \"toBePrinted\" : false , \"toBeEmailed\" : false , \"email\" : \"someone@example.com\" , \"toBeFaxed\" : null , \"fax\" : null , \"messageSel\" : null , \"message\" : null , \"paymentOption\" : null , \"inputAuthCode\" : null , \"inputReferenceCode\" : null , \"checkNumber\" : null , \"paymentCardCsc\" : null , \"paymentProcessingProfile\" : null , \"handlingMode\" : null , \"outputAuthCode\" : null , \"outputReferenceCode\" : null , \"paymentOperation\" : null , \"dynamicDescriptor\" : null , \"billingAddress\" : { \"internalId\" : \"434234232\" , \"country\" : \"Australia\" , \"attention\" : \"Ronald MacDonald\" , \"addressee\" : \"\" , \"addrPhone\" : \"0444444444\" , \"addr1\" : \"123 Sample Street\" , \"addr2\" : null , \"addr3\" : null , \"city\" : \"Sydney\" , \"state\" : \"NSW\" , \"zip\" : \"2000\" , \"override\" : true , \"customFieldList\" : { \"customField\" : [ ] }, \"nullFieldList\" : null }, \"billAddressList\" : null , \"shippingAddress\" : { \"internalId\" : \"434234232\" , \"country\" : \"Australia\" , \"attention\" : \"Ronald MacDonald\" , \"addressee\" : \"\" , \"addrPhone\" : \"0444444444\" , \"addr1\" : \"123 Sample Street\" , \"addr2\" : null , \"addr3\" : null , \"city\" : \"Sydney\" , \"state\" : \"NSW\" , \"zip\" : \"2000\" , \"override\" : true , \"customFieldList\" : { \"customField\" : [ ] }, \"nullFieldList\" : null }, \"shipIsResidential\" : false , \"shipAddressList\" : null , \"fob\" : null , \"shipDate\" : null , \"actualShipDate\" : null , \"shipMethod\" : { \"internalId\" : \"3234\" , \"externalId\" : null , \"type\" : null , \"name\" : \"Express\" }, \"shippingCost\" : 0 , \"shippingTax1Rate\" : 10 , \"isMultiShipTo\" : null , \"shippingTax2Rate\" : null , \"shippingTaxCode\" : { \"internalId\" : \"3\" , \"externalId\" : null , \"type\" : null , \"name\" : \"GST:STD\" }, \"handlingTaxCode\" : null , \"handlingTax1Rate\" : null , \"handlingTax2Rate\" : null , \"handlingCost\" : null , \"trackingNumbers\" : null , \"linkedTrackingNumbers\" : null , \"shipComplete\" : null , \"paymentMethod\" : { \"internalId\" : \"2\" , \"externalId\" : null , \"type\" : null , \"name\" : \"VISA\" }, \"shopperIpAddress\" : null , \"saveOnAuthDecline\" : true , \"canHaveStackable\" : false , \"creditCard\" : null , \"revenueStatus\" : null , \"recognizedRevenue\" : null , \"deferredRevenue\" : null , \"revRecOnRevCommitment\" : null , \"revCommitStatus\" : null , \"ccNumber\" : \"************4444\" , \"ccExpireDate\" : \"2023-02-01T00:00:00.000-08:00\" , \"ccName\" : \"Bob Somebody\" , \"ccStreet\" : \"123 Sample Street\" , \"ccZipCode\" : \"2000\" , \"payPalStatus\" : null , \"creditCardProcessor\" : { \"internalId\" : \"2\" , \"externalId\" : null , \"type\" : null , \"name\" : \"Credit Card\" }, \"payPalTranId\" : null , \"ccApproved\" : null , \"getAuth\" : null , \"authCode\" : \"43453\" , \"ccAvsStreetMatch\" : null , \"ccAvsZipMatch\" : null , \"isRecurringPayment\" : false , \"ccSecurityCodeMatch\" : null , \"altSalesTotal\" : null , \"ignoreAvs\" : null , \"paymentEventResult\" : \"_accept\" , \"paymentEventHoldReason\" : null , \"paymentEventType\" : \"_captureAuthorization\" , \"paymentEventDate\" : \"2016-11-20T23:39:00.000-08:00\" , \"paymentEventUpdatedBy\" : \"somone@example.com\" , \"subTotal\" : 45.33 , \"discountTotal\" : null , \"taxTotal\" : 18.57 , \"altShippingCost\" : 0 , \"altHandlingCost\" : null , \"total\" : 56.44 , \"revRecSchedule\" : null , \"revRecStartDate\" : null , \"revRecEndDate\" : null , \"paypalAuthId\" : null , \"balance\" : null , \"paypalProcess\" : null , \"billingSchedule\" : null , \"ccSecurityCode\" : null , \"threeDStatusCode\" : null , \"class\" : null , \"department\" : null , \"subsidiary\" : { \"internalId\" : \"1\" , \"externalId\" : null , \"type\" : null , \"name\" : \"Example Company\" }, \"intercoTransaction\" : null , \"intercoStatus\" : null , \"debitCardIssueNo\" : null , \"lastModifiedDate\" : \"2021-03-31T16:24:30.000-07:00\" , \"nexus\" : null , \"subsidiaryTaxRegNum\" : null , \"taxRegOverride\" : null , \"taxPointDate\" : null , \"taxDetailsOverride\" : null , \"location\" : null , \"pnRefNum\" : \"54543543\" , \"status\" : \"Billed\" , \"tax2Total\" : null , \"terms\" : null , \"validFrom\" : null , \"vatRegNum\" : null , \"giftCertApplied\" : null , \"oneTime\" : null , \"recurWeekly\" : null , \"recurMonthly\" : null , \"recurQuarterly\" : null , \"recurAnnually\" : null , \"tranIsVsoeBundle\" : null , \"vsoeAutoCalc\" : null , \"syncPartnerTeams\" : null , \"salesTeamList\" : null , \"partnersList\" : null , \"giftCertRedemptionList\" : null , \"promotionsList\" : null , \"itemList\" : null , \"shipGroupList\" : null , \"accountingBookDetailList\" : null , \"taxDetailsList\" : null , \"customFieldList\" : { \"customField\" : [ { \"value\" : false , \"internalId\" : \"543\" , \"scriptId\" : \"custbody5\" } ] }, \"internalId\" : \"4345453\" , \"externalId\" : null , \"nullFieldList\" : null } ] }, \"searchRowList\" : null } }, \"metadata\" : { \"statusCode\" : \"200\" , \"headers\" : [ ] } }","title":"Search Entity"},{"location":"reference/services/rest-service/","text":"Before you begin In order to use the features in this section you need to have an active Spojit account. If you don't have an account you can checkout out the pricing and register here . If you already have an account you can login here . This is a simple RESTful service that sends HTTP requests using GET, POST, PUT and DELETE methods in JSON format. Important This service has a built in JSON parser and will not work with other formats. Requests will automatically contain Content-Type: application/json and Accept: application/json headers. GET \u00b6 When the GET configuration is selected the service will retrieve a resource from a given URL. Option Description Default Required Method Select \"get\" to retrieve a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to get data from a resource. It also contains an example header for an OAuth authorization bearer token. The GET method doesn't require any service data setup. In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 200 } } POST \u00b6 When the POST configuration is selected the service will create a resource at a given location. Option Description Default Required Method Select \"post\" to create a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to create a resource. The schema can be whatever the resource excepts and for this example we are going to create an OBJECT schema with the specified fields: Given the following source data from another service: { \"data\" : { \"user_id\" : 1 , \"my_id\" : 1 , \"the_title\" : \"delectus aut autem\" , \"finished\" : false } } We can map the applicable fields with the schema object: In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 201 } } PUT \u00b6 When the PUT configuration is selected the service will update a resource at a given location. Option Description Default Required Method Select \"put\" to update a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to update a resource. The schema can be whatever the resource excepts and for this example we are going to create an OBJECT schema with the specified fields: Given the following source data from another service: { \"data\" : { \"user_id\" : 1 , \"my_id\" : 1 , \"the_title\" : \"delectus aut autem\" , \"finished\" : false } } We can map the applicable fields with the schema object: In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 200 } } DELETE \u00b6 When the DELETE configuration is selected the service will delete a resource from a given URL. Option Description Default Required Method Select \"delete\" to delete a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to delete a resource: The DELETE method doesn't require any service data setup. Many services will not return any data after a resource is deleted but if data is returned it could possiblly look like this: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 204 } }","title":"REST Service"},{"location":"reference/services/rest-service/#get","text":"When the GET configuration is selected the service will retrieve a resource from a given URL. Option Description Default Required Method Select \"get\" to retrieve a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to get data from a resource. It also contains an example header for an OAuth authorization bearer token. The GET method doesn't require any service data setup. In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 200 } }","title":"GET"},{"location":"reference/services/rest-service/#post","text":"When the POST configuration is selected the service will create a resource at a given location. Option Description Default Required Method Select \"post\" to create a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to create a resource. The schema can be whatever the resource excepts and for this example we are going to create an OBJECT schema with the specified fields: Given the following source data from another service: { \"data\" : { \"user_id\" : 1 , \"my_id\" : 1 , \"the_title\" : \"delectus aut autem\" , \"finished\" : false } } We can map the applicable fields with the schema object: In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 201 } }","title":"POST"},{"location":"reference/services/rest-service/#put","text":"When the PUT configuration is selected the service will update a resource at a given location. Option Description Default Required Method Select \"put\" to update a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to update a resource. The schema can be whatever the resource excepts and for this example we are going to create an OBJECT schema with the specified fields: Given the following source data from another service: { \"data\" : { \"user_id\" : 1 , \"my_id\" : 1 , \"the_title\" : \"delectus aut autem\" , \"finished\" : false } } We can map the applicable fields with the schema object: In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 200 } }","title":"PUT"},{"location":"reference/services/rest-service/#delete","text":"When the DELETE configuration is selected the service will delete a resource from a given URL. Option Description Default Required Method Select \"delete\" to delete a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to delete a resource: The DELETE method doesn't require any service data setup. Many services will not return any data after a resource is deleted but if data is returned it could possiblly look like this: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 204 } }","title":"DELETE"},{"location":"reference/services/revel-service/","text":"Before you begin In order to use the features in this section you need to have an active Spojit account. If you don't have an account you can checkout out the pricing and register here . If you already have an account you can login here . Revel\u2019s all-in-one cloud based POS is specifically designed for the unique demands of restaurants and bars. This service can facilitate the bilateral transfer of resources within the Revel Systems RESTful web service. Tip Full documentation of Revel Systems resources and configuration is available at Revel Systems API Documentation . Revel Systems Authorization \u00b6 The following authorization configuration needs to filled out in order to connect with Revel Systems: Option Description Default Required Subdomain The subdomain of your Revel instance (i.e. https://****.revelup.com). - TRUE API Key A api key for your Revel instance. - TRUE API Secret A api secret for your Revel instance. - TRUE The following example configuration shows you how to configure the authorziation for Revel: Important This service uses the current version of the Revel Systems API and can either use the resources or enterprise route. Please add the paths accordingly: Correct Incorrect /resources/Customer/ /Customer/ /enterprise/User/ /User/ Important This service has a built in JSON parser and will automatically convert to the proper format. Requests will automatically contain required headers and authorization configuration so they do not need to be added. The following (below) is a general guide on how to use the methods for this service. The examples use the JSONPlaceholder fake online REST API. Please refer to the system documentation above for full path and schema information. GET \u00b6 When the GET configuration is selected the service will retrieve a resource from a given URL. Option Description Default Required Method Select \"get\" to retrieve a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to get data from a resource. It also contains an example header for an OAuth authorization bearer token. The GET method doesn't require any service data setup. In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 200 } } POST \u00b6 When the POST configuration is selected the service will create a resource at a given location. Option Description Default Required Method Select \"post\" to create a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to create a resource. The schema can be whatever the resource excepts and for this example we are going to create an OBJECT schema with the specified fields: Given the following source data from another service: { \"data\" : { \"user_id\" : 1 , \"my_id\" : 1 , \"the_title\" : \"delectus aut autem\" , \"finished\" : false } } We can map the applicable fields with the schema object: In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 201 } } PUT \u00b6 When the PUT configuration is selected the service will update a resource at a given location. Option Description Default Required Method Select \"put\" to update a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to update a resource. The schema can be whatever the resource excepts and for this example we are going to create an OBJECT schema with the specified fields: Given the following source data from another service: { \"data\" : { \"user_id\" : 1 , \"my_id\" : 1 , \"the_title\" : \"delectus aut autem\" , \"finished\" : false } } We can map the applicable fields with the schema object: In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 200 } } DELETE \u00b6 When the DELETE configuration is selected the service will delete a resource from a given URL. Option Description Default Required Method Select \"delete\" to delete a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to delete a resource: The DELETE method doesn't require any service data setup. Many services will not return any data after a resource is deleted but if data is returned it could possiblly look like this: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 204 } }","title":"Revel Systems"},{"location":"reference/services/revel-service/#revel-systems-authorization","text":"The following authorization configuration needs to filled out in order to connect with Revel Systems: Option Description Default Required Subdomain The subdomain of your Revel instance (i.e. https://****.revelup.com). - TRUE API Key A api key for your Revel instance. - TRUE API Secret A api secret for your Revel instance. - TRUE The following example configuration shows you how to configure the authorziation for Revel: Important This service uses the current version of the Revel Systems API and can either use the resources or enterprise route. Please add the paths accordingly: Correct Incorrect /resources/Customer/ /Customer/ /enterprise/User/ /User/ Important This service has a built in JSON parser and will automatically convert to the proper format. Requests will automatically contain required headers and authorization configuration so they do not need to be added. The following (below) is a general guide on how to use the methods for this service. The examples use the JSONPlaceholder fake online REST API. Please refer to the system documentation above for full path and schema information.","title":"Revel Systems Authorization"},{"location":"reference/services/revel-service/#get","text":"When the GET configuration is selected the service will retrieve a resource from a given URL. Option Description Default Required Method Select \"get\" to retrieve a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to get data from a resource. It also contains an example header for an OAuth authorization bearer token. The GET method doesn't require any service data setup. In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 200 } }","title":"GET"},{"location":"reference/services/revel-service/#post","text":"When the POST configuration is selected the service will create a resource at a given location. Option Description Default Required Method Select \"post\" to create a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to create a resource. The schema can be whatever the resource excepts and for this example we are going to create an OBJECT schema with the specified fields: Given the following source data from another service: { \"data\" : { \"user_id\" : 1 , \"my_id\" : 1 , \"the_title\" : \"delectus aut autem\" , \"finished\" : false } } We can map the applicable fields with the schema object: In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 201 } }","title":"POST"},{"location":"reference/services/revel-service/#put","text":"When the PUT configuration is selected the service will update a resource at a given location. Option Description Default Required Method Select \"put\" to update a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to update a resource. The schema can be whatever the resource excepts and for this example we are going to create an OBJECT schema with the specified fields: Given the following source data from another service: { \"data\" : { \"user_id\" : 1 , \"my_id\" : 1 , \"the_title\" : \"delectus aut autem\" , \"finished\" : false } } We can map the applicable fields with the schema object: In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 200 } }","title":"PUT"},{"location":"reference/services/revel-service/#delete","text":"When the DELETE configuration is selected the service will delete a resource from a given URL. Option Description Default Required Method Select \"delete\" to delete a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to delete a resource: The DELETE method doesn't require any service data setup. Many services will not return any data after a resource is deleted but if data is returned it could possiblly look like this: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 204 } }","title":"DELETE"},{"location":"reference/services/sftp-service/","text":"Before you begin In order to use the features in this section you need to have an active Spojit account. If you don't have an account you can checkout out the pricing and register here . If you already have an account you can login here . This service can facilitate the transfer of computer files between a client and server via the Secure File Transfer Protocol (SFTP). Authorization \u00b6 The following authorization configuration needs to filled out in order to connect to the SFTP server: Option Description Default Required Host The address of the FTP server (i.e. ftp.dlptest.com). - TRUE Port The port of the SFTP server. 22 TRUE Username The username to log in to the SFTP server. - TRUE Password The password to log in to the SFTP server. - TRUE The following example configuration shows you how to configure the test SFTP server at Test.Rebex.Net (this server only allows files to be downloaded). Important The host address does not require the protocol as it will default to SFTP. Creating a file \u00b6 Creating (or writing) a file will send the raw data output from another service(s) to a location. Option Description Default Required Method Select \"write\" to transfer a file. - TRUE Path The location to write the file to (including the filename). - TRUE Raw Data The raw data of the file that will be sent. - TRUE Important The path will always require the filename at the end of it (i.e '/path/to/file.txt'). Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure a file system service to transfer a file to a location. This service doesn't require any service data setup. This service will not provide any output data. Updating a file \u00b6 Updating a file will send the raw data output from another service(s) to a location if it exists. Option Description Default Required Method Select \"update\" to update a file. - TRUE Path The location to update the file to (including the filename). - TRUE Raw Data The raw data of the file that will be sent. - TRUE Tip This option will only update the file it if already exists on the server. If there is a possibility that the file will not exist use the Upsert (PUT) option instead. Important The path will always require the filename at the end of it (i.e '/path/to/file.txt'). Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure a file system service to update a file. This service doesn't require any service data setup. This service will not provide any output data. Upserting a file \u00b6 Upserting (or putting) a file will send the raw data output from another service(s) to a location. If it exists it will be overwritten and if it does not exist it will be created. Option Description Default Required Method Select \"put\" to upsert a file. - TRUE Path The location to upsert the file to (including the filename). - TRUE Raw Data The raw data of the file that will be sent. - TRUE Tip This option will create a file if it does not exist and update it if it already exists. Important The path will always require the filename at the end of it (i.e '/path/to/file.txt'). Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure a file system service to upsert a file. This service doesn't require any service data setup. This service will not provide any output data. Downloading a file \u00b6 Downloading (or reading) a file will transer the raw data from the location to be used as output for other service(s). Option Description Default Required Method Select \"read\" to download a file. - TRUE Path The location of the file to download (including the filename). - TRUE Important The path will always require the filename at the end of it (i.e '/path/to/file.txt'). Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure a file system service to read a file. This service doesn't require any service data setup. This service will produce the following raw data if the file transfered successfully: { \"data\" : \"ID,Job\\n1,Scuba Diver\\n2,Plumber\\n\" , \"metadata\" : {} } Deleting a file \u00b6 Deleting a file will remove a file from a location if it exists. Option Description Default Required Method Select \"delete\" to remove a file. - TRUE Path The location of the file to delete (including the filename). - TRUE Important The path will always require the filename at the end of it (i.e '/path/to/file.txt'). Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure a file system service to delete a file. This service doesn't require any service data setup. This service will not provide any output data. Check if a file or directory exists \u00b6 This option will check to see if a file exists at a given location. Option Description Default Required Method Select \"has\" to check if it exists. - TRUE Path The location to check if it exists. - TRUE Tip This method can check if directories exist as well. Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure a file system service to delete a file. This service doesn't require any service data setup. This service will produce the following boolean data ( true if it exists, false if it does not exist): { \"data\" : true , \"metadata\" : {} } Get list of files and directories \u00b6 This option will get a list of files and folders in a specified directory. Option Description Default Required Method Select \"list\" to get a list of files. - TRUE Path The location to get the list from. - TRUE Recursive Whether is it recursive or not. FALSE FALSE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure a file system service to retrieve a list of files and directories: This service doesn't require any service data setup. This service will produce the following array of files and directories: { \"data\" : [ { \"type\" : \"file\" , \"path\" : \"357a3948-e3ad-4cb5-856b-1cde09c37b55.txt\" , \"visibility\" : \"public\" , \"size\" : 16 , \"dirname\" : \"\" , \"basename\" : \"357a3948-e3ad-4cb5-856b-1cde09c37b55.txt\" , \"extension\" : \"txt\" , \"filename\" : \"357a3948-e3ad-4cb5-856b-1cde09c37b55\" }, { \"type\" : \"file\" , \"path\" : \"59430d5e-ce73-4691-9fd7-705ab97cd792.txt\" , \"visibility\" : \"public\" , \"size\" : 16 , \"dirname\" : \"\" , \"basename\" : \"59430d5e-ce73-4691-9fd7-705ab97cd792.txt\" , \"extension\" : \"txt\" , \"filename\" : \"59430d5e-ce73-4691-9fd7-705ab97cd792\" }, { \"type\" : \"file\" , \"path\" : \"dea44f29-c9e3-441b-b02c-0d923112698d.txt\" , \"visibility\" : \"public\" , \"size\" : 16 , \"dirname\" : \"\" , \"basename\" : \"dea44f29-c9e3-441b-b02c-0d923112698d.txt\" , \"extension\" : \"txt\" , \"filename\" : \"dea44f29-c9e3-441b-b02c-0d923112698d\" }, { \"type\" : \"dir\" , \"path\" : \"Testing\" , \"dirname\" : \"\" , \"basename\" : \"Testing\" , \"filename\" : \"Testing\" } ], \"metadata\" : [] } Creating a directory \u00b6 Create a directory will create a directory in a location if it doesn't exist. Option Description Default Required Method Select \"createDir\" to create a directory. - TRUE Path The location of the directory to create. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure a file system service to create a directory. This service doesn't require any service data setup. This service will not provide any output data. Deleting a directory \u00b6 Deleting a directory will remove a directory from a location if it exists. Option Description Default Required Method Select \"deleteDir\" to remove a directory. - TRUE Path The location of the directory to delete. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure a file system service to delete a directory. This service doesn't require any service data setup. This service will not provide any output data.","title":"SFTP Service"},{"location":"reference/services/sftp-service/#authorization","text":"The following authorization configuration needs to filled out in order to connect to the SFTP server: Option Description Default Required Host The address of the FTP server (i.e. ftp.dlptest.com). - TRUE Port The port of the SFTP server. 22 TRUE Username The username to log in to the SFTP server. - TRUE Password The password to log in to the SFTP server. - TRUE The following example configuration shows you how to configure the test SFTP server at Test.Rebex.Net (this server only allows files to be downloaded). Important The host address does not require the protocol as it will default to SFTP.","title":"Authorization"},{"location":"reference/services/sftp-service/#creating-a-file","text":"Creating (or writing) a file will send the raw data output from another service(s) to a location. Option Description Default Required Method Select \"write\" to transfer a file. - TRUE Path The location to write the file to (including the filename). - TRUE Raw Data The raw data of the file that will be sent. - TRUE Important The path will always require the filename at the end of it (i.e '/path/to/file.txt'). Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure a file system service to transfer a file to a location. This service doesn't require any service data setup. This service will not provide any output data.","title":"Creating a file"},{"location":"reference/services/sftp-service/#updating-a-file","text":"Updating a file will send the raw data output from another service(s) to a location if it exists. Option Description Default Required Method Select \"update\" to update a file. - TRUE Path The location to update the file to (including the filename). - TRUE Raw Data The raw data of the file that will be sent. - TRUE Tip This option will only update the file it if already exists on the server. If there is a possibility that the file will not exist use the Upsert (PUT) option instead. Important The path will always require the filename at the end of it (i.e '/path/to/file.txt'). Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure a file system service to update a file. This service doesn't require any service data setup. This service will not provide any output data.","title":"Updating a file"},{"location":"reference/services/sftp-service/#upserting-a-file","text":"Upserting (or putting) a file will send the raw data output from another service(s) to a location. If it exists it will be overwritten and if it does not exist it will be created. Option Description Default Required Method Select \"put\" to upsert a file. - TRUE Path The location to upsert the file to (including the filename). - TRUE Raw Data The raw data of the file that will be sent. - TRUE Tip This option will create a file if it does not exist and update it if it already exists. Important The path will always require the filename at the end of it (i.e '/path/to/file.txt'). Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure a file system service to upsert a file. This service doesn't require any service data setup. This service will not provide any output data.","title":"Upserting a file"},{"location":"reference/services/sftp-service/#downloading-a-file","text":"Downloading (or reading) a file will transer the raw data from the location to be used as output for other service(s). Option Description Default Required Method Select \"read\" to download a file. - TRUE Path The location of the file to download (including the filename). - TRUE Important The path will always require the filename at the end of it (i.e '/path/to/file.txt'). Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure a file system service to read a file. This service doesn't require any service data setup. This service will produce the following raw data if the file transfered successfully: { \"data\" : \"ID,Job\\n1,Scuba Diver\\n2,Plumber\\n\" , \"metadata\" : {} }","title":"Downloading a file"},{"location":"reference/services/sftp-service/#deleting-a-file","text":"Deleting a file will remove a file from a location if it exists. Option Description Default Required Method Select \"delete\" to remove a file. - TRUE Path The location of the file to delete (including the filename). - TRUE Important The path will always require the filename at the end of it (i.e '/path/to/file.txt'). Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure a file system service to delete a file. This service doesn't require any service data setup. This service will not provide any output data.","title":"Deleting a file"},{"location":"reference/services/sftp-service/#check-if-a-file-or-directory-exists","text":"This option will check to see if a file exists at a given location. Option Description Default Required Method Select \"has\" to check if it exists. - TRUE Path The location to check if it exists. - TRUE Tip This method can check if directories exist as well. Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure a file system service to delete a file. This service doesn't require any service data setup. This service will produce the following boolean data ( true if it exists, false if it does not exist): { \"data\" : true , \"metadata\" : {} }","title":"Check if a file or directory exists"},{"location":"reference/services/sftp-service/#get-list-of-files-and-directories","text":"This option will get a list of files and folders in a specified directory. Option Description Default Required Method Select \"list\" to get a list of files. - TRUE Path The location to get the list from. - TRUE Recursive Whether is it recursive or not. FALSE FALSE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure a file system service to retrieve a list of files and directories: This service doesn't require any service data setup. This service will produce the following array of files and directories: { \"data\" : [ { \"type\" : \"file\" , \"path\" : \"357a3948-e3ad-4cb5-856b-1cde09c37b55.txt\" , \"visibility\" : \"public\" , \"size\" : 16 , \"dirname\" : \"\" , \"basename\" : \"357a3948-e3ad-4cb5-856b-1cde09c37b55.txt\" , \"extension\" : \"txt\" , \"filename\" : \"357a3948-e3ad-4cb5-856b-1cde09c37b55\" }, { \"type\" : \"file\" , \"path\" : \"59430d5e-ce73-4691-9fd7-705ab97cd792.txt\" , \"visibility\" : \"public\" , \"size\" : 16 , \"dirname\" : \"\" , \"basename\" : \"59430d5e-ce73-4691-9fd7-705ab97cd792.txt\" , \"extension\" : \"txt\" , \"filename\" : \"59430d5e-ce73-4691-9fd7-705ab97cd792\" }, { \"type\" : \"file\" , \"path\" : \"dea44f29-c9e3-441b-b02c-0d923112698d.txt\" , \"visibility\" : \"public\" , \"size\" : 16 , \"dirname\" : \"\" , \"basename\" : \"dea44f29-c9e3-441b-b02c-0d923112698d.txt\" , \"extension\" : \"txt\" , \"filename\" : \"dea44f29-c9e3-441b-b02c-0d923112698d\" }, { \"type\" : \"dir\" , \"path\" : \"Testing\" , \"dirname\" : \"\" , \"basename\" : \"Testing\" , \"filename\" : \"Testing\" } ], \"metadata\" : [] }","title":"Get list of files and directories"},{"location":"reference/services/sftp-service/#creating-a-directory","text":"Create a directory will create a directory in a location if it doesn't exist. Option Description Default Required Method Select \"createDir\" to create a directory. - TRUE Path The location of the directory to create. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure a file system service to create a directory. This service doesn't require any service data setup. This service will not provide any output data.","title":"Creating a directory"},{"location":"reference/services/sftp-service/#deleting-a-directory","text":"Deleting a directory will remove a directory from a location if it exists. Option Description Default Required Method Select \"deleteDir\" to remove a directory. - TRUE Path The location of the directory to delete. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure a file system service to delete a directory. This service doesn't require any service data setup. This service will not provide any output data.","title":"Deleting a directory"},{"location":"reference/services/shipping-tools/","text":"Before you begin In order to use the features in this section you need to have an active Spojit account. If you don't have an account you can checkout out the pricing and register here . If you already have an account you can login here . This service encompases a variety of tools that can be used with shipping services. Packaging Logic \u00b6 Packaging logic will automatically pack items into defined boxes to be used when creating shipments in various platforms. Option Description Default Required Method Select \"packagingLogic\". - TRUE Items The array of items. - TRUE Packages The array of packages. - TRUE Large Item Handler What to do if an item won't fit in a package? Either throw an \"error\" or package the item separately. packageSeparately FALSE Important This service requires the input arrays (items and packages) in a certain format. Please view the example for the structure of these objects in the Output Data tab below. Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the packaging logic. The packaging logic service doesn't require any service data setup. Given the following items and packages: { \"items\" : [ { \"reference\" : \"SKU-1\" , \"length\" : \"250\" , \"height\" : \"250\" , \"width\" : \"250\" , \"weight\" : \"3\" , \"qty\" : \"5\" }, { \"reference\" : \"SKU-2\" , \"length\" : \"600\" , \"height\" : \"600\" , \"width\" : \"600\" , \"weight\" : \"3\" , \"qty\" : \"3\" } ], \"packages\" : [ { \"reference\" : \"package 1\" , \"innerLength\" : \"545\" , \"innerWidth\" : \"545\" , \"innerHeight\" : \"545\" , \"outerLength\" : \"550\" , \"outerWidth\" : \"550\" , \"outerHeight\" : \"550\" , \"emptyWeight\" : \"10\" , \"maxWeight\" : \"100\" } ] } In this example the following output will be generated automatically by this service after it is run: { \"data\" : [ { \"reference\" : \"package 1\" , \"length\" : 550 , \"width\" : 550 , \"height\" : 550 , \"weight\" : 25 , \"itemReferences\" : \"SKU-1,SKU-1,SKU-1,SKU-1,SKU-1\" , \"volumeUtilization\" : 48.3 , \"items\" : [ { \"reference\" : \"SKU-1\" , \"length\" : 250 , \"width\" : 250 , \"height\" : 250 , \"weight\" : 3 }, { \"reference\" : \"SKU-1\" , \"length\" : 250 , \"width\" : 250 , \"height\" : 250 , \"weight\" : 3 }, { \"reference\" : \"SKU-1\" , \"length\" : 250 , \"width\" : 250 , \"height\" : 250 , \"weight\" : 3 }, { \"reference\" : \"SKU-1\" , \"length\" : 250 , \"width\" : 250 , \"height\" : 250 , \"weight\" : 3 }, { \"reference\" : \"SKU-1\" , \"length\" : 250 , \"width\" : 250 , \"height\" : 250 , \"weight\" : 3 } ] }, { \"reference\" : \"SKU-2\" , \"length\" : 600 , \"width\" : 600 , \"height\" : 600 , \"weight\" : 3 , \"itemReferences\" : \"SKU-2\" , \"volumeUtilization\" : 100 , \"items\" : [ { \"reference\" : \"SKU-2\" , \"length\" : 600 , \"width\" : 600 , \"height\" : 600 , \"weight\" : 3 } ] }, { \"reference\" : \"SKU-2\" , \"length\" : 600 , \"width\" : 600 , \"height\" : 600 , \"weight\" : 3 , \"itemReferences\" : \"SKU-2\" , \"volumeUtilization\" : 100 , \"items\" : [ { \"reference\" : \"SKU-2\" , \"length\" : 600 , \"width\" : 600 , \"height\" : 600 , \"weight\" : 3 } ] }, { \"reference\" : \"SKU-2\" , \"length\" : 600 , \"width\" : 600 , \"height\" : 600 , \"weight\" : 3 , \"itemReferences\" : \"SKU-2\" , \"volumeUtilization\" : 100 , \"items\" : [ { \"reference\" : \"SKU-2\" , \"length\" : 600 , \"width\" : 600 , \"height\" : 600 , \"weight\" : 3 } ] } ], \"metadata\" : [] }","title":"Shipping Tools"},{"location":"reference/services/shipping-tools/#packaging-logic","text":"Packaging logic will automatically pack items into defined boxes to be used when creating shipments in various platforms. Option Description Default Required Method Select \"packagingLogic\". - TRUE Items The array of items. - TRUE Packages The array of packages. - TRUE Large Item Handler What to do if an item won't fit in a package? Either throw an \"error\" or package the item separately. packageSeparately FALSE Important This service requires the input arrays (items and packages) in a certain format. Please view the example for the structure of these objects in the Output Data tab below. Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the packaging logic. The packaging logic service doesn't require any service data setup. Given the following items and packages: { \"items\" : [ { \"reference\" : \"SKU-1\" , \"length\" : \"250\" , \"height\" : \"250\" , \"width\" : \"250\" , \"weight\" : \"3\" , \"qty\" : \"5\" }, { \"reference\" : \"SKU-2\" , \"length\" : \"600\" , \"height\" : \"600\" , \"width\" : \"600\" , \"weight\" : \"3\" , \"qty\" : \"3\" } ], \"packages\" : [ { \"reference\" : \"package 1\" , \"innerLength\" : \"545\" , \"innerWidth\" : \"545\" , \"innerHeight\" : \"545\" , \"outerLength\" : \"550\" , \"outerWidth\" : \"550\" , \"outerHeight\" : \"550\" , \"emptyWeight\" : \"10\" , \"maxWeight\" : \"100\" } ] } In this example the following output will be generated automatically by this service after it is run: { \"data\" : [ { \"reference\" : \"package 1\" , \"length\" : 550 , \"width\" : 550 , \"height\" : 550 , \"weight\" : 25 , \"itemReferences\" : \"SKU-1,SKU-1,SKU-1,SKU-1,SKU-1\" , \"volumeUtilization\" : 48.3 , \"items\" : [ { \"reference\" : \"SKU-1\" , \"length\" : 250 , \"width\" : 250 , \"height\" : 250 , \"weight\" : 3 }, { \"reference\" : \"SKU-1\" , \"length\" : 250 , \"width\" : 250 , \"height\" : 250 , \"weight\" : 3 }, { \"reference\" : \"SKU-1\" , \"length\" : 250 , \"width\" : 250 , \"height\" : 250 , \"weight\" : 3 }, { \"reference\" : \"SKU-1\" , \"length\" : 250 , \"width\" : 250 , \"height\" : 250 , \"weight\" : 3 }, { \"reference\" : \"SKU-1\" , \"length\" : 250 , \"width\" : 250 , \"height\" : 250 , \"weight\" : 3 } ] }, { \"reference\" : \"SKU-2\" , \"length\" : 600 , \"width\" : 600 , \"height\" : 600 , \"weight\" : 3 , \"itemReferences\" : \"SKU-2\" , \"volumeUtilization\" : 100 , \"items\" : [ { \"reference\" : \"SKU-2\" , \"length\" : 600 , \"width\" : 600 , \"height\" : 600 , \"weight\" : 3 } ] }, { \"reference\" : \"SKU-2\" , \"length\" : 600 , \"width\" : 600 , \"height\" : 600 , \"weight\" : 3 , \"itemReferences\" : \"SKU-2\" , \"volumeUtilization\" : 100 , \"items\" : [ { \"reference\" : \"SKU-2\" , \"length\" : 600 , \"width\" : 600 , \"height\" : 600 , \"weight\" : 3 } ] }, { \"reference\" : \"SKU-2\" , \"length\" : 600 , \"width\" : 600 , \"height\" : 600 , \"weight\" : 3 , \"itemReferences\" : \"SKU-2\" , \"volumeUtilization\" : 100 , \"items\" : [ { \"reference\" : \"SKU-2\" , \"length\" : 600 , \"width\" : 600 , \"height\" : 600 , \"weight\" : 3 } ] } ], \"metadata\" : [] }","title":"Packaging Logic"},{"location":"reference/services/shipstation-service/","text":"Before you begin In order to use the features in this section you need to have an active Spojit account. If you don't have an account you can checkout out the pricing and register here . If you already have an account you can login here . ShipStation is a web-based shipping solution that streamlines the shipping label printing and do-it-yourself shipping process for online retailers. Tip Full documentation of ShipStation resources and configuration is available at ShipStation API Documentation . ShipStation Authorization \u00b6 The following authorization configuration needs to filled out in order to connect with ShipStation: Option Description Default Required API Key A api key for your ShipStation instance. - TRUE API Secret A api secret for your ShipStation instance. - TRUE The following example configuration shows you how to configure the authorziation for ShipStation: The details will be in your ShipStation account under Settings / Account / API Settings / API Keys: Important To keep in line with other services, this service requires a path with the forward slash appended (different from the ShipStation API documentation). Please add the paths accordingly in the service: Correct Incorrect /shipments shipments /orders orders Important This service has a built in JSON parser and will automatically convert to the proper format. Requests will automatically contain required headers and authorization configuration so they do not need to be added. The following (below) is a general guide on how to use the methods for this service. The examples use the JSONPlaceholder fake online REST API. Please refer to the system documentation above for full path and schema information. GET \u00b6 When the GET configuration is selected the service will retrieve a resource from a given URL. Option Description Default Required Method Select \"get\" to retrieve a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to get data from a resource. It also contains an example header for an OAuth authorization bearer token. The GET method doesn't require any service data setup. In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 200 } } POST \u00b6 When the POST configuration is selected the service will create a resource at a given location. Option Description Default Required Method Select \"post\" to create a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to create a resource. The schema can be whatever the resource excepts and for this example we are going to create an OBJECT schema with the specified fields: Given the following source data from another service: { \"data\" : { \"user_id\" : 1 , \"my_id\" : 1 , \"the_title\" : \"delectus aut autem\" , \"finished\" : false } } We can map the applicable fields with the schema object: In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 201 } } PUT \u00b6 When the PUT configuration is selected the service will update a resource at a given location. Option Description Default Required Method Select \"put\" to update a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to update a resource. The schema can be whatever the resource excepts and for this example we are going to create an OBJECT schema with the specified fields: Given the following source data from another service: { \"data\" : { \"user_id\" : 1 , \"my_id\" : 1 , \"the_title\" : \"delectus aut autem\" , \"finished\" : false } } We can map the applicable fields with the schema object: In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 200 } } DELETE \u00b6 When the DELETE configuration is selected the service will delete a resource from a given URL. Option Description Default Required Method Select \"delete\" to delete a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to delete a resource: The DELETE method doesn't require any service data setup. Many services will not return any data after a resource is deleted but if data is returned it could possiblly look like this: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 204 } }","title":"ShipStation"},{"location":"reference/services/shipstation-service/#shipstation-authorization","text":"The following authorization configuration needs to filled out in order to connect with ShipStation: Option Description Default Required API Key A api key for your ShipStation instance. - TRUE API Secret A api secret for your ShipStation instance. - TRUE The following example configuration shows you how to configure the authorziation for ShipStation: The details will be in your ShipStation account under Settings / Account / API Settings / API Keys: Important To keep in line with other services, this service requires a path with the forward slash appended (different from the ShipStation API documentation). Please add the paths accordingly in the service: Correct Incorrect /shipments shipments /orders orders Important This service has a built in JSON parser and will automatically convert to the proper format. Requests will automatically contain required headers and authorization configuration so they do not need to be added. The following (below) is a general guide on how to use the methods for this service. The examples use the JSONPlaceholder fake online REST API. Please refer to the system documentation above for full path and schema information.","title":"ShipStation Authorization"},{"location":"reference/services/shipstation-service/#get","text":"When the GET configuration is selected the service will retrieve a resource from a given URL. Option Description Default Required Method Select \"get\" to retrieve a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to get data from a resource. It also contains an example header for an OAuth authorization bearer token. The GET method doesn't require any service data setup. In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 200 } }","title":"GET"},{"location":"reference/services/shipstation-service/#post","text":"When the POST configuration is selected the service will create a resource at a given location. Option Description Default Required Method Select \"post\" to create a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to create a resource. The schema can be whatever the resource excepts and for this example we are going to create an OBJECT schema with the specified fields: Given the following source data from another service: { \"data\" : { \"user_id\" : 1 , \"my_id\" : 1 , \"the_title\" : \"delectus aut autem\" , \"finished\" : false } } We can map the applicable fields with the schema object: In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 201 } }","title":"POST"},{"location":"reference/services/shipstation-service/#put","text":"When the PUT configuration is selected the service will update a resource at a given location. Option Description Default Required Method Select \"put\" to update a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to update a resource. The schema can be whatever the resource excepts and for this example we are going to create an OBJECT schema with the specified fields: Given the following source data from another service: { \"data\" : { \"user_id\" : 1 , \"my_id\" : 1 , \"the_title\" : \"delectus aut autem\" , \"finished\" : false } } We can map the applicable fields with the schema object: In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 200 } }","title":"PUT"},{"location":"reference/services/shipstation-service/#delete","text":"When the DELETE configuration is selected the service will delete a resource from a given URL. Option Description Default Required Method Select \"delete\" to delete a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to delete a resource: The DELETE method doesn't require any service data setup. Many services will not return any data after a resource is deleted but if data is returned it could possiblly look like this: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 204 } }","title":"DELETE"},{"location":"reference/services/smartfreight-service/","text":"Before you begin In order to use the features in this section you need to have an active Spojit account. If you don't have an account you can checkout out the pricing and register here . If you already have an account you can login here . SmartFreight\u00ae puts you in front of hundreds of transport providers and routes at your fingertips, offering you effective freight solutions. Tip Full documentation of SmartFreight resources and configuration is available at SmartFreight API Documentation . SmartFreight Authorization \u00b6 The following authorization configuration needs to filled out in order to connect with WooCommerce: Option Description Default Required WSDL The SmartFreight WSDL. - TRUE ID The ID for your SmartFreight instance. - TRUE Passwd The password for your SmartFreight instance. - TRUE The following example configuration shows you how to configure the authorziation for SmartFreight: Important This service has a built in XML parser and will automatically convert to the proper format. SOAP requests will automatically contain required headers and authorization configuration so they do not need to be added. Where there is a reference mentioned, the service will inject a unique reference that can be viewed in our logs and in SmartFreight (i.e spojit_xdfdef4543). This documenation does not fully explain all the elements of the Consignment Message. Please refer to the SmartFreight Consignment Message documentation for further information. CalculateRate \u00b6 When the CalculateRate configuration is selected the service will call the CalculateRate resource. Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data This method does not requrire configuartion. Here is an example consignment message mapping that could be used for the CalculateRate method. The connote root node can be ommited from the mapping: { \"recaccno\" : \"TEST\" , \"recname\" : \"TEST RECEIVER\" , \"recaddr\" : { \"add1\" : \"100 George Street\" , \"add3\" : \"SYDNEY\" , \"add4\" : \"NSW\" , \"add5\" : \"2000\" }, \"carriername\" : \"TEST CARRIER\" , \"freightlinedetails\" : { \"amt\" : \"1\" , \"desc\" : \"CARTON\" , \"wgt\" : \"5\" } } The CalculateRate call will return a CalculateRateResult which will be in the form of a Consignment Message. For more information please visit the CalculateRate documentation . GetDeliveryOptions \u00b6 When the GetDeliveryOptions configuration is selected the service will call the GetDeliveryOptions resource. Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data This method does not requrire configuartion. Here is an example consignment message mapping that could be used for the GetDeliveryOptions method. The connote root node can be ommited from the mapping: { \"recaccno\" : \"TEST\" , \"recname\" : \"TEST RECEIVER\" , \"recaddr\" : { \"add1\" : \"100 George Street\" , \"add3\" : \"SYDNEY\" , \"add4\" : \"NSW\" , \"add5\" : \"2000\" }, \"carriername\" : \"TEST CARRIER\" , \"freightlinedetails\" : { \"amt\" : \"1\" , \"desc\" : \"CARTON\" , \"wgt\" : \"5\" } } The GetDeliveryOptions call will return a GetDeliveryOptionsResult which will be in the form of a Consignment Message. For more information please visit the GetDeliveryOptions documentation . CostComparison \u00b6 When the CostComparison configuration is selected the service will call the CostComparison resource. Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data This method does not requrire configuartion. Here is an example consignment message mapping that could be used for the CostComparison method. The connote root node can be ommited from the mapping: { \"recaccno\" : \"TEST\" , \"recname\" : \"TEST RECEIVER\" , \"recaddr\" : { \"add1\" : \"100 George Street\" , \"add3\" : \"SYDNEY\" , \"add4\" : \"NSW\" , \"add5\" : \"2000\" }, \"carriername\" : \"TEST CARRIER\" , \"freightlinedetails\" : { \"amt\" : \"1\" , \"desc\" : \"CARTON\" , \"wgt\" : \"5\" } } The CostComparison call will return a CostComparisonResult. For more information please visit the CostComparison documentation . Import \u00b6 When the Import configuration is selected the service will call the Import resource. Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data This method does not requrire configuartion. Here is an example consignment message mapping that could be used for the Import method. The connote root node can be ommited from the mapping: { \"recaccno\" : \"TEST\" , \"recname\" : \"TEST RECEIVER\" , \"recaddr\" : { \"add1\" : \"100 George Street\" , \"add3\" : \"SYDNEY\" , \"add4\" : \"NSW\" , \"add5\" : \"2000\" }, \"carriername\" : \"TEST CARRIER\" , \"freightlinedetails\" : { \"amt\" : \"1\" , \"desc\" : \"CARTON\" , \"wgt\" : \"5\" } } The Import call will return a ImportResult which will be in the form of a Consignment Message. For more information please visit the Import documentation . FindCon \u00b6 When the FindCon configuration is selected the service will call the FindCon resource. Option Description Default Required Xmlfield The Search Criteria expressed as the SmartFreight field name as provided in the SmartFreight Consignment XML format. - TRUE Fieldvalue The Search Value for the Search Criteria. Wildcards are not supported. - FALSE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the FindCon method to get data from the FindCon resource. This method doesn't require any service data setup. The FindCon call will return a FindConResult like the following: { \"data\" : { \"FindConResult\" : { \"string\" : [ \"B617301D-82F0-4B5A-9E7B-67D1D3DEA37B\" , \"DCBE08E7-7FCD-493F-A0C7-1B871297FEDF\" ] } }, \"metadata\" : { \"statusCode\" : \"200\" , \"headers\" : [ \"HTTP/1.1 200 OK\\r\\nContent-Length: 589\\r\\nContent-Type: text/xml; charset=utf-8\\r\\nServer: Microsoft-HTTPAPI/2.0\\r\\nDate: Mon, 08 Mar 2021 11:55:00 GMT\\r\\n\" ] } } For more information please visit the FindCon documentation . Enquiry \u00b6 When the Enquiry configuration is selected the service will call the Enquiry resource. Option Description Default Required Conid The SmartFreight internal consignment identifier. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Enquiry method to get data from the Enquiry resource. This method doesn't require any service data setup. The Enquiry call will return a EnquiryResult like the following: { \"data\" : { \"EnquiryResult\" : { \"@attributes\" : { \"Entity\" : \"QPU\" }, \"_currency\" : \"$\" , \"accno\" : \"654321\" , \"buttonsstate\" : \"00001000000\" , \"carrierid\" : \"360\" , \"carriername\" : \"TEST CARRIER1\" , \"carrzone\" : \"WW1\" , \"chargeto\" : \"S\" , \"chgwgt\" : \"3\" , \"condate\" : \"8/03/2021\" , \"conno\" : \"WLR10141\" , \"connotenumber\" : \"WLR10141\" , \"conprfx\" : \"WLR\" , \"consignmentdatenumber\" : \"20210308\" , \"createdutcdatetime\" : \"2010160404\" , \"creatorid\" : \"IMPORTED\" , \"currency\" : \"AUD\" , \"dailyid\" : \"496\" , \"dailyid_wan\" : \"QPU496\" , \"datelong\" : \"20210308\" , \"deliverytimeraw\" : \"[none]\" , \"entityid\" : \"QPU\" , \"freightlinedetails\" : { \"amt\" : \"1\" , \"cube\" : \"0.00716\" , \"desc\" : \"CARTON\" , \"hgt\" : \"11\" , \"len\" : \"31\" , \"maxdimension\" : \"31\" , \"mindimension\" : \"11\" , \"multiplylwh\" : \"Y\" , \"ref\" : \"ASD048198\" , \"wdt\" : \"21\" , \"wgt\" : \"3\" }, \"fromzone\" : \"VV1\" , \"grandtotmrkup\" : \"22.946\" , \"grandtotrate\" : \"22.946\" , \"gstamount\" : \"2.086\" , \"gstamt\" : \"2.086\" , \"gstonmrkup\" : \"2.086\" , \"identification\" : { \"conid\" : \"B617301D-82F0-4B5A-9E7B-67D1D3DEA37B\" }, \"importfilename\" : \"ASD048198\" , \"labels\" : { \"dailyid_foreign\" : \"496\" , \"dailyid_wan\" : \"QPU496\" , \"freightlineno\" : \"1\" , \"itemno\" : \"1\" , \"labelid\" : \"407\" , \"labelno_tracking\" : \"WLR10141001\" , \"nooflabelsdefault\" : \"1\" }, \"lastmodified\" : \"20201016040432\" , \"manifestaccno\" : \"654321\" , \"movementtype\" : \"OUTBOUND\" , \"netcost\" : \"20.86\" , \"nooffashionlabels\" : \"1\" , \"notifyrecemail\" : \"Y\" , \"notifyrecsms\" : \"Y\" , \"originaldespatchdate\" : \"20201016\" , \"rate\" : \"20.86\" , \"recaccno\" : \"AC05548\" , \"recaddr\" : { \"add1\" : \"BUILDING 614, ROOM 115\" , \"add2\" : \"5 DE LAETER WAY\" , \"add3\" : \"BENTLEY\" , \"add4\" : \"WA\" , \"add5\" : \"6102\" , \"add6\" : \"AUSTRALIA\" , \"type\" : \"Business\" }, \"reccontact\" : \"0892667535\" , \"recemail\" : \"H.Fairhurst@curtin.edu.au\" , \"recloc\" : \"-32.0010000,115.9240000\" , \"recname\" : \"CURTIN CORROSION CENTER\" , \"recph\" : \"CHARLES LACOSTE\" , \"rtsaddr\" : { \"add6\" : \"AUSTRALIA\" }, \"rtzexpire\" : \"999912312359\" , \"sendaccno\" : \"M4\" , \"sendaddr\" : { \"add1\" : \"C/O DSE \" , \"add2\" : \"336 SETTLEMENT ROAD\" , \"add3\" : \"THOMASTOWN\" , \"add4\" : \"VIC\" , \"add5\" : \"3074\" , \"add6\" : \"AUSTRALIA\" }, \"sendloc\" : \"-37.6820000,145.0140000\" , \"sendname\" : \"Australian Window Furnishings\" , \"service\" : \"OVERNIGHT\" , \"taxrate\" : \"10\" , \"totalcost\" : \"20.86\" , \"totcost\" : \"20.86\" , \"totcostplusmrkup\" : \"20.86\" , \"totcube\" : \"0.00716\" , \"totdgcharge\" : \"0\" , \"totitems\" : \"1\" , \"totwgt\" : \"3\" , \"tpyaddr\" : { \"add6\" : \"AUSTRALIA\" }, \"trackingid\" : \"qPubia\" } }, \"metadata\" : { \"statusCode\" : \"200\" , \"headers\" : [ \"HTTP/1.1 200 OK\\r\\nContent-Length: 4393\\r\\nContent-Type: text/xml; charset=utf-8\\r\\nServer: Microsoft-HTTPAPI/2.0\\r\\nDate: Mon, 08 Mar 2021 12:08:54 GMT\\r\\n\" ] } } For more information please visit the Enquiry documentation . DeleteCon \u00b6 When the DeleteCon configuration is selected the service will call the DeleteCon resource. Option Description Default Required Conid The SmartFreight internal consignment identifier. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the DeleteCon method to use the DeleteCon resource. This method doesn't require any service data setup. The DeleteCon call will return a DeleteConResult like the following: { \"data\" : { \"DeleteConResult\" : { \"string\" : [ \"B617301D-82F0-4B5A-9E7B-67D1D3DEA37B\" ] } }, \"metadata\" : { \"statusCode\" : \"200\" , \"headers\" : [ \"HTTP/1.1 200 OK\\r\\nContent-Length: 589\\r\\nContent-Type: text/xml; charset=utf-8\\r\\nServer: Microsoft-HTTPAPI/2.0\\r\\nDate: Mon, 08 Mar 2021 11:55:00 GMT\\r\\n\" ] } } For more information please visit the DeleteCon documentation . TrackingEvents \u00b6 When the TrackingEvents configuration is selected the service will call the TrackingEvents resource. Option Description Default Required Conid The SmartFreight internal consignment identifier. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the TrackingEvents method to use the TrackingEvents resource. This method doesn't require any service data setup. The TrackingEvents call will return a TrackingEventsResult like the following: { \"data\" : { \"TrackingEventsResult\" : { \"Statistics\" : [ \"\\n\\t\" ], \"Events\" : [ \"\\n\\t\" ] } }, \"metadata\" : { \"statusCode\" : \"200\" , \"headers\" : [ \"HTTP/1.1 200 OK\\r\\nContent-Length: 577\\r\\nContent-Type: text/xml; charset=utf-8\\r\\nServer: Microsoft-HTTPAPI/2.0\\r\\nDate: Mon, 08 Mar 2021 12:17:32 GMT\\r\\n\" ] } } For more information please visit the TrackingEvents documentation .","title":"SmartFreight Service"},{"location":"reference/services/smartfreight-service/#smartfreight-authorization","text":"The following authorization configuration needs to filled out in order to connect with WooCommerce: Option Description Default Required WSDL The SmartFreight WSDL. - TRUE ID The ID for your SmartFreight instance. - TRUE Passwd The password for your SmartFreight instance. - TRUE The following example configuration shows you how to configure the authorziation for SmartFreight: Important This service has a built in XML parser and will automatically convert to the proper format. SOAP requests will automatically contain required headers and authorization configuration so they do not need to be added. Where there is a reference mentioned, the service will inject a unique reference that can be viewed in our logs and in SmartFreight (i.e spojit_xdfdef4543). This documenation does not fully explain all the elements of the Consignment Message. Please refer to the SmartFreight Consignment Message documentation for further information.","title":"SmartFreight Authorization"},{"location":"reference/services/smartfreight-service/#calculaterate","text":"When the CalculateRate configuration is selected the service will call the CalculateRate resource. Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data This method does not requrire configuartion. Here is an example consignment message mapping that could be used for the CalculateRate method. The connote root node can be ommited from the mapping: { \"recaccno\" : \"TEST\" , \"recname\" : \"TEST RECEIVER\" , \"recaddr\" : { \"add1\" : \"100 George Street\" , \"add3\" : \"SYDNEY\" , \"add4\" : \"NSW\" , \"add5\" : \"2000\" }, \"carriername\" : \"TEST CARRIER\" , \"freightlinedetails\" : { \"amt\" : \"1\" , \"desc\" : \"CARTON\" , \"wgt\" : \"5\" } } The CalculateRate call will return a CalculateRateResult which will be in the form of a Consignment Message. For more information please visit the CalculateRate documentation .","title":"CalculateRate"},{"location":"reference/services/smartfreight-service/#getdeliveryoptions","text":"When the GetDeliveryOptions configuration is selected the service will call the GetDeliveryOptions resource. Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data This method does not requrire configuartion. Here is an example consignment message mapping that could be used for the GetDeliveryOptions method. The connote root node can be ommited from the mapping: { \"recaccno\" : \"TEST\" , \"recname\" : \"TEST RECEIVER\" , \"recaddr\" : { \"add1\" : \"100 George Street\" , \"add3\" : \"SYDNEY\" , \"add4\" : \"NSW\" , \"add5\" : \"2000\" }, \"carriername\" : \"TEST CARRIER\" , \"freightlinedetails\" : { \"amt\" : \"1\" , \"desc\" : \"CARTON\" , \"wgt\" : \"5\" } } The GetDeliveryOptions call will return a GetDeliveryOptionsResult which will be in the form of a Consignment Message. For more information please visit the GetDeliveryOptions documentation .","title":"GetDeliveryOptions"},{"location":"reference/services/smartfreight-service/#costcomparison","text":"When the CostComparison configuration is selected the service will call the CostComparison resource. Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data This method does not requrire configuartion. Here is an example consignment message mapping that could be used for the CostComparison method. The connote root node can be ommited from the mapping: { \"recaccno\" : \"TEST\" , \"recname\" : \"TEST RECEIVER\" , \"recaddr\" : { \"add1\" : \"100 George Street\" , \"add3\" : \"SYDNEY\" , \"add4\" : \"NSW\" , \"add5\" : \"2000\" }, \"carriername\" : \"TEST CARRIER\" , \"freightlinedetails\" : { \"amt\" : \"1\" , \"desc\" : \"CARTON\" , \"wgt\" : \"5\" } } The CostComparison call will return a CostComparisonResult. For more information please visit the CostComparison documentation .","title":"CostComparison"},{"location":"reference/services/smartfreight-service/#import","text":"When the Import configuration is selected the service will call the Import resource. Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data This method does not requrire configuartion. Here is an example consignment message mapping that could be used for the Import method. The connote root node can be ommited from the mapping: { \"recaccno\" : \"TEST\" , \"recname\" : \"TEST RECEIVER\" , \"recaddr\" : { \"add1\" : \"100 George Street\" , \"add3\" : \"SYDNEY\" , \"add4\" : \"NSW\" , \"add5\" : \"2000\" }, \"carriername\" : \"TEST CARRIER\" , \"freightlinedetails\" : { \"amt\" : \"1\" , \"desc\" : \"CARTON\" , \"wgt\" : \"5\" } } The Import call will return a ImportResult which will be in the form of a Consignment Message. For more information please visit the Import documentation .","title":"Import"},{"location":"reference/services/smartfreight-service/#findcon","text":"When the FindCon configuration is selected the service will call the FindCon resource. Option Description Default Required Xmlfield The Search Criteria expressed as the SmartFreight field name as provided in the SmartFreight Consignment XML format. - TRUE Fieldvalue The Search Value for the Search Criteria. Wildcards are not supported. - FALSE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the FindCon method to get data from the FindCon resource. This method doesn't require any service data setup. The FindCon call will return a FindConResult like the following: { \"data\" : { \"FindConResult\" : { \"string\" : [ \"B617301D-82F0-4B5A-9E7B-67D1D3DEA37B\" , \"DCBE08E7-7FCD-493F-A0C7-1B871297FEDF\" ] } }, \"metadata\" : { \"statusCode\" : \"200\" , \"headers\" : [ \"HTTP/1.1 200 OK\\r\\nContent-Length: 589\\r\\nContent-Type: text/xml; charset=utf-8\\r\\nServer: Microsoft-HTTPAPI/2.0\\r\\nDate: Mon, 08 Mar 2021 11:55:00 GMT\\r\\n\" ] } } For more information please visit the FindCon documentation .","title":"FindCon"},{"location":"reference/services/smartfreight-service/#enquiry","text":"When the Enquiry configuration is selected the service will call the Enquiry resource. Option Description Default Required Conid The SmartFreight internal consignment identifier. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Enquiry method to get data from the Enquiry resource. This method doesn't require any service data setup. The Enquiry call will return a EnquiryResult like the following: { \"data\" : { \"EnquiryResult\" : { \"@attributes\" : { \"Entity\" : \"QPU\" }, \"_currency\" : \"$\" , \"accno\" : \"654321\" , \"buttonsstate\" : \"00001000000\" , \"carrierid\" : \"360\" , \"carriername\" : \"TEST CARRIER1\" , \"carrzone\" : \"WW1\" , \"chargeto\" : \"S\" , \"chgwgt\" : \"3\" , \"condate\" : \"8/03/2021\" , \"conno\" : \"WLR10141\" , \"connotenumber\" : \"WLR10141\" , \"conprfx\" : \"WLR\" , \"consignmentdatenumber\" : \"20210308\" , \"createdutcdatetime\" : \"2010160404\" , \"creatorid\" : \"IMPORTED\" , \"currency\" : \"AUD\" , \"dailyid\" : \"496\" , \"dailyid_wan\" : \"QPU496\" , \"datelong\" : \"20210308\" , \"deliverytimeraw\" : \"[none]\" , \"entityid\" : \"QPU\" , \"freightlinedetails\" : { \"amt\" : \"1\" , \"cube\" : \"0.00716\" , \"desc\" : \"CARTON\" , \"hgt\" : \"11\" , \"len\" : \"31\" , \"maxdimension\" : \"31\" , \"mindimension\" : \"11\" , \"multiplylwh\" : \"Y\" , \"ref\" : \"ASD048198\" , \"wdt\" : \"21\" , \"wgt\" : \"3\" }, \"fromzone\" : \"VV1\" , \"grandtotmrkup\" : \"22.946\" , \"grandtotrate\" : \"22.946\" , \"gstamount\" : \"2.086\" , \"gstamt\" : \"2.086\" , \"gstonmrkup\" : \"2.086\" , \"identification\" : { \"conid\" : \"B617301D-82F0-4B5A-9E7B-67D1D3DEA37B\" }, \"importfilename\" : \"ASD048198\" , \"labels\" : { \"dailyid_foreign\" : \"496\" , \"dailyid_wan\" : \"QPU496\" , \"freightlineno\" : \"1\" , \"itemno\" : \"1\" , \"labelid\" : \"407\" , \"labelno_tracking\" : \"WLR10141001\" , \"nooflabelsdefault\" : \"1\" }, \"lastmodified\" : \"20201016040432\" , \"manifestaccno\" : \"654321\" , \"movementtype\" : \"OUTBOUND\" , \"netcost\" : \"20.86\" , \"nooffashionlabels\" : \"1\" , \"notifyrecemail\" : \"Y\" , \"notifyrecsms\" : \"Y\" , \"originaldespatchdate\" : \"20201016\" , \"rate\" : \"20.86\" , \"recaccno\" : \"AC05548\" , \"recaddr\" : { \"add1\" : \"BUILDING 614, ROOM 115\" , \"add2\" : \"5 DE LAETER WAY\" , \"add3\" : \"BENTLEY\" , \"add4\" : \"WA\" , \"add5\" : \"6102\" , \"add6\" : \"AUSTRALIA\" , \"type\" : \"Business\" }, \"reccontact\" : \"0892667535\" , \"recemail\" : \"H.Fairhurst@curtin.edu.au\" , \"recloc\" : \"-32.0010000,115.9240000\" , \"recname\" : \"CURTIN CORROSION CENTER\" , \"recph\" : \"CHARLES LACOSTE\" , \"rtsaddr\" : { \"add6\" : \"AUSTRALIA\" }, \"rtzexpire\" : \"999912312359\" , \"sendaccno\" : \"M4\" , \"sendaddr\" : { \"add1\" : \"C/O DSE \" , \"add2\" : \"336 SETTLEMENT ROAD\" , \"add3\" : \"THOMASTOWN\" , \"add4\" : \"VIC\" , \"add5\" : \"3074\" , \"add6\" : \"AUSTRALIA\" }, \"sendloc\" : \"-37.6820000,145.0140000\" , \"sendname\" : \"Australian Window Furnishings\" , \"service\" : \"OVERNIGHT\" , \"taxrate\" : \"10\" , \"totalcost\" : \"20.86\" , \"totcost\" : \"20.86\" , \"totcostplusmrkup\" : \"20.86\" , \"totcube\" : \"0.00716\" , \"totdgcharge\" : \"0\" , \"totitems\" : \"1\" , \"totwgt\" : \"3\" , \"tpyaddr\" : { \"add6\" : \"AUSTRALIA\" }, \"trackingid\" : \"qPubia\" } }, \"metadata\" : { \"statusCode\" : \"200\" , \"headers\" : [ \"HTTP/1.1 200 OK\\r\\nContent-Length: 4393\\r\\nContent-Type: text/xml; charset=utf-8\\r\\nServer: Microsoft-HTTPAPI/2.0\\r\\nDate: Mon, 08 Mar 2021 12:08:54 GMT\\r\\n\" ] } } For more information please visit the Enquiry documentation .","title":"Enquiry"},{"location":"reference/services/smartfreight-service/#deletecon","text":"When the DeleteCon configuration is selected the service will call the DeleteCon resource. Option Description Default Required Conid The SmartFreight internal consignment identifier. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the DeleteCon method to use the DeleteCon resource. This method doesn't require any service data setup. The DeleteCon call will return a DeleteConResult like the following: { \"data\" : { \"DeleteConResult\" : { \"string\" : [ \"B617301D-82F0-4B5A-9E7B-67D1D3DEA37B\" ] } }, \"metadata\" : { \"statusCode\" : \"200\" , \"headers\" : [ \"HTTP/1.1 200 OK\\r\\nContent-Length: 589\\r\\nContent-Type: text/xml; charset=utf-8\\r\\nServer: Microsoft-HTTPAPI/2.0\\r\\nDate: Mon, 08 Mar 2021 11:55:00 GMT\\r\\n\" ] } } For more information please visit the DeleteCon documentation .","title":"DeleteCon"},{"location":"reference/services/smartfreight-service/#trackingevents","text":"When the TrackingEvents configuration is selected the service will call the TrackingEvents resource. Option Description Default Required Conid The SmartFreight internal consignment identifier. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the TrackingEvents method to use the TrackingEvents resource. This method doesn't require any service data setup. The TrackingEvents call will return a TrackingEventsResult like the following: { \"data\" : { \"TrackingEventsResult\" : { \"Statistics\" : [ \"\\n\\t\" ], \"Events\" : [ \"\\n\\t\" ] } }, \"metadata\" : { \"statusCode\" : \"200\" , \"headers\" : [ \"HTTP/1.1 200 OK\\r\\nContent-Length: 577\\r\\nContent-Type: text/xml; charset=utf-8\\r\\nServer: Microsoft-HTTPAPI/2.0\\r\\nDate: Mon, 08 Mar 2021 12:17:32 GMT\\r\\n\" ] } } For more information please visit the TrackingEvents documentation .","title":"TrackingEvents"},{"location":"reference/services/smtp-mailer/","text":"Before you begin In order to use the features in this section you need to have an active Spojit account. If you don't have an account you can checkout out the pricing and register here . If you already have an account you can login here . This service can send a simple email from an email address. It includes the ability to configure recipients, a subject line, text body, html body and add attachments. Login Authorization \u00b6 The following authorization configuration needs to filled out in order to send mail via SMTP: Option Description Default Required Host The host of the mail server (i.e. smtp.gmail.com). - TRUE Port The port of the mail server. - TRUE Username The username to login. - TRUE Password The password to login. - TRUE The following example configuration shows you how to configure the login authorziation SMTP: Using GMAIL To use login authorization for SMTP with GMAIL you need to allow Less secure app access in your Google account. Configuration \u00b6 Option Description Default Required From Name The name of the sender of the email message. - TRUE From Email The email address of the sender. - TRUE To The recipient(s) of the email message. Each receipient requires a name and email address - TRUE Cc The Cc recipient(s) of the email message. Each receipient requires a name and email address - FALSE Bcc The Bcc recipient(s) of the email message. Each receipient requires a name and email address - FALSE Name The name of the recipient of the email message. - TRUE Email The email address of the recipient. - TRUE Subject The subject line of the email that is going to be sent. - TRUE Body The body of the email that is going to be sent. - TRUE HTML The HTML body of the email that is going to be sent. - FALSE Attachments File(s) that are attached to the email. This requires attachment type, name and the raw data for the file. - FALSE Attachment Type The type of file that is being attached (i.e application/csv). - TRUE Attachment Filename The name of file that is being attached (i.e somedata.csv). - TRUE Raw data The raw data of the file that will be attached. - TRUE Important The attachments need to be provided to this service in raw data with the correct data type and file name selected in order for the file to be read properly with some email clients. Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the mailer to send an email with an attachment. The To , Subject and Body are essential and attachments must be raw data with the applicable data type and name provided. The mailer doesn't require any service data setup. The mailer will not provide much output data besides if the email was sent or not. The following is what this configured email might look like when received:","title":"SMTP Mailer Service"},{"location":"reference/services/smtp-mailer/#login-authorization","text":"The following authorization configuration needs to filled out in order to send mail via SMTP: Option Description Default Required Host The host of the mail server (i.e. smtp.gmail.com). - TRUE Port The port of the mail server. - TRUE Username The username to login. - TRUE Password The password to login. - TRUE The following example configuration shows you how to configure the login authorziation SMTP: Using GMAIL To use login authorization for SMTP with GMAIL you need to allow Less secure app access in your Google account.","title":"Login Authorization"},{"location":"reference/services/smtp-mailer/#configuration","text":"Option Description Default Required From Name The name of the sender of the email message. - TRUE From Email The email address of the sender. - TRUE To The recipient(s) of the email message. Each receipient requires a name and email address - TRUE Cc The Cc recipient(s) of the email message. Each receipient requires a name and email address - FALSE Bcc The Bcc recipient(s) of the email message. Each receipient requires a name and email address - FALSE Name The name of the recipient of the email message. - TRUE Email The email address of the recipient. - TRUE Subject The subject line of the email that is going to be sent. - TRUE Body The body of the email that is going to be sent. - TRUE HTML The HTML body of the email that is going to be sent. - FALSE Attachments File(s) that are attached to the email. This requires attachment type, name and the raw data for the file. - FALSE Attachment Type The type of file that is being attached (i.e application/csv). - TRUE Attachment Filename The name of file that is being attached (i.e somedata.csv). - TRUE Raw data The raw data of the file that will be attached. - TRUE Important The attachments need to be provided to this service in raw data with the correct data type and file name selected in order for the file to be read properly with some email clients. Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the mailer to send an email with an attachment. The To , Subject and Body are essential and attachments must be raw data with the applicable data type and name provided. The mailer doesn't require any service data setup. The mailer will not provide much output data besides if the email was sent or not. The following is what this configured email might look like when received:","title":"Configuration"},{"location":"reference/services/start-service/","text":"Before you begin In order to use the features in this section you need to have an active Spojit account. If you don't have an account you can checkout out the pricing and register here . If you already have an account you can login here . The start service is the starting point for incoming webhooks and realtime requests. When provided the service will take any incoming data and create a new output object. Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to use the start service to create a new output object. There is no required configuration for this service. The start service doesn't require any service data setup. Given the following incoming webhook: { \"email\" : \"john.doe@example.com\" , \"first_name\" : \"John\" , \"last_name\" : \"Doe\" , \"username\" : \"john.doe\" , \"billing\" : { \"first_name\" : \"John\" , \"last_name\" : \"Doe\" , \"company\" : \"\" , \"address_1\" : \"969 Market\" , \"address_2\" : \"\" , \"city\" : \"San Francisco\" , \"state\" : \"CA\" , \"postcode\" : \"94103\" , \"country\" : \"US\" , \"email\" : \"john.doe@example.com\" , \"phone\" : \"(555) 555-5555\" }, \"shipping\" : { \"first_name\" : \"John\" , \"last_name\" : \"Doe\" , \"company\" : \"\" , \"address_1\" : \"969 Market\" , \"address_2\" : \"\" , \"city\" : \"San Francisco\" , \"state\" : \"CA\" , \"postcode\" : \"94103\" , \"country\" : \"US\" } } In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"email\" : \"john.doe@example.com\" , \"first_name\" : \"John\" , \"last_name\" : \"Doe\" , \"username\" : \"john.doe\" , \"billing\" : { \"first_name\" : \"John\" , \"last_name\" : \"Doe\" , \"company\" : \"\" , \"address_1\" : \"969 Market\" , \"address_2\" : \"\" , \"city\" : \"San Francisco\" , \"state\" : \"CA\" , \"postcode\" : \"94103\" , \"country\" : \"US\" , \"email\" : \"john.doe@example.com\" , \"phone\" : \"(555) 555-5555\" }, \"shipping\" : { \"first_name\" : \"John\" , \"last_name\" : \"Doe\" , \"company\" : \"\" , \"address_1\" : \"969 Market\" , \"address_2\" : \"\" , \"city\" : \"San Francisco\" , \"state\" : \"CA\" , \"postcode\" : \"94103\" , \"country\" : \"US\" } }, \"metadata\" : [] }","title":"Start Service"},{"location":"reference/services/unleashed-service/","text":"Before you begin In order to use the features in this section you need to have an active Spojit account. If you don't have an account you can checkout out the pricing and register here . If you already have an account you can login here . Unleashed Software is a cloud-based inventory management platform that\u2019s perfect for manufacturers, wholesalers and distributors. This service can facilitate the bilateral transfer of resources within the Unleashed Software RESTful web service. Tip Full documentation of Unleashed resources and configuration is available at Unleashed API Documentation . Unleashed Authorization \u00b6 The following authorization configuration needs to filled out in order to connect with Unleashed: Option Description Default Required API ID The API ID in the UNLEASHED API ACCESS dashboard. - TRUE API Key The API Key in the UNLEASHED API ACCESS dashboard. - TRUE To find where these values are please refer to our Unleashed authorization guide . The following example configuration shows you how to configure the authorziation for Unleashed: Important This service has a built in JSON parser and will automatically convert to the proper format. Requests will automatically contain required headers and authorization configuration so they do not need to be added. The following (below) is a general guide on how to use the methods for this service. The examples use the JSONPlaceholder fake online REST API. Please refer to the system documentation above for full path and schema information. GET \u00b6 When the GET configuration is selected the service will retrieve a resource from a given URL. Option Description Default Required Method Select \"get\" to retrieve a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to get data from a resource. It also contains an example header for an OAuth authorization bearer token. The GET method doesn't require any service data setup. In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 200 } } POST \u00b6 When the POST configuration is selected the service will create a resource at a given location. Option Description Default Required Method Select \"post\" to create a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to create a resource. The schema can be whatever the resource excepts and for this example we are going to create an OBJECT schema with the specified fields: Given the following source data from another service: { \"data\" : { \"user_id\" : 1 , \"my_id\" : 1 , \"the_title\" : \"delectus aut autem\" , \"finished\" : false } } We can map the applicable fields with the schema object: In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 201 } } PUT \u00b6 When the PUT configuration is selected the service will update a resource at a given location. Option Description Default Required Method Select \"put\" to update a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to update a resource. The schema can be whatever the resource excepts and for this example we are going to create an OBJECT schema with the specified fields: Given the following source data from another service: { \"data\" : { \"user_id\" : 1 , \"my_id\" : 1 , \"the_title\" : \"delectus aut autem\" , \"finished\" : false } } We can map the applicable fields with the schema object: In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 200 } } DELETE \u00b6 When the DELETE configuration is selected the service will delete a resource from a given URL. Option Description Default Required Method Select \"delete\" to delete a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to delete a resource: The DELETE method doesn't require any service data setup. Many services will not return any data after a resource is deleted but if data is returned it could possiblly look like this: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 204 } }","title":"Unleashed Software"},{"location":"reference/services/unleashed-service/#unleashed-authorization","text":"The following authorization configuration needs to filled out in order to connect with Unleashed: Option Description Default Required API ID The API ID in the UNLEASHED API ACCESS dashboard. - TRUE API Key The API Key in the UNLEASHED API ACCESS dashboard. - TRUE To find where these values are please refer to our Unleashed authorization guide . The following example configuration shows you how to configure the authorziation for Unleashed: Important This service has a built in JSON parser and will automatically convert to the proper format. Requests will automatically contain required headers and authorization configuration so they do not need to be added. The following (below) is a general guide on how to use the methods for this service. The examples use the JSONPlaceholder fake online REST API. Please refer to the system documentation above for full path and schema information.","title":"Unleashed Authorization"},{"location":"reference/services/unleashed-service/#get","text":"When the GET configuration is selected the service will retrieve a resource from a given URL. Option Description Default Required Method Select \"get\" to retrieve a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to get data from a resource. It also contains an example header for an OAuth authorization bearer token. The GET method doesn't require any service data setup. In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 200 } }","title":"GET"},{"location":"reference/services/unleashed-service/#post","text":"When the POST configuration is selected the service will create a resource at a given location. Option Description Default Required Method Select \"post\" to create a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to create a resource. The schema can be whatever the resource excepts and for this example we are going to create an OBJECT schema with the specified fields: Given the following source data from another service: { \"data\" : { \"user_id\" : 1 , \"my_id\" : 1 , \"the_title\" : \"delectus aut autem\" , \"finished\" : false } } We can map the applicable fields with the schema object: In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 201 } }","title":"POST"},{"location":"reference/services/unleashed-service/#put","text":"When the PUT configuration is selected the service will update a resource at a given location. Option Description Default Required Method Select \"put\" to update a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to update a resource. The schema can be whatever the resource excepts and for this example we are going to create an OBJECT schema with the specified fields: Given the following source data from another service: { \"data\" : { \"user_id\" : 1 , \"my_id\" : 1 , \"the_title\" : \"delectus aut autem\" , \"finished\" : false } } We can map the applicable fields with the schema object: In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 200 } }","title":"PUT"},{"location":"reference/services/unleashed-service/#delete","text":"When the DELETE configuration is selected the service will delete a resource from a given URL. Option Description Default Required Method Select \"delete\" to delete a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to delete a resource: The DELETE method doesn't require any service data setup. Many services will not return any data after a resource is deleted but if data is returned it could possiblly look like this: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 204 } }","title":"DELETE"},{"location":"reference/services/woocommerce-service/","text":"Before you begin In order to use the features in this section you need to have an active Spojit account. If you don't have an account you can checkout out the pricing and register here . If you already have an account you can login here . WooCommerce is a customizable, open-source eCommerce platform built on WordPress. This service can facilitate the bilateral transfer of resources within the WooCommerce RESTful web service. Tip Full documentation of WooCommerce resources and configuration is available at WooCommerce API Documentation . WooCommerce Authorization \u00b6 The following authorization configuration needs to filled out in order to connect with WooCommerce: Option Description Default Required URL The URL to your WooCommerce instance (i.e. https://www.yoursite.com ). - TRUE Consumer Key A consumer key for your WooCommerce instance. - TRUE Consumer Secret A consumer secret for your WooCommerce instance. - TRUE To find where these values are please refer to our WooCommerce authorization guide . The following example configuration shows you how to configure the authorziation for WooCommerce: Important This service uses Version 3 (v3) of the WooCommerce API by default and will append this to the path automatically. Please add the paths accordingly without the reference to /wp-json/wc/v3/orders : Correct Incorrect /orders /wp-json/wc/v3/orders Important This service has a built in JSON parser and will automatically convert to the proper format. Requests will automatically contain required headers and authorization configuration so they do not need to be added. The following (below) is a general guide on how to use the methods for this service. The examples use the JSONPlaceholder fake online REST API. Please refer to the system documentation above for full path and schema information. GET \u00b6 When the GET configuration is selected the service will retrieve a resource from a given URL. Option Description Default Required Method Select \"get\" to retrieve a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to get data from a resource. It also contains an example header for an OAuth authorization bearer token. The GET method doesn't require any service data setup. In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 200 } } POST \u00b6 When the POST configuration is selected the service will create a resource at a given location. Option Description Default Required Method Select \"post\" to create a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to create a resource. The schema can be whatever the resource excepts and for this example we are going to create an OBJECT schema with the specified fields: Given the following source data from another service: { \"data\" : { \"user_id\" : 1 , \"my_id\" : 1 , \"the_title\" : \"delectus aut autem\" , \"finished\" : false } } We can map the applicable fields with the schema object: In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 201 } } PUT \u00b6 When the PUT configuration is selected the service will update a resource at a given location. Option Description Default Required Method Select \"put\" to update a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to update a resource. The schema can be whatever the resource excepts and for this example we are going to create an OBJECT schema with the specified fields: Given the following source data from another service: { \"data\" : { \"user_id\" : 1 , \"my_id\" : 1 , \"the_title\" : \"delectus aut autem\" , \"finished\" : false } } We can map the applicable fields with the schema object: In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 200 } } DELETE \u00b6 When the DELETE configuration is selected the service will delete a resource from a given URL. Option Description Default Required Method Select \"delete\" to delete a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to delete a resource: The DELETE method doesn't require any service data setup. Many services will not return any data after a resource is deleted but if data is returned it could possiblly look like this: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 204 } }","title":"WooCommerce"},{"location":"reference/services/woocommerce-service/#woocommerce-authorization","text":"The following authorization configuration needs to filled out in order to connect with WooCommerce: Option Description Default Required URL The URL to your WooCommerce instance (i.e. https://www.yoursite.com ). - TRUE Consumer Key A consumer key for your WooCommerce instance. - TRUE Consumer Secret A consumer secret for your WooCommerce instance. - TRUE To find where these values are please refer to our WooCommerce authorization guide . The following example configuration shows you how to configure the authorziation for WooCommerce: Important This service uses Version 3 (v3) of the WooCommerce API by default and will append this to the path automatically. Please add the paths accordingly without the reference to /wp-json/wc/v3/orders : Correct Incorrect /orders /wp-json/wc/v3/orders Important This service has a built in JSON parser and will automatically convert to the proper format. Requests will automatically contain required headers and authorization configuration so they do not need to be added. The following (below) is a general guide on how to use the methods for this service. The examples use the JSONPlaceholder fake online REST API. Please refer to the system documentation above for full path and schema information.","title":"WooCommerce Authorization"},{"location":"reference/services/woocommerce-service/#get","text":"When the GET configuration is selected the service will retrieve a resource from a given URL. Option Description Default Required Method Select \"get\" to retrieve a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to get data from a resource. It also contains an example header for an OAuth authorization bearer token. The GET method doesn't require any service data setup. In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 200 } }","title":"GET"},{"location":"reference/services/woocommerce-service/#post","text":"When the POST configuration is selected the service will create a resource at a given location. Option Description Default Required Method Select \"post\" to create a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to create a resource. The schema can be whatever the resource excepts and for this example we are going to create an OBJECT schema with the specified fields: Given the following source data from another service: { \"data\" : { \"user_id\" : 1 , \"my_id\" : 1 , \"the_title\" : \"delectus aut autem\" , \"finished\" : false } } We can map the applicable fields with the schema object: In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 201 } }","title":"POST"},{"location":"reference/services/woocommerce-service/#put","text":"When the PUT configuration is selected the service will update a resource at a given location. Option Description Default Required Method Select \"put\" to update a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to update a resource. The schema can be whatever the resource excepts and for this example we are going to create an OBJECT schema with the specified fields: Given the following source data from another service: { \"data\" : { \"user_id\" : 1 , \"my_id\" : 1 , \"the_title\" : \"delectus aut autem\" , \"finished\" : false } } We can map the applicable fields with the schema object: In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 200 } }","title":"PUT"},{"location":"reference/services/woocommerce-service/#delete","text":"When the DELETE configuration is selected the service will delete a resource from a given URL. Option Description Default Required Method Select \"delete\" to delete a resource. - TRUE API Url The full URL of the resource . - TRUE Headers The request headers are not required as a request can be made without them. If added the Header Key and Header Value is required for each. - FALSE Header Key The name of the header key. - TRUE Header Value The value of the header. - TRUE Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the Rest Service to delete a resource: The DELETE method doesn't require any service data setup. Many services will not return any data after a resource is deleted but if data is returned it could possiblly look like this: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { \"statusCode\" : 204 } }","title":"DELETE"},{"location":"reference/services/xlsx-service/","text":"Before you begin In order to use the features in this section you need to have an active Spojit account. If you don't have an account you can checkout out the pricing and register here . If you already have an account you can login here . This service can write or read a XLSX (Microsoft Excel Open XML Spreadsheet) file from source data (API/Webhook etc) which could be used that to create a file on a FTP or send the file as an email attachment. Creating a Microsoft Excel file \u00b6 The following configuration options can be used to create the raw data for a XLSX file from mapped data. Option Description Default Required Method Select \"write\" to create a XLSX file - TRUE Headers The XLSX headers are not required as a file will generate without them with all the data; however, if they are specified only matching columns will be generated. If added the Header Key and Header Value is required for each. - FALSE Header Key The field in the data that the column corresponds to. - TRUE Header Value The name of the column header in the XLSX file. - TRUE Important Mapped service data must be contained with an ARRAY where the fields match the desired header columns. The parser does not generate the file itself rather the raw data that can be used by other services to generate a file (i.e SFTP/Email). Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the XLSX service to create a two column XLSX file from an array of data. The configuration is set up to create two headers for the columns. After the configuration is setup we can then create a schema for the output XLSX. Each field within the array can be a column (depending on how headers are setup) and each index of the array consists of a row in the XLSX. For this example we are going to switch to the ARRAY schema and add id and job as fields to that ARRAY: Given the following source data from another service: { \"data\" : [ { \"id_number\" : \"1\" , \"job_name\" : \"Scuba Diver\" }, { \"id_number\" : \"2\" , \"job_name\" : \"Plumber\" } ] } Next we can map the data array on the array in the field mapping with the id_number and job_name on id and job respectively as fields within the array: In this example the following output will be generated automatically by this service after it is run. The data will be pretty unreadable but contained within the data node: { \"data\" : \"XLSX raw data will be here\" , \"metadata\" : {} } This output data can be used to create a XLSX file like this: Reading a Microsoft Excel file \u00b6 When the read configuration is selected the service will read the raw data from a XLSX file to create output data. The output data can then be used by other services. Option Description Default Required Method Select \"read\" to read a XLSX file - TRUE Raw Data The raw data of the XLSX file that will be parsed - TRUE File Type The type of file to be read - a newer \"XLSX\" file or the older \"XLS\" file XLSX TRUE Info There is no need to configure the service data that is read. The XLSX data will automatically create the data object. Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the XLSX Service to create a data object. Given the following source data from another service: { \"data\" : \"XLSX raw data will be here\" , \"metadata\" : {} } The location of the raw XLSX data needs to be specified in the configuration: The [XLSX Service reader doesn't require any service data setup. In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { } }","title":"XLSX Service"},{"location":"reference/services/xlsx-service/#creating-a-microsoft-excel-file","text":"The following configuration options can be used to create the raw data for a XLSX file from mapped data. Option Description Default Required Method Select \"write\" to create a XLSX file - TRUE Headers The XLSX headers are not required as a file will generate without them with all the data; however, if they are specified only matching columns will be generated. If added the Header Key and Header Value is required for each. - FALSE Header Key The field in the data that the column corresponds to. - TRUE Header Value The name of the column header in the XLSX file. - TRUE Important Mapped service data must be contained with an ARRAY where the fields match the desired header columns. The parser does not generate the file itself rather the raw data that can be used by other services to generate a file (i.e SFTP/Email). Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the XLSX service to create a two column XLSX file from an array of data. The configuration is set up to create two headers for the columns. After the configuration is setup we can then create a schema for the output XLSX. Each field within the array can be a column (depending on how headers are setup) and each index of the array consists of a row in the XLSX. For this example we are going to switch to the ARRAY schema and add id and job as fields to that ARRAY: Given the following source data from another service: { \"data\" : [ { \"id_number\" : \"1\" , \"job_name\" : \"Scuba Diver\" }, { \"id_number\" : \"2\" , \"job_name\" : \"Plumber\" } ] } Next we can map the data array on the array in the field mapping with the id_number and job_name on id and job respectively as fields within the array: In this example the following output will be generated automatically by this service after it is run. The data will be pretty unreadable but contained within the data node: { \"data\" : \"XLSX raw data will be here\" , \"metadata\" : {} } This output data can be used to create a XLSX file like this:","title":"Creating a Microsoft Excel file"},{"location":"reference/services/xlsx-service/#reading-a-microsoft-excel-file","text":"When the read configuration is selected the service will read the raw data from a XLSX file to create output data. The output data can then be used by other services. Option Description Default Required Method Select \"read\" to read a XLSX file - TRUE Raw Data The raw data of the XLSX file that will be parsed - TRUE File Type The type of file to be read - a newer \"XLSX\" file or the older \"XLS\" file XLSX TRUE Info There is no need to configure the service data that is read. The XLSX data will automatically create the data object. Example configuration and mapping 1. Configuration 2. Service data setup 3. Output Data The following example shows you how to configure the XLSX Service to create a data object. Given the following source data from another service: { \"data\" : \"XLSX raw data will be here\" , \"metadata\" : {} } The location of the raw XLSX data needs to be specified in the configuration: The [XLSX Service reader doesn't require any service data setup. In this example the following output will be generated automatically by this service after it is run: { \"data\" : { \"userId\" : 1 , \"id\" : 1 , \"title\" : \"delectus aut autem\" , \"completed\" : false }, \"metadata\" : { } }","title":"Reading a Microsoft Excel file"},{"location":"setup/account/change-password/","text":"Change your password frequently We recommend changing your password periodically for security reasons. This how-to article will show you how to do that directly from within your Spojit Lite account in couple of easy steps. Instructions \u00b6 1. Log in to your account \u00b6 2. Navigate to My Account \u00b6 Click on your name in top right corner of the screen to reveal a drop-down menu, click on \u201cMy Account\u201d 3. In \"My Account\" section, switch to \u201cSecurity\u201d tab \u00b6 Enter your current password, your new password and confirmation of your new password, and hit \u201cUpdate Password\u201d","title":"Change password"},{"location":"setup/account/change-password/#instructions","text":"","title":"Instructions"},{"location":"setup/account/change-password/#1-log-in-to-your-account","text":"","title":"1. Log in to your account"},{"location":"setup/account/change-password/#2-navigate-to-my-account","text":"Click on your name in top right corner of the screen to reveal a drop-down menu, click on \u201cMy Account\u201d","title":"2. Navigate to My Account"},{"location":"setup/account/change-password/#3-in-my-account-section-switch-to-security-tab","text":"Enter your current password, your new password and confirmation of your new password, and hit \u201cUpdate Password\u201d","title":"3. In \"My Account\" section, switch to \u201cSecurity\u201d tab"},{"location":"setup/account/delete-account/","text":"Deleting your account does not take effect immediately. When you request deletion of your account, your account is scheduled for deletion at the end of current billing cycle. If you have a valid subscription or trial period and request the deletion of your account, you are able to reactivate your account at any time up until your current billing cycle ends at which time your access to the account is revoked and the account as well as all associated data are permanently deleted. Instructions \u00b6 1. Log in to your account \u00b6 2. Navigate to My Account \u00b6 Click on your name in top right corner of the screen to reveal a drop-down menu, click on \u201cMy Account\u201d 3. In \"My Account\" section, switch to \u201cDELETE\u201d tab \u00b6 To request deletion of your account, you can simply click the red 'Delete Account' button. As stated above, your account will be scheduled for deletion at the end of your billing cycle, you can reactive your account at any time by clicking the \"Reactivate Account\" button in the \"DELETE\" tab.","title":"Delete account"},{"location":"setup/account/delete-account/#instructions","text":"","title":"Instructions"},{"location":"setup/account/delete-account/#1-log-in-to-your-account","text":"","title":"1. Log in to your account"},{"location":"setup/account/delete-account/#2-navigate-to-my-account","text":"Click on your name in top right corner of the screen to reveal a drop-down menu, click on \u201cMy Account\u201d","title":"2. Navigate to My Account"},{"location":"setup/account/delete-account/#3-in-my-account-section-switch-to-delete-tab","text":"To request deletion of your account, you can simply click the red 'Delete Account' button. As stated above, your account will be scheduled for deletion at the end of your billing cycle, you can reactive your account at any time by clicking the \"Reactivate Account\" button in the \"DELETE\" tab.","title":"3. In \"My Account\" section, switch to \u201cDELETE\u201d tab"},{"location":"setup/account/reset-password/","text":"You can reset your password any time In case you forget your password, you can request for your password to be reset by following the simple instructions below. Instructions \u00b6 1. Access the Reset Password page \u00b6 Click here to access the reset password page. 2. Enter your Spojit account email address \u00b6 Enter your account email address and click the \u201cReset Password\u201d button. We will send you instructions on how to reset your password by email. 3. Check your email inbox \u00b6 Go to your email inbox and open the email we have sent you. You will find a reset password link in that email. Click the link and follow the instructions to reset your password.","title":"Reset password"},{"location":"setup/account/reset-password/#instructions","text":"","title":"Instructions"},{"location":"setup/account/reset-password/#1-access-the-reset-password-page","text":"Click here to access the reset password page.","title":"1. Access the Reset Password page"},{"location":"setup/account/reset-password/#2-enter-your-spojit-account-email-address","text":"Enter your account email address and click the \u201cReset Password\u201d button. We will send you instructions on how to reset your password by email.","title":"2. Enter your Spojit account email address"},{"location":"setup/account/reset-password/#3-check-your-email-inbox","text":"Go to your email inbox and open the email we have sent you. You will find a reset password link in that email. Click the link and follow the instructions to reset your password.","title":"3. Check your email inbox"},{"location":"setup/billing/change-billing/","text":"This article is intended for subscribers, not available on trial plan Secure storage and processing of payment information. Spojit never stores your payment details. Instead, we use 3 rd party payment processor Stripe. Spojit uses Stripe\u2019s recommended payment integration (Stripe Checkout/Elements) which enables us to remain PCI Compliant and protect your data. Your payment information is securely transmitted directly to Stripe without it passing through our servers. All our applications are secured using Transport Layer Security (TLS) making use of HTTPS. To learn more, visit https://stripe.com/docs/security . Instructions \u00b6 1. Log in to your account \u00b6 2. Navigate to Billing > Pay Method \u00b6 From the main navigational menu, expand the \u2018Billing\u2019 section and select \u2018Pay Method\u2019. Click the 'Change Method' button at the top right of the screen to change your billing details. 3. Enter new billing details and click 'UPDATE' button \u00b6","title":"Change billing"},{"location":"setup/billing/change-billing/#instructions","text":"","title":"Instructions"},{"location":"setup/billing/change-billing/#1-log-in-to-your-account","text":"","title":"1. Log in to your account"},{"location":"setup/billing/change-billing/#2-navigate-to-billing-pay-method","text":"From the main navigational menu, expand the \u2018Billing\u2019 section and select \u2018Pay Method\u2019. Click the 'Change Method' button at the top right of the screen to change your billing details.","title":"2. Navigate to Billing &gt; Pay Method"},{"location":"setup/billing/change-billing/#3-enter-new-billing-details-and-click-update-button","text":"","title":"3. Enter new billing details and click 'UPDATE' button"},{"location":"setup/billing/view-invoices/","text":"All invoices are accessible directly from within your account. All your invoices are accessible directly from your Spojit account\u2019s Billing section where you can view the summary of each invoice as well as view each invoice online or download a PDF invoice. Instructions \u00b6 1. Log in to your account \u00b6 2. Navigate to Billing > Invoices \u00b6 From the main navigational menu, expand the \u2018Billing\u2019 section and select \u2018Invoices\u2019. From the invoices table you can either view your invoice online by clicking on the blue eye icon or download each invoice as a PDF by clicking the orange download icon.","title":"View invoices"},{"location":"setup/billing/view-invoices/#instructions","text":"","title":"Instructions"},{"location":"setup/billing/view-invoices/#1-log-in-to-your-account","text":"","title":"1. Log in to your account"},{"location":"setup/billing/view-invoices/#2-navigate-to-billing-invoices","text":"From the main navigational menu, expand the \u2018Billing\u2019 section and select \u2018Invoices\u2019. From the invoices table you can either view your invoice online by clicking on the blue eye icon or download each invoice as a PDF by clicking the orange download icon.","title":"2. Navigate to Billing &gt; Invoices"},{"location":"setup/subscription/cancel-subscription/","text":"Cancelling your subscription does not take effect immediately. Cancellation does not take effect until the end of your current billing cycle. During this time, your account remains active and you may choose to reactivate your account. At the end of the billing cycle your subscription will be cancelled and no further charges will apply to your account. Instructions \u00b6 1. Log in to your account \u00b6 2. Navigate to My Account \u00b6 Click on your name in top right corner of the screen to reveal a drop-down menu, click on \u201cMy Account\u201d 3. In \"My Account\" section, switch to \"Subscription\" tab \u00b6 To cancel your subscription, simply click the red 'Cancel Subscription' button. You should see the \u2018Cancel at cycle end\u2019 flag changed to \u2018YES\u2019 and a \u2018Reactivate Subscription\u2019 button is now available instead. You can reactivate your subscription at any time up until your subscription expiry date.","title":"Cancel subscription"},{"location":"setup/subscription/cancel-subscription/#instructions","text":"","title":"Instructions"},{"location":"setup/subscription/cancel-subscription/#1-log-in-to-your-account","text":"","title":"1. Log in to your account"},{"location":"setup/subscription/cancel-subscription/#2-navigate-to-my-account","text":"Click on your name in top right corner of the screen to reveal a drop-down menu, click on \u201cMy Account\u201d","title":"2. Navigate to My Account"},{"location":"setup/subscription/cancel-subscription/#3-in-my-account-section-switch-to-subscription-tab","text":"To cancel your subscription, simply click the red 'Cancel Subscription' button. You should see the \u2018Cancel at cycle end\u2019 flag changed to \u2018YES\u2019 and a \u2018Reactivate Subscription\u2019 button is now available instead. You can reactivate your subscription at any time up until your subscription expiry date.","title":"3. In \"My Account\" section, switch to \"Subscription\" tab"},{"location":"setup/subscription/change-subscription/","text":"Instructions \u00b6 1. Log in to your account \u00b6 2. Navigate to Billing > Pricing \u00b6 From the main navigational menu, expand the \u2018Billing\u2019 section and select \u2018Pricing\u2019. Alternatively, you can also access the Pricing page from within 'My Account' section > 'Subscription' tab by clicking the 'Change Plan' button. 3. Select plan and click 'Upgrade/Downgrade Now' button \u00b6 4. Complete the change \u00b6 On the last confirmation page, make sure all details are correct and click 'GET STARTED NOW' button to switch your plan.You should see a Success screen confirming your subscription has been changed to your selected plan.","title":"Change subscription"},{"location":"setup/subscription/change-subscription/#instructions","text":"","title":"Instructions"},{"location":"setup/subscription/change-subscription/#1-log-in-to-your-account","text":"","title":"1. Log in to your account"},{"location":"setup/subscription/change-subscription/#2-navigate-to-billing-pricing","text":"From the main navigational menu, expand the \u2018Billing\u2019 section and select \u2018Pricing\u2019. Alternatively, you can also access the Pricing page from within 'My Account' section > 'Subscription' tab by clicking the 'Change Plan' button.","title":"2. Navigate to Billing &gt; Pricing"},{"location":"setup/subscription/change-subscription/#3-select-plan-and-click-upgradedowngrade-now-button","text":"","title":"3. Select plan and click 'Upgrade/Downgrade Now' button"},{"location":"setup/subscription/change-subscription/#4-complete-the-change","text":"On the last confirmation page, make sure all details are correct and click 'GET STARTED NOW' button to switch your plan.You should see a Success screen confirming your subscription has been changed to your selected plan.","title":"4. Complete the change"},{"location":"setup/subscription/create-subscription/","text":"Free trial continues when you subscribe Free trial does not necessarily end when you create a new subscription. If you just started your free trial or have some time left, you can still go ahead and subscribe for any of our plans. Your free trial will continue up until its' expiry date, at which point your subscription will take effect and your card is charged. You can check your free trial expiry date in 'My Account' > 'Subscription'. Instructions \u00b6 1. Log in to your account \u00b6 2. Navigate to Billing > Pricing \u00b6 From the main navigational menu, expand the \u2018Billing\u2019 section and select \u2018Pricing\u2019. Alternatively, you can also access the Pricing page from within 'My Account' section > 'Subscription' tab by clicking the 'Change Plan' button. 3. Select plan and click 'Get Started Now' button \u00b6 4. Complete the checkout \u00b6 Enter your billing details on the checkout page including your payment method and click on 'Subscribe'. You should see a Success message confirming your subscription.","title":"Create subscription"},{"location":"setup/subscription/create-subscription/#instructions","text":"","title":"Instructions"},{"location":"setup/subscription/create-subscription/#1-log-in-to-your-account","text":"","title":"1. Log in to your account"},{"location":"setup/subscription/create-subscription/#2-navigate-to-billing-pricing","text":"From the main navigational menu, expand the \u2018Billing\u2019 section and select \u2018Pricing\u2019. Alternatively, you can also access the Pricing page from within 'My Account' section > 'Subscription' tab by clicking the 'Change Plan' button.","title":"2. Navigate to Billing &gt; Pricing"},{"location":"setup/subscription/create-subscription/#3-select-plan-and-click-get-started-now-button","text":"","title":"3. Select plan and click 'Get Started Now' button"},{"location":"setup/subscription/create-subscription/#4-complete-the-checkout","text":"Enter your billing details on the checkout page including your payment method and click on 'Subscribe'. You should see a Success message confirming your subscription.","title":"4. Complete the checkout"}]}